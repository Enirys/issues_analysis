number,title,user,labels,created_at,updated_at,closed_at,body
50434,Fix: #50293 Bump ActiveSupport::Cache.format_version to 7.1,rubyrider,"activesupport, railties",2023-12-24T00:43:36Z,2023-12-24T06:10:32Z,2023-12-24T04:32:08Z,"### Motivation / Background
This pull request fixed the issue https://github.com/rails/rails/issues/50293 

The issue was:
```bash
% rails server
DEPRECATION WARNING: Support for `config.active_support.cache_format_version = 6.1` has been deprecated and will be removed in Rails 7.2.

Check the Rails upgrade guide at https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#new-activesupport-cache-serialization-format
for more information on how to upgrade.
```

As per the message itself the `ActiveSupport::Cache.format_version` should not have the version 6.1. But the actual version is still 6.1. So this pull request bumped the format version to the latest 7.1. This pull request also ensured a test coverage to check the current version to 7.1 as well. 


<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because `ActiveSupport::Cache.format_version` was assigned to 6.1 with rails 7.2 which is not not expected from 7.2.

### Detail

This Pull Request changes `ActiveSupport::Cache.format_version` from 6.1 to 7.1

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50433,Add flexibility to argument check in docker entrypoint,motdotla,railties,2023-12-22T23:00:12Z,2023-12-22T23:00:17Z,,"This allows prepending commands to `./bin/rails server` as the Docker CMD when running this container, e.g. `some-binary-or-script -- ./bin/rails server -b 0.0.0.0`.

### Motivation / Background

This Pull Request has been created because I wanted to prepend the `bin/rails server` command with another binary `dotenvx run --` but have it still run `db:prepare` as expected.

```
# Dockerfile
...
CMD [""dotenvx"", ""run"", ""--debug"", ""--"", ""./bin/rails"", ""server""]
```

### Detail

This Pull Request changes the docker entrypoint, so `bin/rails server` (or `bin/rails s`) can be found at any location in the run `CMD` for checking if we should run the db:prepare step.

### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* N/A Tests are added or updated if you fix a bug or add a feature.
* N/A CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50432,Document missing `:using` and `:where` options for `add_exclusion_constraint` [skip ci],fatkodima,activerecord,2023-12-22T22:37:51Z,2023-12-22T22:37:55Z,,"Exclusion constraints were added in https://github.com/rails/rails/pull/40224. 
`add_exclusion_constraint` supports `:using` and `:where` options, but these were missing from the documentation."
50431,Add `exclusion_constraint_exists?` and `unique_constraint_exists?` helpers,fatkodima,activerecord,2023-12-22T22:18:21Z,2023-12-22T22:18:45Z,,"Exclusion constraints were added in https://github.com/rails/rails/pull/40224 and unique constraints were added in https://github.com/rails/rails/pull/46192.

Both lacks an ability to check if the constraint already exists, to make, for example, adding constraints idempotent. 
This ability already exists for check constraints, for example (same for foreign keys, indexes etc)."
50430,Introduce predicate definition when defining scopes,stevepolitodesign,"activerecord, docs",2023-12-22T18:05:28Z,2023-12-24T01:55:51Z,,"### Motivation / Background

Creates parity between scopes and instances of records, similar to how [enums](https://guides.rubyonrails.org/active_record_querying.html#enums) automatically create instance methods that query whether the model belongs to that scope.

```ruby
class Book < ApplicationRecord
  scope :out_of_print, -> { where(out_of_print: true) }, predicate: true
  # Creates instance method named `within_out_of_print?`

  scope :in_print, -> { where(out_of_print: false) }, predicate: :in_print
  # Creates instance method named `in_print?`
end
```

```irb
irb> Book.out_of_print.first.within_out_of_print?
=> true

irb> Book.in_print.first.in_print?
=> true
```

### Detail

Adds `**options` argument to `scope` definition, allowing caller to optionally pass `predicate: true` or `predicate: :desired_predicate_name`.

The goal is to keep this feature opt-in to avoid automatically creating a method for each and every scope.

Additionally, we default to `within_<scope_name>` as to not conflict with the instance methods generated by [enums](https://guides.rubyonrails.org/active_record_querying.html#enums)

### Additional information

This should be compatible with [Composite Primary Keys](https://guides.rubyonrails.org/active_record_composite_primary_keys.html), but existing fixtures did not exist (as far as I could tell).

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50429,[ActionMailbox] Replace test/dummy with railtie-like test harness,zzak,actionmailbox,2023-12-22T07:30:52Z,2023-12-22T07:30:56Z,,See #50427 for context.
50428,[ActionText] Replace test/dummy with railtie-like test harness,zzak,actiontext,2023-12-22T07:30:30Z,2023-12-22T07:30:34Z,,See #50427 for context.
50427,[ActiveStorage] Replace test/dummy with railtie-like test harness,zzak,activestorage,2023-12-22T07:29:48Z,2023-12-22T12:16:52Z,,"This PR is a proof-of-concept for removing the dummy applications from [Active Storage, Action Mailbox, and Action Text]. I've split them up into separate PRs so that they are easier to review and rebase when necessary.

## Callouts

* This code is intended for feedback, on the approach and determine what follow-up work could be done
* There is still need for polish, like removing unnecessary boiler-plate, fixing CI, making sure we don't leak logs, etc.
* This doesn't replace the need for a true integration test where the application is generated at test time

## Motivation

The dummy apps were last updated in #47259 and previously in #42286.

There is an interest from inside the core team to get rid of them.

> In my option, It doesn't make sense to upgrade dummy apps inside the framework every time we change the framework itself. Probably those dummy apps get outdated daily, and it is very likely we will change Rails in a way that would break those frameworks but the test will not catch because the dummy app is outdated.
> 
> If you want to work in that direction, it would be great.

"
50425,Remove unused argument in .db_configs_with_versions,wildmaples,activerecord,2023-12-21T21:48:50Z,2023-12-21T22:23:28Z,2023-12-21T22:23:24Z,"### Motivation / Background

`db_configs` is unused in `db_configs_with_versions` 

### Detail

Remove the method argument

### Additional information


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50424,Add `explain` support for calculation methods like `count`,p8,activerecord,2023-12-21T19:56:56Z,2023-12-21T21:17:40Z,,"Allow `explain` to take an operation and column name as argument:

```ruby
User.all.explain(:count)
# => ""EXPLAIN SELECT COUNT(*) FROM `users`""

User.all.explain(:maximum, :id)
# => ""EXPLAIN SELECT MAX(`users`.`id`) FROM `users`""
```

This breaks passing options like `:analyze` and `:buffers` as arguments.
These can be passed as named argument instead:

```ruby
User.all.explain(options: [:analyze, :buffers])
# => ""EXPLAIN ANALYZE BUFFERS SELECT ...
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50423,Link to query assertions in testing guide [ci-skip],p8,docs,2023-12-21T17:03:39Z,2023-12-22T09:36:05Z,,"We can link to the recently added queries as edge guides [link ](https://edgeguides.rubyonrails.org/ruby_on_rails_guides_guidelines.html#linking-to-the-api)to edge API docs.
For readability the links are extracted.

cc @fatkodima @siaw23 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50422,Include view tests in rake stats,nhorton,railties,2023-12-21T16:47:06Z,2023-12-22T01:03:43Z,,"### Motivation / Background
When View tests were added to rails, the directory containing them was not added to the list of directories that are analyzed by the `stats` task. This adds them to the list.

There are no tests covering the set of directories analyzed or such, so no additional tests are added in this."
50421,"Using `:destroy_async` with `has_many` causes `delete_all` to default to nullify, leading to foreign key errors",ZempTime,,2023-12-21T15:53:45Z,2023-12-21T21:54:48Z,2023-12-21T21:54:48Z,"### Steps to reproduce
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""sqlite3""
end

require ""active_record""
require ""active_job/railtie""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
  end

  create_table :comments, force: true do |t|
    t.references :post, foreign_key: true, null: false
  end
end

class Post < ActiveRecord::Base
  has_many :comments, dependent: :destroy_async
end

class Comment < ActiveRecord::Base
  belongs_to :post
end

class BugTest < Minitest::Test
  def test_association_stuff
    post = Post.create!
    post.comments << Comment.create!
    
    # The following assertion will fail with:
    # ActiveRecord::NotNullViolation: SQLite3::ConstraintException: NOT NULL constraint failed: comments.post_id
    post.comments.delete_all

    assert_equal 0, post.comments.count
    assert_equal 0, Comment.count
  end
end
```

### Expected behavior
I'd expect `delete_all` to delete the table records without invoking any callbacks, and not default to the nullification strategy.

If this is the expected behavior, we'll want to add `:destroy_async` as one of the conditions here:
https://github.com/rails/rails/blob/18b8f37192430c1f468551d1006b90430dd8d61a/activerecord/lib/active_record/associations/collection_association.rb#L155

### Actual behavior
`delete_all` will nullify the foreign key, causing a foreign key error which aborts the transaction.

### System configuration
**Rails version**: 7.0.8

**Ruby version**: 3.2.2

### Other relevant facts

One of the main reasons to use `dependent: :destroy_async` is to manage situations where a record has many other related records and destroying those in the background can prevent request timeouts or out of memory errors (ex: 7.1 adds [batching](https://github.com/rails/rails/pull/44617) support).

I ran into this behavior in our tests. The resolution was explicitly specifying `delete_all(:delete_all)`. I didn't expect `delete_all` to raise this error because I'm explicitly calling it and want to sidestep all the callbacks/running background jobs for test state setup. I'm guessing this is how and where most people might run into this behavior.

In the documentation [here](https://edgeguides.rubyonrails.org/association_basics.html), there is a note:

> :destroy_async: when the object is destroyed, an ActiveRecord::DestroyAssociationAsyncJob job is enqueued which will call destroy on its associated objects. Active Job must be set up for this to work. Do not use this option if the association is backed by foreign key constraints in your database. The foreign key constraint actions will occur inside the same transaction that deletes its owner.

However since `delete_all` skips callbacks, I don't think this applies.

I understand that the current behavior might be intentional, but if it's determined to be an oversight and there's interest in updating it, I would be more than happy to get a pr together for this. Please let me know what would be helpful."
50420,Doc: Prevent `Attributes` to be a link [ci-skip] (#50419),p8,activerecord,2023-12-21T15:52:43Z,2023-12-21T15:53:27Z,2023-12-21T15:53:23Z,
50419,Doc: Prevent `Attributes` to be a link [ci-skip],okuramasafumi,activerecord,2023-12-21T15:38:53Z,2023-12-21T17:21:58Z,2023-12-21T15:51:20Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

https://api.rubyonrails.org/classes/ActiveRecord/DelegatedType.html

`Attributes` is a link to https://api.rubyonrails.org/classes/ActiveRecord/Attributes.html but this is not correct.

### Detail

This Pull Request prevents `Attributes` to be a link.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50418,Use buffered read while generating Blob checksum to improve memory,the-spectator,activestorage,2023-12-21T14:54:58Z,2023-12-22T03:14:08Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->
While debugging the memory issue in our app, we noticed that a large amount of strings were generated and then thrown away when uploading the file. It was done while generating the checksum for the blob.

### Detail

Optimize memory utilization by using a buffer while reading in chunks.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

Benchmark on a new rails project, while uploading 500 mb file on disk storage.

Before:
```
Total allocated: 527552462 bytes (24333 objects)
Total retained:  460335 bytes (3386 objects)
```

After:
```
Total allocated: 8503524 bytes (24239 objects)
Total retained:  460367 bytes (3386 objects)
```
### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50417,Add `to_sql` support for calculation methods like `count`,p8,activerecord,2023-12-21T10:53:01Z,2023-12-21T20:20:36Z,,"### Motivation / Background

As the calculation methods directly return a result, it's not possible to call `to_sql` on the query.

By allowing `to_sql` to take an operation and column name as argument we can return the SQL:

```ruby
User.all.to_sql(:count)
# => ""SELECT COUNT(*) FROM `users`""

User.all.to_sql(:maximum, :id)
# => ""SELECT MAX(`users`.`id`) FROM `users`""
```

### Additional information

Combining `count` with a `group` is not yet supported.
I'd like to add the same functionality to `explain`.
Related issue adding `:delete_all`: https://github.com/rails/rails/pull/37975

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50415,I want to optimize rake commands on CI,alpaca-tc,,2023-12-21T06:25:39Z,2023-12-21T06:57:51Z,2023-12-21T06:53:53Z,"### Steps to reproduce

The default Rails configuration runs `eager_load!` in the test environment when `ENV['CI']` is enabled.
https://github.com/rails/rails/blob/155ec68/railties/lib/rails/generators/rails/app/templates/config/environments/test.rb.tt#L18
This setting is fine for running all tests, but is an inadequate setting value for running some rake commands.

For example, when running tests in CI, almost all projects will use `./bin/rake db:setup` and so on.
There are few cases where eager_load is effective for running this command.
In my opinion is that the default value should be a setting that does not call `eager_load!` to run tasks like `db:setup`.
However, this is not a significant problem, as it can be customized individually for each application. So this issue can be closed.

If you have any suggestions, please comment.

### System configuration
**Rails version**: main
"
50414,Improve Action Text System Test coverage,seanpdoyle,actiontext,2023-12-21T01:41:54Z,2023-12-21T01:41:58Z,,"### Motivation / Background

Introduce the `ActionText::RichTextEditorTest` to exercise Action Text's integration with Active Storage. First, assert that Action Text renders an Active Storage blob preview of the image within the `<trix-editor>` element prior to persisting the rich-text record. Next, assert that Active Storage renders the uploaded file within the rendered rich-text content.

### Detail

In addition to expanding System Test coverage, this commit also alters the existing `ActionText::SystemTestHelperTest` coverage to utilize Capybara's built-in [:element][] selector as an alternative to CSS. The `:element` selector supports arbitrary keyword arguments as HTML attribute filters. For example, `input: true` as a filter translates to asserting the presence of any `[input]` attribute. Similarly, it enables assertions with Ruby strings instead of interpolating Ruby strings **into** CSS selectors.

[:element]: https://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Selector

### Additional information

Related to https://github.com/rails/rails/pull/49527 and https://github.com/rails/rails/pull/46807.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50413,Wrong Ruby Version in Gemfile,VSPPedro,,2023-12-21T00:44:58Z,2023-12-21T19:33:02Z,2023-12-21T17:20:15Z,"### Steps to reproduce

1. Install ruby 3.0.3-rc1.
2. Create a new rails project using  7.0.8: `rails _7.0.8_ new project`
3. Result:

```
     ...
      create  tmp/storage
      create  tmp/storage/.keep
      remove  config/initializers/cors.rb
      remove  config/initializers/new_framework_defaults_7_0.rb
      run  bundle install
      Your Ruby version is 3.3.0.rc1, but your Gemfile specified 3.3.0
```

### Expected behavior
The ruby version in the Gemfile should be 3.3.0-rc1.

### Actual behavior
The ruby version in the Gemfile is 3.3.0. Because of that it raises an error:

`Your Ruby version is 3.3.0.rc1, but your Gemfile specified 3.3.0`

### System configuration
**Rails version**: 7.0.8
**Ruby version**: 3.3.0-rc-1


### Context
I'm working on updating tests for a Ruby library, and the CI is trying to run Rails using different Ruby versions. I'm thinking about whether I should skip this scenario.

Thank you for everything. You guys are the best!"
50412,Fix `find_by` for finding by associations with composite primary keys,fatkodima,activerecord,2023-12-21T00:17:06Z,2023-12-21T21:46:25Z,,"Fixes #50411.

Array values are ignored in line 281 in `StatementCache.unsupported_value?(value)` so we can safely just skip array primary keys."
50411,`find_by` is broken when passing an instance that uses composite primary keys,claracodes,"activerecord, attached PR, With reproduction steps",2023-12-20T22:27:50Z,2023-12-21T08:36:20Z,,"Big thanks for adding support for composite primary keys. We’ve implemented them and seen big performance gains - we’re using them on partitioned tables! 
However, `find_by` seems to be broken when trying to pass in an instance that uses composite primary keys.

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""activerecord"", ""7.1.2""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :users, primary_key: [:id, :company_id], force: true do |t|
    t.integer :id
    t.integer :company_id
  end

  create_table :profiles, primary_key: :id, force: true do |t|
    t.integer :user_id
    t.integer :company_id
  end
end

class User < ActiveRecord::Base
  has_one :profile
end

class Profile < ActiveRecord::Base
  belongs_to :user, query_constraints: [:user_id, :company_id]
end

class BugTest < Minitest::Test
  def test_find_by
    user = User.create!(id: [1, 1])
    profile = Profile.create(id: 1, user_id: 1, company_id: 1)

    assert_equal profile, Profile.find_by(user: user)
  end
end
```"
50410,Fix async queries to work with query cache,fatkodima,activerecord,2023-12-20T21:52:06Z,2023-12-21T10:11:49Z,2023-12-21T09:53:33Z,"Fixes #50399.

cc @byroot (as implementor of async queries)"
50409,Generates wrong sql query for infinite date ranges,owen2345,,2023-12-20T19:41:28Z,2023-12-20T19:46:11Z,2023-12-20T19:46:10Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
Patient.where(created_at: Date.today..).to_sql
=> ""SELECT \""patients\"".* FROM \""patients\"" WHERE \""patients\"".\""created_at\"" >= '2023-12-20'""
Patient.where(created_at: Date.today...).to_sql
=> ""SELECT \""patients\"".* FROM \""patients\"" WHERE \""patients\"".\""created_at\"" >= '2023-12-20'""
Patient.where(created_at: ..Date.today).to_sql
=> ""SELECT \""patients\"".* FROM \""patients\"" WHERE \""patients\"".\""created_at\"" <= '2023-12-20'""
Patient.where(created_at: ...Date.today).to_sql
=> ""SELECT \""patients\"".* FROM \""patients\"" WHERE \""patients\"".\""created_at\"" < '2023-12-20'""
```

### Expected behavior
The expected behavior for the second example is `created_at > '2023-12-20'` without equal (excluding the first day) similar to the fourth one.

### Actual behavior
The resulting query is not excluding the first date.

### System configuration
**Rails version**:
- Rails 7.1
- Also tried in Rails 6.1

**Ruby version**:
- ruby 3.1.4p223 (2023-03-30 revision 957bb7cb81) [x86_64-linux]
- Also tried in 2.6
"
50408,Fix ensuring 7.2 defaults listed in configuring,skipkayhil,docs,2023-12-20T19:04:06Z,2023-12-21T22:20:20Z,,"Previously, because the 7.2 header was missing from configuring.md, railspect was not checking that newly introduced 7.2 framework defaults are listed.

This commit adds the header to ensure they get checked, and then also fixes an issue that occurs if a versioned section has no defaults listed.
"
50407,Fix NFD for add_autoload_paths_to_load_path,skipkayhil,railties,2023-12-20T18:44:00Z,2023-12-21T22:40:15Z,,"### Motivation / Background

Previously, this value was listed as a regular configuration that could be applied by uncommenting a line in new_framework_defaults. However, the autoloader is configured before initializers run so configuring this value here will have no effect.

### Detail

This commit fixes the issue by suggesting to add the configuration to config/application.rb instead of new_framework_defaults.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50406,Change `active_model.i18n_customize_full_message` default from `false` to `true`,stevepolitodesign,"activemodel, railties, docs",2023-12-20T13:18:26Z,2023-12-20T13:21:12Z,,"### Motivation / Background

Follow-up to #32956 and #35789

The introduction of this configuration in #32956 stated that:

> The goal of this PR is to make it easier for an app to transition from
a #{attribute} #{message} to a #{message}, full_message error format.

However, because the default value was set to `false`, this feature was difficult to discover.

Moving forward, consumers will be able to [override the format of an individual attribute](https://guides.rubyonrails.org/configuring.html#config-active-model-i18n-customize-full-message) by default.

```yml
en:
  activemodel: # or activerecord:
    errors:
      models:
        person:
          # Override the format for all Person attributes:
          format: ""Invalid %{attribute} (%{message})""
          attributes:
            age:
              # Override the format for the age attribute:
              format: ""%{message}""
              blank: ""Please fill in your %{attribute}""
```

### Detail

`config.active_model.i18n_customize_full_message` defaults to `true` for `config.load_defaults 7.2` and above

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50405,"Add condensed #inspect for Pool, Adapter, Config",skipkayhil,activerecord,2023-12-20T04:21:25Z,2023-12-20T04:25:17Z,,"### Motivation / Background

Previously, it was very easy to accidentally leak a database password in production logs if an error ends up calling inspect on a ConnectionPool or an individual connection (Adapter). This is due to the default `#inspect` output for Pools and Adapters being unnecessarily large, and both currently including passwords (through the DatabaseConfig of a Pool, and the internal configuration of an Adapter).

### Detail

This commit addresses these issues by defining a custom `#inspect` for ConnectionPool, AbstractAdapter, and DatabaseConfig. The condensed `#inspect` only includes a few valuable fields instead of all of the internals, which prevents both the large output and passwords from being included.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50404,Bump `psych` gem to 5.1.2,jonathanhefner,,2023-12-20T00:09:39Z,2023-12-20T00:33:48Z,2023-12-20T00:33:48Z,"This fixes the following [error](https://buildkite.com/rails/rails/builds/102870#018c8481-6fcf-4984-9633-0cc0a426a4f7/1188-1253) for the guides build:

  ```
  Traceback (most recent call last):
    13: from bug_report_templates/action_controller.rb:5:in `<main>'
    12: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/inline.rb:42:in `gemfile'
    11: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler.rb:403:in `with_unbundled_env'
    10: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler.rb:649:in `with_env'
     9: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler.rb:403:in `block in with_unbundled_env'
     8: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/inline.rb:51:in `block in gemfile'
     7: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/settings.rb:142:in `temporary'
     6: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/inline.rb:66:in `block (2 levels) in gemfile'
     5: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/runtime.rb:24:in `setup'
     4: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/runtime.rb:24:in `map'
     3: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/spec_set.rb:165:in `each'
     2: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/spec_set.rb:165:in `each'
     1: from /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/runtime.rb:25:in `block in setup'
  /usr/local/bundle/gems/bundler-2.4.22/lib/bundler/runtime.rb:304:in `check_for_activated_spec!': You have already activated psych 5.1.1.1, but your Gemfile requires psych 5.1.2. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)
  ```

This is similar to #45052.  Eventually, this should be fixed permanently by either rubygems/rubygems#5529 or rubygems/rubygems#5535.
"
50403,Fix inclusion of `url_helpers` module in concern,jonathanhefner,actionpack,2023-12-19T23:54:42Z,2023-12-20T00:13:10Z,2023-12-20T00:13:10Z,"Follow-up to #46530.

The dynamically generated `url_helpers` module is an `ActiveSupport::Concern`.  Therefore, when it is included directly in another `ActiveSupport::Concern`, its `included` block is deferred until the latter concern is itself included elsewhere.  Thus, in that case, the call to `base._routes` in `def self.included(base)` will raise `NoMethodError` because the `included` block will not yet have defined the `_routes` method.

This commit prevents the error by first checking if `base` responds to `_routes`.
"
50402,Example Docker file fails (7.1.2),brodjustice,,2023-12-19T22:13:27Z,2023-12-23T15:06:07Z,,"### Steps to reproduce
```
$ rails new empty_rails_app -d postgresql
...
$ cd empty_rails_app/
$ docker build --progress=plain -t empty_rails_app .
...
$ docker run -p 3000:3000 empty_app_2
bin/rails aborted!
ArgumentError: Missing `secret_key_base` for 'production' environment, set this string with `bin/rails credentials:edit`
/rails/config/environment.rb:5:in `<main>'
Tasks: TOP => db:prepare => db:load_config => environment
(See full trace by running task with --trace)
```
This can be worked around by removing the `config/master.key` from `.dockerignore` and setting `config/master.key` file to readable. Maybe I'm missing an essential concept, but while this it might be called bad practice to share credentials in this manner, I don't see how the Docker image could ever function without master.key access to those credentials.

I've also considered and tried passing the credentials via `.env` and `docker-compose.yml` but this also fails because of the same issue: the `master.key` needs to be in the Docker image.

Or am I missing something obvious?

### System configuration
Rails 7.1.2
Ruby 3.0.0p0
"
50401,"Fragment caching raises ""undefined method `capture' for ""<!DOCTYPE html>.....""",lfekson,,2023-12-19T21:40:39Z,2023-12-22T09:28:44Z,2023-12-22T09:28:44Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->
config.load_defaults 7.1
With haml using:
- cache any_object do
  =# any_output, e.g.
  = render 'something'

I was able to receive an output without raising error only when manually replaced in actionview-7.1.2/lib/action_view/helpers/cache_helper.rb, line 285:
fragment = output_buffer.capture(&block)
onto:
fragment = @output_buffer.capture(&block)

As debugging showed, output_buffer's class is ""String"" that doesn't have the ""capture"" method.

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# Your reproduction script goes here
```

### Expected behavior
<!-- Tell us what should happen -->
Rendering 'something'

### Actual behavior
<!-- Tell us what happens instead -->
Raised an error: undefined method `capture' for ""<!DOCTYPE html>....full html text of the page where the fragment should be rendered...""
### System configuration
**Rails version**:
7.1.2
**Ruby version**:
3.2.2"
50400,Add `active_record.config.validate_migration_timestamps` config option.,adrianna-chang-shopify,"activerecord, railties, docs",2023-12-19T19:50:45Z,2023-12-19T20:06:30Z,,"### Motivation / Background

Take two of https://github.com/rails/rails/pull/50205, reverted [here](https://github.com/rails/rails/pull/50231).

As discussed in the revert PR, forward-dated migrations are the main reason hand-edited migrations can be problematic.
Rather than validating that a timestamp is a ""real"" timestamp in the form we expect, as proposed in the first PR, we reject any migrations with timestamp prefixes greater than ""one day from the current timestamp"". The `1.day` allows us to forward date migrations within a narrow range, when e.g. copying engine migrations, while preventing prefixes that would actually pose problems for future migration generation.

### Detail

Adds an `active_record.config.validate_migration_timestamps` config option. When set, an `ActiveRecord::InvalidMigrationTimestampError` will be raised if the timestamp prefix for a migration is more than a day ahead of the timestamp associated with the current time. This is done to prevent forward-dating of migration files, which can impact migration generation and other migration commands.

It is turned off by default, but will be turned on for applications starting in Rails 7.2.

### Additional information

There was some discussion in https://github.com/rails/rails/pull/50231 about string vs numeric based maxes. We are inconsistent with which one we use: `#next_migration_version` uses a string-based max:
https://github.com/rails/rails/blob/b0048c787ae44700ab4194251342dfe6f9fb0059/activerecord/lib/active_record/migration.rb#L1118-L1120

But `#current_version` uses a numeric one:
https://github.com/rails/rails/blob/b0048c787ae44700ab4194251342dfe6f9fb0059/activerecord/lib/active_record/migration.rb#L1302-L1305

For the purposes of this PR, I believe we should compare using numeric-based maxes: this ensures that migration prefixes that are too long (ie. more than 14 digits) will be flagged as invalid. There was a [previous PR](https://github.com/rails/rails/pull/43604) that changed `#next_migration_version` to use an integer-based maxed, but it was reverted because it broke existing migrations with timestamps that were too long (one of the cases we're trying to prevent with this PR). We may want to consider bringing in those changes so that we consistently assume ""current migration"" to mean ""migration with numeric-based max version"".

It's also worth noting that it's hard for existing applications to opt-into this if they already have problematic migrations (as we do at Shopify). Should we enforce that applications roll these migrations up, or modify the filenames? 

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc @eileencodes @matthewd @fxn "
50399,async_count returns a Integer instead of a Promise,guillaumebriday,"activerecord, attached PR",2023-12-19T16:00:51Z,2023-12-22T05:42:06Z,2023-12-22T05:42:06Z,"### Steps to reproduce

When being cached, sometime the `#async_count` method returns an Integer instead of a Promise


```ruby
projects = policy_scope(Project)
projects.async_count
#  CACHE Project Count (0.1ms)  SELECT COUNT(*) FROM ""projects"" WHERE ""projects"".""team_id"" = $1

#=> 792 
```

I found a workaround adding useless a `where`
```ruby
projects = policy_scope(Project.where('1=1')
projects.async_count
#=> #<ActiveRecord::Promise status=pending>
```

### Expected behavior
In my views, I call it with `.value` and it raises an error because it's an Integer and not a `#<ActiveRecord::Promise status=pending>`


### System configuration
**Rails version**: Latest

**Ruby version**: 3.2.2
"
50398,"API only, multi DB. Undefined method `id' for {}:Hash",maxrosecollins,more-information-needed,2023-12-19T14:56:31Z,2023-12-22T13:23:55Z,,"I am upgrading to 7.1.2 from 7.0.7.
It is api_only.
I am using multi db.

I am pretty sure it is related to adding session management back into an api only app and using multi db but I don't know the root cause.

After upgrading, to 7.1.2 I get errors on all request specs.


```
undefined method `id' for {}:Hash

> To access an interactive console with this error, point your browser to: /__better_errors


spec/requests/domains_spec.rb, line 298
---------------------------------------

ruby
  293     end
  294
  295     # Test suite for GET /v1/domains
  296     describe 'GET /v1/domains' do
  297       before do
> 298         get '/v1/domains',
  299             headers: {'ACCEPT'        => 'application/json',
  300                       'Authorization' => ""Bearer #{token}""}
  301       end
  302
  303       context 'when domain exists' do


App backtrace
-------------

 - spec/requests/domains_spec.rb:298:in `block (3 levels) in <top (required)>'
 - spec/rails_helper.rb:103:in `block (3 levels) in <top (required)>'
 - spec/rails_helper.rb:102:in `block (2 levels) in <top (required)>'

Full backtrace
--------------

 - rack (2.2.8) lib/rack/session/abstract/id.rb:329:in `current_session_id'
 - rack (2.2.8) lib/rack/session/abstract/id.rb:335:in `session_exists?'
 - actionpack (7.1.2) lib/action_dispatch/request/session.rb:230:in `exists?'
 - actionpack (7.1.2) lib/action_dispatch/request/session.rb:270:in `load!'
 - actionpack (7.1.2) lib/action_dispatch/request/session.rb:258:in `load_for_write!'
 - actionpack (7.1.2) lib/action_dispatch/request/session.rb:185:in `update'
 - actionpack (7.1.2) lib/action_dispatch/request/session.rb:20:in `create'
 - actionpack (7.1.2) lib/action_dispatch/middleware/session/abstract_store.rb:76:in `prepare_session'
 - rack (2.2.8) lib/rack/session/abstract/id.rb:265:in `context'
 - rack (2.2.8) lib/rack/session/abstract/id.rb:260:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/cookies.rb:689:in `call'
 - rack-attack (6.7.0) lib/rack/attack.rb:127:in `call'
 - activerecord (7.1.2) lib/active_record/middleware/database_selector.rb:67:in `block in call'
 - activesupport (7.1.2) lib/active_support/notifications/instrumenter.rb:58:in `instrument'
 - activerecord (7.1.2) lib/active_record/middleware/database_selector/resolver.rb:58:in `block in read_from_primary'
 - activerecord (7.1.2) lib/active_record/connection_handling.rb:361:in `with_role_and_shard'
 - activerecord (7.1.2) lib/active_record/connection_handling.rb:147:in `connected_to'
 - activerecord (7.1.2) lib/active_record/middleware/database_selector/resolver.rb:57:in `read_from_primary'
 - activerecord (7.1.2) lib/active_record/middleware/database_selector/resolver.rb:37:in `read'
 - activerecord (7.1.2) lib/active_record/middleware/database_selector.rb:77:in `select_database'
 - activerecord (7.1.2) lib/active_record/middleware/database_selector.rb:66:in `call'
 - rack (2.2.8) lib/rack/etag.rb:27:in `call'
 - rack (2.2.8) lib/rack/conditional_get.rb:27:in `call'
 - rack (2.2.8) lib/rack/head.rb:12:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'
 - activesupport (7.1.2) lib/active_support/callbacks.rb:101:in `run_callbacks'
 - actionpack (7.1.2) lib/action_dispatch/middleware/callbacks.rb:28:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/actionable_exceptions.rb:16:in `call'
 - appsignal (3.4.10) lib/appsignal/rack/rails_instrumentation.rb:32:in `call_with_appsignal_monitoring'
 - appsignal (3.4.10) lib/appsignal/rack/rails_instrumentation.rb:17:in `call'
 - better_errors (2.10.1) lib/better_errors/middleware.rb:87:in `protected_app_call'
 - better_errors (2.10.1) lib/better_errors/middleware.rb:82:in `better_errors_call'
 - better_errors (2.10.1) lib/better_errors/middleware.rb:60:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/debug_exceptions.rb:29:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
 - railties (7.1.2) lib/rails/rack/logger.rb:37:in `call_app'
 - railties (7.1.2) lib/rails/rack/logger.rb:24:in `block in call'
 - activesupport (7.1.2) lib/active_support/tagged_logging.rb:135:in `block in tagged'
 - activesupport (7.1.2) lib/active_support/tagged_logging.rb:39:in `tagged'
 - activesupport (7.1.2) lib/active_support/tagged_logging.rb:135:in `tagged'
 - activesupport (7.1.2) lib/active_support/broadcast_logger.rb:240:in `method_missing'
 - railties (7.1.2) lib/rails/rack/logger.rb:24:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/remote_ip.rb:92:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/request_id.rb:28:in `call'
 - rack (2.2.8) lib/rack/runtime.rb:22:in `call'
 - activesupport (7.1.2) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
 - actionpack (7.1.2) lib/action_dispatch/middleware/static.rb:25:in `call'
 - rack (2.2.8) lib/rack/sendfile.rb:110:in `call'
 - rack-cors (2.0.1) lib/rack/cors.rb:102:in `call'
 - railties (7.1.2) lib/rails/engine.rb:529:in `call'
 - rack-test (2.1.0) lib/rack/test.rb:360:in `process_request'
 - rack-test (2.1.0) lib/rack/test.rb:153:in `request'
 - actionpack (7.1.2) lib/action_dispatch/testing/integration.rb:288:in `process'
 - actionpack (7.1.2) lib/action_dispatch/testing/integration.rb:16:in `get'
 - actionpack (7.1.2) lib/action_dispatch/testing/integration.rb:379:in `get'
 - spec/requests/domains_spec.rb:298:in `block (3 levels) in <top (required)>'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:457:in `instance_exec'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:365:in `run'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:529:in `block in run_owned_hooks_for'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:528:in `run_owned_hooks_for'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:615:in `block in run_example_hooks_for'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:614:in `run_example_hooks_for'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:484:in `run'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:505:in `run_before_example'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:261:in `block in run'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:511:in `block in with_around_and_singleton_context_hooks'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:468:in `block in with_around_example_hooks'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:486:in `block in run'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:626:in `block in run_around_example_hooks_for'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:352:in `call'
 - rspec-rails (6.1.0) lib/rspec/rails/adapters.rb:75:in `block (2 levels) in <module:MinitestLifecycleAdapter>'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:457:in `instance_exec'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:390:in `execute_with'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:628:in `block (2 levels) in run_around_example_hooks_for'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:352:in `call'
 - spec/rails_helper.rb:103:in `block (3 levels) in <top (required)>'
 - database_cleaner-core (2.0.1) lib/database_cleaner/strategy.rb:30:in `cleaning'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/3.2.0/forwardable.rb:240:in `cleaning'
 - database_cleaner-core (2.0.1) lib/database_cleaner/cleaners.rb:34:in `block (2 levels) in cleaning'
 - database_cleaner-core (2.0.1) lib/database_cleaner/cleaners.rb:35:in `cleaning'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/3.2.0/forwardable.rb:240:in `cleaning'
 - spec/rails_helper.rb:102:in `block (2 levels) in <top (required)>'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:457:in `instance_exec'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:390:in `execute_with'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:628:in `block (2 levels) in run_around_example_hooks_for'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:352:in `call'
 - webmock (3.18.1) lib/webmock/rspec.rb:37:in `block (2 levels) in <top (required)>'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:457:in `instance_exec'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:390:in `execute_with'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:628:in `block (2 levels) in run_around_example_hooks_for'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:352:in `call'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:629:in `run_around_example_hooks_for'
 - rspec-core (3.12.2) lib/rspec/core/hooks.rb:486:in `run'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:468:in `with_around_example_hooks'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:511:in `with_around_and_singleton_context_hooks'
 - rspec-core (3.12.2) lib/rspec/core/example.rb:259:in `run'
 - rspec-core (3.12.2) lib/rspec/core/example_group.rb:646:in `block in run_examples'
 - rspec-core (3.12.2) lib/rspec/core/example_group.rb:642:in `run_examples'
 - rspec-core (3.12.2) lib/rspec/core/example_group.rb:607:in `run'
 - rspec-core (3.12.2) lib/rspec/core/example_group.rb:608:in `block in run'
 - rspec-core (3.12.2) lib/rspec/core/example_group.rb:608:in `run'
 - rspec-core (3.12.2) lib/rspec/core/example_group.rb:608:in `block in run'
 - rspec-core (3.12.2) lib/rspec/core/example_group.rb:608:in `run'
 - rspec-core (3.12.2) lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'
 - rspec-core (3.12.2) lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'
 - rspec-core (3.12.2) lib/rspec/core/configuration.rb:2070:in `with_suite_hooks'
 - rspec-core (3.12.2) lib/rspec/core/runner.rb:116:in `block in run_specs'
 - rspec-core (3.12.2) lib/rspec/core/reporter.rb:74:in `report'
 - rspec-core (3.12.2) lib/rspec/core/runner.rb:115:in `run_specs'
 - rspec-core (3.12.2) lib/rspec/core/runner.rb:89:in `run'
 - rspec-core (3.12.2) lib/rspec/core/runner.rb:71:in `run'
 - rspec-core (3.12.2) lib/rspec/core/runner.rb:45:in `invoke'
 - rspec-core (3.12.2) exe/rspec:4:in `<top (required)>'
 - /Users/max/.rbenv/versions/3.2.2/bin/rspec:25:in `<top (required)>'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/cli/exec.rb:58:in `kernel_load'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/cli/exec.rb:23:in `run'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/cli.rb:492:in `exec'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/vendor/thor/lib/thor/command.rb:27:in `run'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/vendor/thor/lib/thor/invocation.rb:127:in `invoke_command'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/vendor/thor/lib/thor.rb:392:in `dispatch'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/cli.rb:34:in `dispatch'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/vendor/thor/lib/thor/base.rb:485:in `start'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/cli.rb:28:in `start'
 - bundler (2.4.19) exe/bundle:37:in `block in <top (required)>'
 - /Users/max/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/bundler/friendly_errors.rb:117:in `with_friendly_errors'
 - bundler (2.4.19) exe/bundle:29:in `<top (required)>'
 - /Users/max/.rbenv/versions/3.2.2/bin/bundle:25:in `<main>'
```"
50397,Merge pull request #50367 from mechanicles/update-api-doc-for-activer…,p8,activerecord,2023-12-19T11:54:52Z,2023-12-19T12:10:00Z,2023-12-19T12:09:57Z,
50396,Make the Relation -> Model delegation stricter,casperisfine,activerecord,2023-12-19T10:50:02Z,2023-12-22T12:32:05Z,,"In https://github.com/rails/rails/pull/50395 I noticed lots of methods are delegated from `Relation` to the model. The intent of this code is to allow using use defined class methods like scopes.

But because of this autmated delegation it allowed calling any `ActiveRecord::Base` class method on a `Relation`, which in itself may be desireable, however we very wastefully define the delegator on the first call, and worse we wrap it with a current scope setter.

So I think we should be more strict about it.

NB: this of course breaks a tons of test, so I need to find more time to finish this, and it likely need a config flag and a deprecation notice of some sort. Or alternatively we can just accept this API, but delegate all the `AR::Base` class methods eagerly and without the scoping overhead. TBD."
50395,Fix `Relation#transaction` to not apply a default scope,casperisfine,activerecord,2023-12-19T10:31:14Z,2023-12-19T10:54:51Z,2023-12-19T10:50:54Z,"Fix: https://github.com/rails/rails/issues/50368

When called on a scope it would go through the default scoping delegator that applies a default scope, which make no sense.
"
50394,Merge pull request #50217 from fastjames/document_variant_preprocesse…,p8,docs,2023-12-19T10:00:39Z,2023-12-19T10:29:59Z,2023-12-19T10:29:56Z,
50393,Backport a35ceb429,p8,"actionmailer, actionpack, actioncable, actionmailbox",2023-12-19T09:37:05Z,2023-12-19T09:53:45Z,2023-12-19T09:53:41Z,
50392,[FIX] For Sqlite3 db:drop command output,maniSHarma7575,"activerecord, railties",2023-12-18T18:24:47Z,2023-12-24T13:00:15Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created to fix a bug #50391 

Whille executing command, in case when database already dosen't exist.

```shell
bin/rails db:drop
Dropped database 'storage/development.sqlite3'
Database 'storage/test.sqlite3' does not exist
```

It is observed that for the non-existing database `storage/development.sqlite3` on the disk, the command output displays `Dropped database 'storage/development.sqlite3'`. Instead, it should state `Database 'storage/development.sqlite3' does not exist`.

---
In the ActiveRecord SQLite3 adapter code at 

https://github.com/rails/rails/blob/462e8e8b1c74d46a78e7077c5b07bfbc6fab08b0/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb#L31-L39

It appears that every time a new connection to SQLite3 is established, an attempt is made to create a database due to the default configuration settings.

This behavior is defined in the SQLite3 Ruby gem code, specifically at 

https://github.com/sparklemotion/sqlite3-ruby/blob/302e9c0328bff2bb04e1d4a54614140ca06f3648/lib/sqlite3/database.rb#L91-L101

You can also refer to the relevant documentation [here](https://rubydoc.info/gems/sqlite3/SQLite3%2FDatabase:initialize), which outlines supported permission options.

Each time a new connection to the database is established (used for dropping the database or executing other commands), the connection first attempts to create a database and then proceeds to drop it.

An issue arises when an exception is raised in the code snippet below, as it doesn't work as intended. The SQLite3 database is created with the default mode of `READWRITE | CREATE`. Consequently, a new database is created every time, even if it already exists. 

```ruby
rescue Errno::ENOENT => error 
   if error.message.include?(""No such file or directory"") 
     raise ActiveRecord::NoDatabaseError 
   else 
     raise 
   end 
 end 
```

### Detail

In this PR, I have made a modification to the default mode of SQLite3 from `READWRITE|CREATE` to just `READWRITE`. Consequently, if the database does not exist, it will now raise an exception `SQLite3::CantOpenException`.

This adjustment aligns with a similar approach used for MySQL and Postgres. Specifically, when establishing a connection, the database is not created automatically; instead, it is handled separately to ensure consistent behavior across different database systems.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->
1. Default Mode in Sqlite3: https://rubydoc.info/gems/sqlite3/SQLite3%2FDatabase:initialize
2. Why Sqlite3 have not made it READWRITE as default mode?: https://github.com/sparklemotion/sqlite3-ruby/pull/174

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #50391 50391]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50391,With SQLite3 Database incorrect command output for 'bin/rails db:drop'.,maniSHarma7575,,2023-12-18T18:23:37Z,2023-12-19T16:01:28Z,,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->

1. Create a new Rails app.
```ruby
rails new sqlite-db-drop
```

2. Run the `db:drop` command.
```ruby
bin/rails db:drop
```

3. Output of the above command.
```shell
Dropped database 'storage/development.sqlite3'
Database 'storage/test.sqlite3' does not exist
```

Upon closer inspection, it is observed that for the non-existing database `storage/development.sqlite3` on the disk, the command output displays `Dropped database 'storage/development.sqlite3'`. Instead, it should state `Database 'storage/development.sqlite3' does not exist`.

### Research:

Upon investigating the code, I discovered the following:

In the ActiveRecord SQLite3 adapter code at 

https://github.com/rails/rails/blob/462e8e8b1c74d46a78e7077c5b07bfbc6fab08b0/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb#L31-L39

It appears that every time a new connection to SQLite3 is established, an attempt is made to create a database due to the default configuration settings.

This behavior is defined in the SQLite3 Ruby gem code, specifically at 

https://github.com/sparklemotion/sqlite3-ruby/blob/302e9c0328bff2bb04e1d4a54614140ca06f3648/lib/sqlite3/database.rb#L91-L101

You can also refer to the relevant documentation [here](https://rubydoc.info/gems/sqlite3/SQLite3%2FDatabase:initialize), which outlines supported permission options.

Each time a new connection to the database is established (used for dropping the database or executing other commands), the connection first attempts to create a database and then proceeds to drop it.

An issue arises when an exception is raised in the code snippet below, as it doesn't work as intended. The SQLite3 database is created with the default mode of `READWRITE | CREATE`. Consequently, a new database is created every time, even if it already exists. 

```ruby
rescue Errno::ENOENT => error 
   if error.message.include?(""No such file or directory"") 
     raise ActiveRecord::NoDatabaseError 
   else 
     raise 
   end 
 end 
```

You can read about. Why Sqlite3 Gem has not forced Safe Check on the database initialization only if database exist?
[https://github.com/sparklemotion/sqlite3-ruby/pull/174](https://github.com/sparklemotion/sqlite3-ruby/pull/174)


Have created a PR to fix: [https://github.com/rails/rails/pull/50392](https://github.com/rails/rails/pull/50392)

### Expected behavior
<!-- Tell us what should happen -->

```shell
bin/rails db:drop
Database 'storage/development.sqlite3' does not exist
Database 'storage/test.sqlite3' does not exist
```

### Actual behavior
<!-- Tell us what happens instead -->

```shell
bin/rails db:drop
Dropped database 'storage/development.sqlite3'
Database 'storage/test.sqlite3' does not exist
```

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50390,Handle `as: :html` in `IntegrationTest`,seanpdoyle,actionpack,2023-12-18T16:06:17Z,2023-12-18T19:47:45Z,,"### Motivation / Background

Closes [#50345][]

### Detail

First, handle the exception mentioned in [#50345][]:

```
BugTest#test_params_with_htm_content_type:
NoMethodError: undefined method `to_html' for {:name=>""Muad'Dib""}:Hash
    .../actionpack/lib/action_dispatch/testing/request_encoder.rb:39:in `encode_params'
    .../actionpack/lib/action_dispatch/testing/integration.rb:251:in `process'
```

When an `ActionDispatch::Testing::RequestEncoder` registered through a call to `register_encoder` does not define a `:param_encoder` keyword argument **and** the params do not respond to a `to_$MIME` method, fallback to returning the `params` themselves, unchanged. This behavior is what's implemented by the private `IdentityEncoder` class, so mimic it for defined encoders.

### Additional information

Next, special case handling requests with `as: :html`. Passing `as: :html` implies that the request parameters will come from a `POST` body encoded as `text/html`. That isn't entirely true -- browsers will encode `POST` parameters as with the `Content-Type:` header set to either [application/x-www-form-urlencoded][] or [multipart/form-data][]. This commit skips setting the `CONTENT_TYPE` Rack header when processed with `as: :html`.

[#50345]: https://github.com/rails/rails/issues/50345
[application/x-www-form-urlencoded]: https://developer.mozilla.org/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data#the_post_method
[multipart/form-data]: https://developer.mozilla.org/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data#the_enctype_attribute


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50389,[Fix #49520] `strict_loading` violations ignored on `has_many` with query methods,joshuay03,activerecord,2023-12-18T10:50:06Z,2023-12-19T09:19:16Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fixes https://github.com/rails/rails/issues/49520

### Detail

Updates `ActiveRecord::Relation#exec_queries` to raise or log on a strict loading violation. This gets called when association queries are executed with query methods.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50388,testmit,pavelmyslik,activejob,2023-12-18T10:09:28Z,2023-12-18T10:10:43Z,2023-12-18T10:10:36Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

This Pull Request changes [REPLACE ME]

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50387,fixed grammer errors,therealPatrick,docs,2023-12-18T08:54:50Z,2023-12-18T09:54:53Z,2023-12-18T09:51:28Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

This Pull Request changes [REPLACE ME]

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50386,Fix issue with destroy after RestartParentTransaction and SavepointTransaction rollback,mguan2020,activerecord,2023-12-18T00:03:36Z,2023-12-23T23:03:24Z,,"

<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created in order to fix issue #50338.

### Detail

This Pull Request provides a working solution for the destroy function for the cases of RestartParentTransaction and SavepointTransaction. 

Previously, the destroy function was not properly removing entries from the database for the RestartParentTransaction and SavepointTransaction. If @_trigger_destroy_callback is true at the beginning of the destroy function, destroy_row would never be invoked.

This Pull Request will ensure destroy_row is invoked when @_trigger_destroy_callback is true at the beginning of the destroy function. This will remove the corresponding row from the database. Otherwise, if @_trigger_destroy_callback is false, destroy_row is only invoked if persisted? is true.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50385,Rails forces excessive Redis connections,nhorton,,2023-12-17T22:14:03Z,2023-12-18T15:37:30Z,2023-12-18T15:32:40Z,"### Steps to reproduce
Configure ActionCable, Sidekiq, and Caching to all use Redis. Then throw in any direct use via redis-rb or such for good measure.
The 3 native rails ones will all generate their own pools of connections. If you had 20 threads, you would likely end up with ~60+ connections while you could never really use all of those because one thread can't be using a connection for each use at the same time.

Note that even if there is the instinctive ""you should not put Cache and Queueing in the same redis instance"" it still makes sense to have 2 redis instances in total - one for persistent items like queues and another for transient items like cache. And users should be able to make use of those connections for the same types of purposes the same way they can with ActiveRecord::Base.connection.

### Expected behavior
There should be an ability to configure anything in Rails that needs access to Redis using a ConnectionPool instead of config settings only. That way users can create their pools once and pass them in. It would be even better if there was a concept of a default redis pool that you could set and others would fall back to.

Additionally, it would be great if you could access the connection pool instance each service was using similar to ActiveRecord::Base.connection.

### Actual behavior
Separate Redis pools get generated that can't be accessed.

### System configuration
Validated on Rails 7.0.4 and 7.1 but I have not looked further back.
"
50384,Fix railspect not validating alphabetical order,skipkayhil,docs,2023-12-17T22:09:32Z,2023-12-21T22:19:01Z,,"One of the original goals of these checks was to validate that configuration stays in alphabetical order, as this provides a deterministic order for the configuration to be validated against.

However, it appears there has been a regression in that check and it has only been validating that configurations are present. This commit restores the ordering check and then uses `railspect configuration . -a` to fix the configurations that ended up out of order.

This should be backported to 7-1-stable"
50382,Fix multi-database polymorphic preloading with equivalent table names,summera,activerecord,2023-12-17T18:28:32Z,2023-12-17T19:53:35Z,,"### Motivation / Background
I work with an application that utilizes a polymorphic association that spans multiple databases. A basic example would be something like this, where `Notification#notifiable` could reference `Comment` or `OtherNamespace::Comment`, which exist on two separate databases but happen to have the same table name:

```ruby
# app/models/notification.rb
class Notification < ApplicationRecord
  belongs_to :notifiable, polymorphic: true
end

# app/models/comment.rb
class Comment < ApplicationRecord
  self.table_name = ""comments""
end

# app/models/application_record.rb
class ApplicationRecord < ActiveRecord::Base
  self.abstract_class = true

  connects_to database: { writing: :primary }
end

# app/models/other_namespace/comment.rb
module OtherNamespace
  class Comment < OtherNamespace::Base
    self.table_name = ""comments""
  end
end

# app/models/other_namespace/base.rb
module OtherNamespace
  class Base < ApplicationRecord
    self.abstract_class = true

    connects_to database: { writing: :other_namespace }
  end
end
```

Prior to upgrading to Rails 7.0, the following would preload both `Comment`s and `OtherNamespace::Comment`s:

```ruby
comment = Comment.create
other_namespace_comment = OtherNamespace::Comment.create

Notification.create(notifiable: comment)
Notification.create(notifiable: other_namespace_comment)

# Prior to Rails 7.0, this would preload the related `Comment`s and `OtherNamespace::Comment`s
Notification.all.includes(:notifiable)
```

After upgrading to Rails 7.0, we noticed that only `Comment`s were being preloading and `OtherNamespace::Comment`s were not. 

After some digging, I tracked the difference in behavior down to [PR #41385](https://github.com/rails/rails/pull/41385). In this PR there were some optimizations made to combine association preloading into less queries when possible. This was later optimized a bit further in [PR #41597](https://github.com/rails/rails/pull/41597). 

From what I can tell [`ActiveRecord::Associations::Preloader::Batch#group_and_load_similar`](https://github.com/rails/rails/blob/a7f1d63a3bf92e5c07400afefd6016cdf48208a2/activerecord/lib/active_record/associations/preloader/batch.rb#L40), queries are being grouped and loaded. That comparison is being done based on [`ActiveRecord::Associations::Preloader::Association::LoaderQuery#eql?`](https://github.com/rails/rails/blob/a7f1d63a3bf92e5c07400afefd6016cdf48208a2/activerecord/lib/active_record/associations/preloader/association.rb#L17), which is the following:

```ruby
  def eql?(other)
    association_key_name == other.association_key_name &&
      scope.table_name == other.scope.table_name &&
      scope.values_for_queries == other.scope.values_for_queries
  end
```

As you can see, in the polymorphic use case shown above the loaders for `OtherNamespace::Comment` and `Comment` would be considered equivalent since they have the same `association_key_name` (`notifiable` in this case), `table_name` (`comments` in this case), and `values_for_queries` (`id` in this case). By comparing them this way it results in  `OtherNamespace::Comment` not being preloaded after the Rails 7.0 upgrade.  

### Detail
Using the existing models and relationships in the test suite, I was able to generate a failing test case. I've also included a proposed fix which adds a loader comparison on `scope.connection_specification_name`. The idea is to prevent two tables with the same name on two separate databases from being considered equivalent when preloading associations.

Another idea would be to replace the `table_name` comparison with `name` (the class name). I tried this and all tests pass, but I'm unsure if this could be problematic in other cases, such as when using single table inheritance. If there's another way of achieving the desired result with a different comparison, I'm happy to change the logic!

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

Happy to add a Changelog entry if it's needed."
50381,Fix `guides/active_record_migrations.rb` template to use the current migrations version,fatkodima,docs,2023-12-17T09:37:51Z,2023-12-22T07:36:58Z,2023-12-17T14:10:20Z,"Fixes https://github.com/rails/rails/issues/50380.

The regression was introduced in https://github.com/rails/rails/pull/50317/files#diff-6353d2979a5ebdafe8f7d31056f091de3e47b9bfafe5503630e5b0da951d8d3dR10-R12

cc @zzak @yahonda "
50380,"active_record_migrations.rb raises `Unknown migration version ""7.2""; expected one of ""4.2"", ""5.0"", ""5.1"", ""5.2"", ""6.0"", ""6.1"", ""7.0"", ""7.1"" (ArgumentError)`",yahonda,ci issues,2023-12-17T08:34:03Z,2023-12-17T14:10:21Z,2023-12-17T14:10:21Z,"There is a CI failure at https://buildkite.com/rails/rails/builds/102815#018c7671-f43c-4e7a-a654-03893ab28d0f/1384-1395

### Steps to reproduce

```ruby
git clone https://github.com/rails/rails
cd rails/guides/bug_report_templates
ruby active_record_migrations.rb
```

### Expected behavior
It should pass.

### Actual behavior
It raises `Unknown migration version ""7.2""; expected one of ""4.2"", ""5.0"", ""5.1"", ""5.2"", ""6.0"", ""6.1"", ""7.0"", ""7.1"" (ArgumentError)`.

```ruby
$ ruby active_record_migrations.rb
Fetching gem metadata from https://rubygems.org/...........
Resolving dependencies....
Using rake 13.1.0
Using base64 0.2.0
Using timeout 0.4.1
Using mini_mime 1.1.5
Using date 3.3.4
Using bundler 2.3.22
Using io-console 0.7.1
Using stringio 3.1.0
Using webrick 1.8.1
Using thor 1.3.0
Using sqlite3 1.6.9 (x86_64-linux)
Using net-protocol 0.2.2
Using psych 5.1.1.1
Using reline 0.4.1
Using connection_pool 2.4.1
Using ruby2_keywords 0.0.5
Using minitest 5.20.0
Using mutex_m 0.2.0
Using builder 3.2.4
Using erubi 1.12.0
Using racc 1.7.3
Using crass 1.0.6
Using rack 3.0.8
Using drb 2.2.0
Using nokogiri 1.15.5 (x86_64-linux)
Using net-imap 0.4.8
Using net-pop 0.1.2
Using net-smtp 0.4.0
Using rdoc 6.6.2
Using websocket-extensions 0.1.5
Using bigdecimal 3.1.5
Using marcel 1.0.2
Using concurrent-ruby 1.2.2
Using nio4r 2.7.0
Using loofah 2.22.0
Using rack-session 2.0.0
Using rack-test 2.1.0
Using websocket-driver 0.7.6
Using mail 2.8.1
Using irb 1.10.1
Using rackup 2.1.0
Using zeitwerk 2.6.12
Using i18n 1.14.1
Using rails-html-sanitizer 1.6.0
Using tzinfo 2.0.6
Using activesupport 7.1.2
Using rails-dom-testing 2.2.0
Using globalid 1.2.1
Using activemodel 7.1.2
Using actionview 7.1.2
Using activejob 7.1.2
Using activerecord 7.1.2
Using actionpack 7.1.2
Using activestorage 7.1.2
Using actionmailer 7.1.2
Using actionmailbox 7.1.2
Using actioncable 7.1.2
Using actiontext 7.1.2
Using railties 7.1.2
Using rails 7.1.2
-- create_table(:payments, {:force=>true})
D, [2023-12-17T17:32:35.577211 #823527] DEBUG -- :    (0.0ms)  DROP TABLE IF EXISTS ""payments""
D, [2023-12-17T17:32:35.577532 #823527] DEBUG -- :    (0.1ms)  CREATE TABLE ""payments"" (""id"" integer PRIMARY KEY AUTOINCREMENT NOT NULL, ""amount"" decimal(10,0) DEFAULT 0 NOT NULL)
   -> 0.0078s
D, [2023-12-17T17:32:35.578502 #823527] DEBUG -- :    (0.1ms)  CREATE TABLE ""schema_migrations"" (""version"" varchar NOT NULL PRIMARY KEY)
D, [2023-12-17T17:32:35.579533 #823527] DEBUG -- :    (0.1ms)  CREATE TABLE ""ar_internal_metadata"" (""key"" varchar NOT NULL PRIMARY KEY, ""value"" varchar, ""created_at"" datetime(6) NOT NULL, ""updated_at"" datetime(6) NOT NULL)
D, [2023-12-17T17:32:35.592536 #823527] DEBUG -- :   ActiveRecord::InternalMetadata Load (1.1ms)  SELECT * FROM ""ar_internal_metadata"" WHERE ""ar_internal_metadata"".""key"" = ? ORDER BY ""ar_internal_metadata"".""key"" ASC LIMIT 1  [[nil, ""environment""]]
D, [2023-12-17T17:32:35.592848 #823527] DEBUG -- :   ActiveRecord::InternalMetadata Create (0.1ms)  INSERT INTO ""ar_internal_metadata"" (""key"", ""value"", ""created_at"", ""updated_at"") VALUES ('environment', 'development', '2023-12-17 08:32:35.592603', '2023-12-17 08:32:35.592607') RETURNING ""key""
/home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activerecord-7.1.2/lib/active_record/migration/compatibility.rb:11:in `find': Unknown migration version ""7.2""; expected one of ""4.2"", ""5.0"", ""5.1"", ""5.2"", ""6.0"", ""6.1"", ""7.0"", ""7.1"" (ArgumentError)

          raise ArgumentError, ""Unknown migration version #{version.inspect}; expected one of #{versions.sort.join(', ')}""
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activerecord-7.1.2/lib/active_record/migration.rb:613:in `[]'
	from active_record_migrations.rb:34:in `<main>'
yahonda@myryzen:~/src/github.com/rails/rails/guides/bug_report_templates$
yahonda@myryzen:~/src/github.com/rails/rails/guides/bug_report_templates$
yahonda@myryzen:~/src/github.com/rails/rails/guides/bug_report_templates$
yahonda@myryzen:~/src/github.com/rails/rails/guides/bug_report_templates$
yahonda@myryzen:~/src/github.com/rails/rails/guides/bug_report_templates$ ruby active_record_migrations.rb
Fetching gem metadata from https://rubygems.org/...........
Resolving dependencies....
Using rake 13.1.0
Using base64 0.2.0
Using bigdecimal 3.1.5
Using concurrent-ruby 1.2.2
Using connection_pool 2.4.1
Using ruby2_keywords 0.0.5
Using minitest 5.20.0
Using mutex_m 0.2.0
Using builder 3.2.4
Using erubi 1.12.0
Using racc 1.7.3
Using crass 1.0.6
Using rack 3.0.8
Using nio4r 2.7.0
Using websocket-extensions 0.1.5
Using zeitwerk 2.6.12
Using timeout 0.4.1
Using marcel 1.0.2
Using mini_mime 1.1.5
Using date 3.3.4
Using bundler 2.3.22
Using io-console 0.7.1
Using stringio 3.1.0
Using webrick 1.8.1
Using thor 1.3.0
Using sqlite3 1.6.9 (x86_64-linux)
Using drb 2.2.0
Using i18n 1.14.1
Using tzinfo 2.0.6
Using nokogiri 1.15.5 (x86_64-linux)
Using rack-session 2.0.0
Using rack-test 2.1.0
Using websocket-driver 0.7.6
Using net-protocol 0.2.2
Using psych 5.1.1.1
Using reline 0.4.1
Using rackup 2.1.0
Using activesupport 7.1.2
Using loofah 2.22.0
Using net-imap 0.4.8
Using net-pop 0.1.2
Using net-smtp 0.4.0
Using rdoc 6.6.2
Using rails-dom-testing 2.2.0
Using irb 1.10.1
Using globalid 1.2.1
Using activemodel 7.1.2
Using activejob 7.1.2
Using rails-html-sanitizer 1.6.0
Using mail 2.8.1
Using activerecord 7.1.2
Using actionview 7.1.2
Using actionpack 7.1.2
Using actioncable 7.1.2
Using activestorage 7.1.2
Using actionmailer 7.1.2
Using railties 7.1.2
Using actionmailbox 7.1.2
Using actiontext 7.1.2
Using rails 7.1.2
-- create_table(:payments, {:force=>true})
D, [2023-12-17T17:33:01.178868 #823958] DEBUG -- :    (0.0ms)  DROP TABLE IF EXISTS ""payments""
D, [2023-12-17T17:33:01.179208 #823958] DEBUG -- :    (0.1ms)  CREATE TABLE ""payments"" (""id"" integer PRIMARY KEY AUTOINCREMENT NOT NULL, ""amount"" decimal(10,0) DEFAULT 0 NOT NULL)
   -> 0.0077s
D, [2023-12-17T17:33:01.180190 #823958] DEBUG -- :    (0.1ms)  CREATE TABLE ""schema_migrations"" (""version"" varchar NOT NULL PRIMARY KEY)
D, [2023-12-17T17:33:01.181233 #823958] DEBUG -- :    (0.1ms)  CREATE TABLE ""ar_internal_metadata"" (""key"" varchar NOT NULL PRIMARY KEY, ""value"" varchar, ""created_at"" datetime(6) NOT NULL, ""updated_at"" datetime(6) NOT NULL)
D, [2023-12-17T17:33:01.194049 #823958] DEBUG -- :   ActiveRecord::InternalMetadata Load (0.9ms)  SELECT * FROM ""ar_internal_metadata"" WHERE ""ar_internal_metadata"".""key"" = ? ORDER BY ""ar_internal_metadata"".""key"" ASC LIMIT 1  [[nil, ""environment""]]
D, [2023-12-17T17:33:01.194366 #823958] DEBUG -- :   ActiveRecord::InternalMetadata Create (0.1ms)  INSERT INTO ""ar_internal_metadata"" (""key"", ""value"", ""created_at"", ""updated_at"") VALUES ('environment', 'development', '2023-12-17 08:33:01.194117', '2023-12-17 08:33:01.194121') RETURNING ""key""
/home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activerecord-7.1.2/lib/active_record/migration/compatibility.rb:11:in `find': Unknown migration version ""7.2""; expected one of ""4.2"", ""5.0"", ""5.1"", ""5.2"", ""6.0"", ""6.1"", ""7.0"", ""7.1"" (ArgumentError)

          raise ArgumentError, ""Unknown migration version #{version.inspect}; expected one of #{versions.sort.join(', ')}""
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activerecord-7.1.2/lib/active_record/migration.rb:613:in `[]'
	from active_record_migrations.rb:34:in `<main>'
$
```
### System configuration
**Rails version**: main branch

**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]
"
50379,Enable `Minitest/NonExecutableTestMethod` cop,yahonda,,2023-12-17T07:09:42Z,2023-12-17T14:31:23Z,,"### Motivation / Background

This pull request enables `Minitest/NonExecutableTestMethod` cop to find non-executed test that is out of `ActiveSupport::TestCase` and its subclasses.

This cop is based on the request since there was a test that is not executed found at https://github.com/rails/rails/pull/50334#issuecomment-1851411434 and implemented to RuboCop Minitest 0.34.0 via https://github.com/rubocop/rubocop-minitest/issues/279

### Detail

This cop works as follows.
As of right now, there is no offenses by reverting the merge commit via #50334

```ruby
$ git revert -m 1 9517841
$ bundle exec rubocop
Inspecting 3254 files
... snip ...

Offenses:

activerecord/test/cases/assertions/query_assertions_test.rb:27:5: W: Minitest/NonExecutableTestMethod: Test method should be defined inside a test class to ensure execution.
    def test_assert_no_queries ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

3254 files inspected, 1 offense detected
$
```

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.


"
50378,Ignore warnings like `warning: net-smtp which is not part of the default gems since Ruby 3.1.0.`,yahonda,railties,2023-12-17T06:48:50Z,2023-12-17T14:11:00Z,2023-12-17T14:11:00Z,"### Motivation / Background

This commit addresses the CI failure against Ruby master branch. https://buildkite.com/rails/rails/builds/102575#018c4147-8760-48ac-812c-4e63fbe242fa

### Detail
* Steps to reproduce

Install `ruby 3.3.0dev`
```ruby
git clone https://github.com/rails/rails
cd rails/railties
rm ../Gemfile.lock
bundle
bin/test test/application/bin_setup_test.rb -n test_bin_setup_output
```

* Without this commit

```ruby
$ ruby -v
ruby 3.3.0dev (2023-12-16T21:45:33Z master d7d10f3ee8) [x86_64-linux]
$ rm ../Gemfile.lock ; bundle ; bin/test test/application/bin_setup_test.rb -n test_bin_setup_output
... snip ...
F

Failure:
ApplicationTests::BinSetupTest#test_bin_setup_output [/home/yahonda/src/github.com/rails/rails/railties/test/application/bin_setup_test.rb:51]:
--- expected
+++ actual
@@ -2,10 +2,12 @@
 The Gemfile's dependencies are satisfied

 == Preparing database ==
+/home/yahonda/.rbenv/versions/trunk/lib/ruby/gems/3.3.0+0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38: warning: mutex_m was loaded from the standard library, but will no longer be part of the default gems since Ruby 3.4.0. Add mutex_m to your Gemfile or gemspec.
 Created database 'app_development'
 Created database 'app_test'

 == Removing old logs and tempfiles ==
+/home/yahonda/.rbenv/versions/trunk/lib/ruby/gems/3.3.0+0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38: warning: mutex_m was loaded from the standard library, but will no longer be part of the default gems since Ruby 3.4.0. Add mutex_m to your Gemfile or gemspec.

 == Restarting application server ==
 ""

bin/test test/application/bin_setup_test.rb:30

Finished in 12.553516s, 0.0797 runs/s, 0.0797 assertions/s.
1 runs, 1 assertions, 1 failures, 0 errors, 0 skips
$
```

### Additional information

This failure reproduces since this commit: 
https://github.com/ruby/ruby/commit/d411d8f5fe80b9c8f741ee03f91a670d5620917c


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.


"
50377,"Revert ""Lock `bigdecimal` version to 3.1.4 or lower""",yahonda,activesupport,2023-12-17T06:08:34Z,2023-12-17T06:23:45Z,2023-12-17T06:23:44Z,"Reverts rails/rails#50331

Since `bigdecimal` 3.1.5 has been released https://rubygems.org/gems/bigdecimal/versions/3.1.5 we no longer need to pin the bigdecimal version to 3.1.4 or lower.

Refer to the background information for this change.
https://github.com/ruby/ruby/pull/9163#issuecomment-1846994447"
50376,Add sqlite3 back to bug templates that need it,skipkayhil,docs,2023-12-17T05:15:20Z,2023-12-17T22:28:00Z,2023-12-17T06:23:08Z,"Ref #50317

The sqlite3 gem was removed during the merging of main and gem templates, but the resulting templates still depend on it.
"
50375,Fix issue with regression in integration tests when providing as: :html,mguan2020,actionpack,2023-12-17T04:56:12Z,2023-12-18T16:07:30Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created in order to fix issue #50345. 

### Detail

This Pull Request solves the problem in Rails 7.1 where providing as: :html in the integration test for ActionDispatch causes a ""undefined method to_html"" error to be thrown.

To solve this issue, this Pull Request registers a param_encoder in addition to a HTML encoder in order to perform the request to the controller. 

As a result, both the new tests provided in content_type_test.rb as well as the original tests for ActionDispatch are working.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50374,Replace outdated links with correct links,euglena1215,,2023-12-17T04:52:01Z,2023-12-17T05:09:49Z,2023-12-17T05:08:55Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->


### Detail

The changes to https://github.com/rails/rails/commit/860ab28ff5ebfe78e0b2e259ce4db743a77f5e8b have merged the bug report templates into one. 
Since the template for the main branch has been removed, the link that was previously in CONTRIBUTING.md is invalid.

So I replaced them with the changed links.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] ~~Tests are added or updated if you fix a bug or add a feature.~~
* [ ] ~~CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.~~
"
50373,Expose `assert_queries_match` and `assert_no_queries_match` assertions,fatkodima,"activerecord, actionview, activestorage, actiontext",2023-12-16T21:45:34Z,2023-12-21T13:36:49Z,2023-12-21T11:59:10Z,"Follow up to https://github.com/rails/rails/pull/50281.

The originally introduced (exposed) helpers are a bit limited. For example:
1. we must specify an exact number of queries we are expecting
2. only application related queries are considered, schema/transactions related queries are always skipped
3. only one matcher can be specified

These limitations work most of the time for regular users, but not when trying to test some lower behavior (for example, inside some gem's tests).

For example, it was not possible to test that an index and a foreign key are created when running some operation.
Now, this can be done via:
```ruby
assert_queries_match(/create index/i, include_schema: true) do
  do_something
end
```

cc @byroot @p8 
"
50372, Fix bug #50315: Foreign key don't handle derive_fk_query_constraints properly.,rubyrider,activerecord,2023-12-16T16:56:57Z,2023-12-19T19:47:47Z,2023-12-19T19:47:40Z,"This Pull Request fix the bug https://github.com/rails/rails/issues/50315

possibly could fix this issue https://github.com/rails/rails/issues/50256 as well.

### Detail

Foreign key don't handle derive_fk_query_constraints properly. 

### Additional information

Here `#derive_fk_query_constraints` returns an array of two keys. But foreign key should only return the derived foreign key which is the last element of the #derive_fk_query_constraints.

```ruby
     def foreign_key(infer_from_inverse_of: true)
        @foreign_key ||= if options[:query_constraints]
          options[:query_constraints].map { |fk| fk.to_s.freeze }.freeze
        elsif options[:foreign_key]
          options[:foreign_key].to_s
        else
          derived_fk = derive_foreign_key(infer_from_inverse_of: infer_from_inverse_of)

          if active_record.has_query_constraints?
            derived_fk = derive_fk_query_constraints(derived_fk).last
          end

          derived_fk
        end
      end
```

A test coverage has been provided: https://github.com/rails/rails/pull/50372/files#diff-62fd84c8da9a63fa077a6fdea8acaac0df9e275b580aa1359a5c9416077fcd60R502

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50371,Ensure SQLite transaction default to IMMEDIATE mode,fractaledmind,activerecord,2023-12-16T16:24:50Z,2023-12-23T10:56:26Z,,"### Motivation / Background

As SQLite's popularity grows as a production database engine for Rails applications, so does the need for robust and resilient default configuration. One of the most common issues faced when using SQLite in a Rails application are the occasional ActiveRecord::StatementInvalid (SQLite3::BusyException: database is locked) exceptions. These occur when a DEFERRED transaction attempts to acquire the SQLite database lock in the middle of a transaction once hitting a write query while another connection holds the database lock. Since this occurs in the middle of a transaction, SQLite does not attempt to retry to transaction by calling the set `busy_handler`/`busy_timeout` callback, but instead immediately errors with a busy exception.

### Detail

This Pull Request sets the `default_transaction_mode` to `:immediate` on the `@connection_parameters`, which are passed to the `SQLite3::Database` instance being initialized. This option is picked up by the `SQLite3::Database` object and drives that implementation of `#transaction`:  https://github.com/sparklemotion/sqlite3-ruby/blob/302e9c0328bff2bb04e1d4a54614140ca06f3648/lib/sqlite3/database.rb#L133

If truly desired, application developers can manually set their own `default_transaction_mode` by defining that key in the `config/database.yml` file.

### Additional information

Alongside https://github.com/rails/rails/pull/50370, this PR stabilizes SQLite's ability to handle concurrency without throwing intermittent but frequent busy exceptions.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50370,Improve concurrency support for SQLite3,fractaledmind,activerecord,2023-12-16T16:08:19Z,2023-12-21T10:46:13Z,2023-12-21T10:46:13Z,"### Motivation / Background

As SQLite's popularity grows as a production database engine for Rails applications, so does the need for robust and resilient default configuration. One of the most common issues faced when using SQLite in a Rails application are the occasional `ActiveRecord::StatementInvalid (SQLite3::BusyException: database is locked)` exceptions. These occur when a connection cannot acquire SQLite's database lock within the allotted timeout.

### Detail

This is prone to happen when running your Rails with a multi-threaded server, like Puma in clustered mode, because the SQLite `busy_timeout` C function does not release the Ruby global interpreter lock (GIL). So, while one connection is attempting to acquire the SQLite database lock, no other Ruby threads can perform work or progress. In order to improve concurrency support for ActiveRecord's SQLite3 adapter, we must implement a custom Ruby `busy_handler` function that still respects the timeout, releases the GIL, and doesn't overly thrash.

This implementation achieves these goals by 

1. `sleep`ing while waiting to retry again, thus releasing the GIL
2. only checking if the timeout has passed every 100 retries to minimize Ruby execution
3. `sleep`ing 60 microseconds to ensure other Threads have an opportunity to acquire the GIL and progress

### Additional information

I have written a more in-depth exploration of this problem on my blog: https://fractaledmind.github.io/2023/12/11/sqlite-on-rails-improving-concurrency/. 

Together with https://github.com/rails/rails/pull/50371, this PR is one-half of the story of stabilizing the SQLite3 adapters ability to handle concurrency.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50369,logs are not generating in production.log file when rails app environment is production,mamirad,,2023-12-16T09:51:24Z,2023-12-17T15:00:16Z,2023-12-17T15:00:16Z,"### Steps to reproduce

```ruby
config.logger = ActiveSupport::Logger.new(STDOUT)
  .tap  { |logger| logger.formatter = ::Logger::Formatter.new }
  .then { |logger| ActiveSupport::TaggedLogging.new(logger) }
```
the above code in production.rb file is not generating logs in production.log file

### Expected behavior
<!-- Tell us what should happen -->
logs should be generated in production.log file when application is running in production environment
### Actual behavior
<!-- Tell us what happens instead -->
rails app is running in production environment but
logs are not logging in production.log file

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.0.2
"
50368,ActiveRecord 7.1 regression in model scoping in callback when created from association,segiddins,"activerecord, With reproduction steps",2023-12-16T04:43:45Z,2023-12-19T16:35:03Z,2023-12-19T10:50:55Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""rubygems""
require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :versions, force: true do |t|
    t.references :api_key
    t.references :rubygem
    t.string :number
    t.string :platform
    t.boolean :latest, default: false
    t.boolean :indexed, default: false
  end

  create_table :rubygems, force: true do |t|
  end
  
  create_table :api_keys, force: true do |t|
  end
end

class Version < ActiveRecord::Base
  belongs_to :rubygem
  belongs_to :api_key
  
  after_save :reorder_versions, if: -> { saved_change_to_id? }
  delegate :reorder_versions, to: :rubygem
end

class Rubygem < ActiveRecord::Base
  has_many :versions
  
  def reorder_versions
      logger.info Version.all.to_sql

      versions_of_platforms = versions
        .group_by(&:platform)
        
      versions_of_platforms.each_value do |platforms|
        Version.find(platforms.max.id).update_column(:latest, true)
      end
    end
end

class ApiKey < ActiveRecord::Base
  has_many :versions
end

class BugTest < Minitest::Test
  def test_association_stuff
    gem1 = Rubygem.create!
    api_key = ApiKey.create!
    v1 = Version.create!(rubygem: gem1, platform: ""ruby"", indexed: true)
    v2 = Version.create!(rubygem: gem1, api_key:, platform: ""ruby"", indexed: true)
    
    api_key.versions.create_with(indexed: true).find_or_create_by!(
      rubygem: gem1, number: ""0.1.0"", platform: ""ruby""
    )

    assert_equal 3, gem1.reload.versions.count
  end
end
```

### Expected behavior

On Rails 7.0.x, this test case passes
The logged `Version.all.to_sql` in the callback is `SELECT ""versions"".* FROM ""versions""`

### Actual behavior

On Rails 7.1.2, the test case fails with

```
ActiveRecord::RecordNotFound: Couldn't find Version with 'id'=1 [WHERE ""versions"".""api_key_id"" = ?]
    /Users/segiddins/.gem/ruby/3.2.2/gems/activerecord-7.1.0/lib/active_record/relation/finder_methods.rb:416:in `raise_record_not_found_exception!'
    /Users/segiddins/.gem/ruby/3.2.2/gems/activerecord-7.1.0/lib/active_record/relation/finder_methods.rb:522:in `find_one'
    /Users/segiddins/.gem/ruby/3.2.2/gems/activerecord-7.1.0/lib/active_record/relation/finder_methods.rb:499:in `find_with_ids'
    /Users/segiddins/.gem/ruby/3.2.2/gems/activerecord-7.1.0/lib/active_record/relation/finder_methods.rb:92:in `find'
    /Users/segiddins/.gem/ruby/3.2.2/gems/activerecord-7.1.0/lib/active_record/querying.rb:23:in `find'
    /Users/segiddins/.gem/ruby/3.2.2/gems/activerecord-7.1.0/lib/active_record/core.rb:245:in `find'
    Untitled.rb:59:in `block in reorder_versions'
    Untitled.rb:58:in `each_value'
    Untitled.rb:58:in `reorder_versions'
    Untitled.rb:46:in `reorder_versions'
```

And the logged query is `SELECT ""versions"".* FROM ""versions"" WHERE ""versions"".""api_key_id"" = 1`

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50367,Update API doc for ActiveRecord::Relation#none?/#any?/#one? [ci-skip],mechanicles,activerecord,2023-12-15T18:06:35Z,2023-12-18T07:58:58Z,2023-12-18T07:26:22Z,"### Motivation / Background

I checked https://github.com/rails/rails/issues/50327 and noticed that clear API docs are needed. Some developers are using these methods incorrectly, thinking they're only for Active Record Relation and pass condition argument, but they actually work with Enumerable. These methods treat that argument as a pattern argument.

### Detail

I have added required API doc for these methods so developers won't get confused with the argument meaning.

### Additional information

Original [PR](https://github.com/rails/rails/pull/46728) which updated these methods to support pattern argument.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] [N/A] Tests are added or updated if you fix a bug or add a feature.
* [x] [N/A]  CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50366,`csrf_meta_tags`: use `safe_join` instead of `html_safe`,smmr0,actionview,2023-12-15T17:05:41Z,2023-12-15T18:20:45Z,,"### Motivation / Background

While these are currently equivalent in `csrf_meta_tags`, it's safer for potential future code. It also helps communicate to users that `html_safe` can be a dangerous method and that there are safer alternatives to it.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50365,Document `action_mailer.file_settings` [ci-skip],mkasberg,docs,2023-12-15T15:54:46Z,2023-12-17T09:12:24Z,2023-12-16T11:46:09Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

I was reading the Action Mailer guide and noticed the settings and defaults for the `:file` delivery method were poorly documented. These docs were originally added back in #13728. #44422 added links to the relevant sections of the Configuration guide, but did not link `config.action_mailer.file_settings` because the Configuration guide is actually missing that section.


### Detail

I added a short section to the Configuration guide for `config.action_mailer.file_settings` and linked to it from the Action Mailer guide, following the style of the other delivery methods. Like other delivery methods, the relevant options for `file_settings` come from the allowed options of the `Mail::FileDelivery` class in the mail gem.


### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

Here's where Rails sets up this delivery method with the default location:
https://github.com/rails/rails/blob/9064735ec5cd3c679f8ffabc42532dd85223af58/actionmailer/lib/action_mailer/delivery_methods.rb#L30-L31

And here's where the mail gem uses the options:
https://github.com/mikel/mail/blob/10a4443b9d4ffa71b9ad643ad86cc23ccc99f0f3/lib/mail/network/delivery_methods/file_delivery.rb#L21

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] [N/A] Tests are added or updated if you fix a bug or add a feature.
* [x] [N/A] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50364,ApplicationTests::AssetsTest#test_precompile_shouldn't_use_the_digests_present_in_manifest.json test failures,voxik,,2023-12-15T11:54:50Z,2023-12-15T11:54:50Z,,"### Steps to reproduce

Running Railties test suite on Fedora Rawhide, I am observing following test error more often then not (two last runs):

~~~
$  bundle exec ruby -Itest test/application/assets_test.rb -n ""/test_precompile_shouldn't_use_the_digests_present_in_manifest.json/""
Run options: -n /test_precompile_shouldn't_use_the_digests_present_in_manifest.json/ --seed 27991

# Running:

F

Failure:
ApplicationTests::AssetsTest#test_precompile_shouldn't_use_the_digests_present_in_manifest.json [test/application/assets_test.rb:299]:
Expected ""application-c56ef81d122dffa8b257b0546ba1b09bd2d8b97e4aef881de8db9f760b903af6.css"" to not be equal to ""application-c56ef81d122dffa8b257b0546ba1b09bd2d8b97e4aef881de8db9f760b903af6.css"".


rails test test/application/assets_test.rb:282



Finished in 0.668613s, 1.4956 runs/s, 1.4956 assertions/s.
1 runs, 1 assertions, 1 failures, 0 errors, 0 skips


$  bundle exec ruby -Itest test/application/assets_test.rb -n ""/test_precompile_shouldn't_use_the_digests_present_in_manifest.json/""
Run options: -n /test_precompile_shouldn't_use_the_digests_present_in_manifest.json/ --seed 62499

# Running:

.

Finished in 0.653927s, 1.5292 runs/s, 1.5292 assertions/s.
1 runs, 1 assertions, 0 failures, 0 errors, 0 skips
~~~

The whole test setup, trying to replicate the Rails git directory structure can be seen [here](https://src.fedoraproject.org/rpms/rubygem-railties/blob/f81fd59f8c25811e5d46bb2d0697db2d96ebaaf8/f/rubygem-railties.spec#_120-227)

### Expected behavior
The test passes every time

### Actual behavior
The test passes sometime

### System configuration
**Rails version**: 7.0.8

**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]
"
50363,respond_to not working,raoehtesham03,,2023-12-15T09:35:24Z,2023-12-15T11:07:35Z,2023-12-15T11:07:35Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
def index
      respond_to do |format|
        format.html {
          binding.pry
          @client_count = policy_scope(Client.group(""clients.id"")).count
          @client_count = @client_count.is_a?(Hash) ? @client_count.keys.size : @client_count
          if @client_count == 1
            client = policy_scope(Client).order(""clients.name"").first
            redirect_to client_landing_url(host: client.domain)
          end
        }
        format.json do
          binding.pry
          @clients = policy_scope(ClientService.get_list(params, current_user.system_admin?))
          serialize_clients = ClientService.serialize_clients(@clients)

          render json: serialize_clients
        end
      end
   end
```

### Actual behavior
    
   while hitting this url http://admin.localtest.me/admin/clients , it is not going into the format.json loop.
   Please help me to figure out this.
### System configuration
**Rails version**: 6.1.7.6

**Ruby version**: 2.7.8
"
50361,Fix inconsistent results of params.deep_transform_keys,iagopiimenta,"actionpack, activesupport",2023-12-15T02:14:08Z,2023-12-15T02:14:17Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fix: #50326

### Detail

`params.deep_transform_keys` should transform the keys of the params, including nested hashes, arrays, and ActionController::Parameters objects.

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50360,Improve Deprecation API docs and guide [ci-skip],skipkayhil,"activesupport, docs",2023-12-14T22:30:43Z,2023-12-17T22:10:26Z,2023-12-17T22:10:21Z,"- Link to Deprecation::Behavior in configuring guide

  The current list of options for `config.active_support.deprecation` was missing the newly added `:report` option. Instead of adding the missing option and continuing to keep 4 different lists of the same options in sync, I opted to replace the list with a link to the options in the Behavior API docs. This had the additional advantage of giving more information about all of the options which was not mentioned in the Configuring guide.

- Use symbols for Behavior options

  It felt to me like naming the options did not make it explicit that those were the symbols to pass to `#behavior=`, but by adding the `:` that becomes more clear.

- Add some API links

  There were a few references to `behavior=`, but we may as well link to the actual method.
"
50359,feature: Allow serving compressed SVG images (rebased),flavorjones,actionpack,2023-12-14T16:31:25Z,2023-12-14T16:56:52Z,2023-12-14T16:54:06Z,"### Motivation / Background

This adds `image/svg+xml` to the compressible content types of ActionDispatch::Static

(This is a rebased re-submission of #42407 by @ledermann which was approved by @zzak in 2021)


### Detail

Original description:

> This adds image/svg+xml to the compressible content types of ActionDispatch::Static so GZIP or Brotli can be used.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50358,Fixed a bug that through association is not preloaded when strict_loading is added,alpaca-tc,activerecord,2023-12-14T14:37:14Z,2023-12-17T12:32:24Z,,"### Motivation / Background

Fix: #49197

```ruby
class User < ActiveRecord::Base
  has_one :profile
  has_one :profile_image, through: :profile
end

relation = User.preload(:profile_image)
relation.first.association(:profile).loaded? #=> true
relation.strict_loading.first.association(:profile).loaded? #=> expected true, got false
```

### Detail


### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50357,Document assert_queries and assert_no_queries [ci-skip],siaw23,docs,2023-12-14T14:14:38Z,2023-12-14T14:23:46Z,2023-12-14T14:23:11Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because https://github.com/rails/rails/pull/50281 is missing some documentation.

### Detail

This Pull Request documents `assert_queries` and `assert_no_queries`

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50356,Fix `Model.none.async_pluck` to return a Promise,casperisfine,activerecord,2023-12-14T11:37:35Z,2023-12-14T11:53:11Z,2023-12-14T11:51:28Z,"Previously it would return a naked empty array, which is a break of the interface.
"
50355,Don't make Trilogy the default for MySQL until they solve it working with current default MySQL configuration,andyjeffries,,2023-12-14T10:27:54Z,2023-12-14T14:31:26Z,2023-12-14T13:22:32Z,"I saw it will be the default in the next major release (https://rubyonrails.org/2023/10/5/Rails-7-1-0-has-been-released) but it doesn't support the default MySQL authentication mechanism.

https://github.com/trilogy-libraries/trilogy/issues/26#issuecomment-1737467740

Please don't make it the default until this issue has been solved."
50354,ActiveRecord marshaling lose `attr_accessor` value,DmytroVasin,,2023-12-14T08:28:57Z,2023-12-14T15:40:16Z,2023-12-14T15:40:16Z,"The ActiveRecord marshaling from https://github.com/rails/rails/pull/47747 does not care about `attr_accessor` anymore.  
I am not sure if it is new(correct) behavior or if it should work and it does not. 

### Steps to reproduce
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)


ActiveRecord::Schema.define do
  create_table :users, force: true do |t|
    t.string :name
  end
end


class User < ActiveRecord::Base
  attr_accessor :xyz
end

class BugTest < Minitest::Test
  def test_marshal_61
    ActiveRecord::Marshalling.format_version = 6.1

    user = User.create(name: ""First Name"")
    user.xyz = 'xyz'

    assert_equal 'xyz', user.xyz
    assert_equal user.xyz, Marshal.load(Marshal.dump(user)).xyz
  end

  def test_marshal_71
    ActiveRecord::Marshalling.format_version = 7.1

    user = User.create(name: 'First Name')
    user.xyz = 'xyz'

    assert_equal 'xyz', user.xyz
    assert_equal user.xyz, Marshal.load(Marshal.dump(user)).xyz
  end
end
```

Expected behavior
Both tests should pass.

Actual behavior
Only the test using the old 6.1 marshaling format works.

System configuration
Rails version: 7.1.2

Ruby version: 3.2.2"
50353,Fix `load_async` for null relations,lucasmazza,activerecord,2023-12-13T23:42:01Z,2023-12-14T11:49:12Z,2023-12-14T11:33:26Z,"### Motivation / Background

Fixes https://github.com/rails/rails/issues/50351
"
50352,Prevent duplicate records when preloading `:has_many` association,dustinbrownman,activerecord,2023-12-13T22:21:07Z,2023-12-14T00:04:34Z,2023-12-14T00:04:33Z,"### Motivation / Background

This Pull Request has been created to fix a bug introduced by https://github.com/rails/rails/pull/50129

We noticed a bug with how records were being preloaded on `main`. If a record had persisted records on an association, those records would be duplicated during preload unless the association was considered `loaded`. On the surface, it seems strange that there would be persisted records that aren't `loaded` on an association, but this is actually quite common. For example:

```ruby
post = Post.new(title: ""A good post"")
post.comments.create!(body: ""I like this!"")

post.comments
=> [<Comment id: 5, body: ""I like this""...>]
post.association(:comments).loaded?
=> false
```

Even though the new comment has been persisted and associated with with the post, the association isn't considered `loaded` until we've tried to access the actual comments with something like `post.comments.to_a`.

If we tried to preload the post's comments after that new comment was created, we'd end up with duplicate records in the association:

```ruby
post.comments.create!(body: ""I like this!"")
post.comments
=> [<Comment id: 5, body: ""I like this""...>]

preloader = ActiveRecord::Associations::Preloader.new(records: [post], associations: :comments)
preloader.call

post.comments
=> [<Comment id: 5, body: ""I like this""...>, <Comment id: 5, body: ""I like this""...>]
```

### Detail

This reverts to the previous behavior of replacing the association target with the records found during preload, but preserves any non-persisted records to maintain the fix provided by https://github.com/rails/rails/pull/50129.


### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50351,Loading an async null / @none=true relation causes a method not implemented error,walski,"activerecord, With reproduction steps",2023-12-13T22:15:10Z,2023-12-14T11:33:27Z,2023-12-14T11:33:27Z,"### Steps to reproduce

Unfortunately I wasn't able to create an executable test case but if you change [this AR test case](https://github.com/rails/rails/blob/ee65e97829e1d09a00047958273656d3b6488924/activerecord/test/cases/relation/load_async_test.rb#L32-L42) to become:

```ruby
    def test_scheduled?
      deferred_posts = Post.where(author_id: 1).load_async
      if in_memory_db?
        assert_not_predicate deferred_posts, :scheduled?
      else
        assert_predicate deferred_posts, :scheduled?
      end
      assert_predicate deferred_posts, :loaded?
      deferred_posts.to_a
      assert_not_predicate deferred_posts, :scheduled?

      ## ADDED THESE TWO LINES ##
      none_posts = Post.none.load_async.to_a
      assert_not_predicate deferred_posts, :scheduled?
    end
```

And then run `bundle exec ruby -Itest test/cases/relation/load_async_test.rb  -n 'test_scheduled?'`

It hopefully gets close to a standalone test. If somebody can help me get a standalone test that can inherit from `ActiveRecord::TestCase`, I could also put up a real executable test case.

### Expected behavior

No exception is raised.

### Actual behavior

NoMethodError: undefined method `!' for #<ActiveRecord::Promise status=complete>
    /Users/walski/Desktop/rails_bug/rails-main/activerecord/lib/active_record/relation.rb:716:in `scheduled?'

### System configuration
**Rails version**: `main` but also `7.1.2`

**Ruby version**: 3.2.2

### Possible cause

I think for null / `@none = true` relations, [this code](https://github.com/rails/rails/blob/ee65e97829e1d09a00047958273656d3b6488924/activerecord/lib/active_record/relation.rb#L963) causes `@future_result` to be an `ActiveRecord::Promise` which does explicitly not implement `!`. While for normal (`@none = false`) relations `@future_result` is a `ActiveRecord::FutureResult` which DOES implement `!`.
"
50350,[feature request] Add support for returning Symbols for ActiveRecord enums,postmodern,,2023-12-13T22:04:15Z,2023-12-14T16:33:43Z,2023-12-14T16:33:42Z,"ActiveRecord enums allow defining an enum attribute for a finite set of Symbol names, or even a mapping of Symbols to underlying String values.

```ruby
class Order < ActiveRecord::Base

  enum status: [:active, :completed, :rejected]
  
end
```

Currently (ActiveRecord 7.1) the Symbol names actually are converted into Strings.

```ruby
order = Order.new(status: :active)
order.status
# => ""active""
```

This seems a little counter-intuitive, since the user is explicitly specifing a set of Symbols. It would be useful if there was some kind of keyword argument option, or even another method, that would allow returning Symbols instead of Strings.

```ruby
class Order < ActiveRecord::Base

  enum status: [...], _symbolize: true
  
end
```"
50349,TrilogyAdapter: ignore host if socket is set,casperisfine,activerecord,2023-12-13T16:33:56Z,2023-12-13T23:19:49Z,2023-12-13T16:54:50Z,"Contrary to mysql2, trilogy will ignore the `socket` config if `host` is set.

This makes it impossible to configure a UNIX domain socket connection via `DATABASE_URL`, as the URL must include a host.
"
50348,Render Partial Collection with a layout parameter,cmaruz,actionview,2023-12-13T14:08:48Z,2023-12-21T00:26:28Z,,"The current implementation does not respect the layout parameter in case of mixed collections.

This commit fixes the issue by ensuring that the code path for mixed collections render the partial inside the provided layout.

### Motivation / Background

Fixes #49590

The current implementation of `render_collection_derive_partial` ignores the layout parameter in case of mixed collections.

### Detail

This Pull Request changes`render_collection_derive_partial` to call a new `render_collection_with_no_partial` method which renders the partial inside the specified layout.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->"
50347,Fix derived foreign key to return correctly when association id is part of query constraints,iamradioactive,activerecord,2023-12-13T10:00:03Z,2023-12-19T19:45:21Z,,"
<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fixes #50346 



### Detail

This PR updates the method [derive_fk_query_constraints](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/reflection.rb#L785) to return correct value when association id is part of query constraints.

Context
- Model having Query constraints as `[:associated_model_id, :id]`
- Model having belong to association with `associated_model`

Current Behaviour
- Derived foreign key value is `[associated_model_id, associated_model_id]`

Updated Behaviour
- Derived foreign key value should be `associated_model_id`


### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

Please refer to #50346 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50346,Incorrect derived foreign key for models with query constraints,iamradioactive,"activerecord, attached PR, With reproduction steps",2023-12-13T09:50:41Z,2023-12-23T17:01:33Z,,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

When we initialise a model with an associated active record object, the foreign key for the associated record is not being derived correctly when the associated model is a part of query constraints.

This works correctly for without query constraints.

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", ""7.1""
  gem ""sqlite3""
  gem 'pry'
end

require ""active_record""
require ""logger""
require ""minitest/autorun""
require 'pry'

ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')

ActiveRecord::Schema.define do
  create_table :tenants, force: true do |t|
    t.string :name
  end

  create_table :comments, force: true do |t|
    t.integer :tenant_id
    t.integer :post_id
    t.integer :author_id
    t.string :body
    t.integer :position
  end

  create_table :authors, force: true do |t|
    t.integer :tenant_id
  end
end

class Tenant < ActiveRecord::Base
end

class Author < ActiveRecord::Base
  query_constraints :tenant_id, :id

  belongs_to :tenant
end

class Comment < ActiveRecord::Base
  query_constraints :tenant_id, :id

  belongs_to :tenant
  belongs_to :author
end

class BugTest < Minitest::Test
  def test_assoc
    tenant = Tenant.create!
    comment = Comment.new(body: ""hello"", tenant: tenant, author: Author.new(tenant: tenant))

    assert_equal tenant, comment.tenant
    assert_equal tenant.id, comment.tenant_id
  end
end

# Your reproduction script goes here
```

### Expected behavior
<!-- Tell us what should happen -->

- `comment.tenent_id` should return the value for `tenant.id`

### Actual behavior
<!-- Tell us what happens instead -->
- `comment.tenant_id` returns `nil`

### System configuration
**Rails version**: 7.1

**Ruby version**: 2.7.8
"
50345,Regression in integration tests when providing as: :html,inkstak,attached PR,2023-12-13T08:01:05Z,2023-12-23T17:02:00Z,,"### Steps to reproduce

```ruby
require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_controller/railtie""

class TestApp < Rails::Application
  config.hosts << ""www.example.com""
  routes.draw do
    resources :characters
  end

  config.root   = __dir__
  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger
end

class CharactersController < ActionController::Base
  def create
    render head: :no_content
  end
end

require ""minitest/autorun""
require ""rack/test""

class BugTest < ActionDispatch::IntegrationTest
  def test_params_without_content_type
    post ""/characters"", params: { name: ""Muad'Dib"" }
  end

  def test_params_with_htm_content_type
    post ""/users"", as: :html, params: { name: ""Muad'Dib"" }
  end

  private

  def app
    Rails.application
  end
end
```

### Expected behavior

In Rails 7.0, the second test works.

### Actual behavior

In Rails 7.1, the second test will raise an error :

```
BugTest#test_params_with_htm_content_type:
NoMethodError: undefined method `to_html' for {:name=>""Muad'Dib""}:Hash
    .../actionpack/lib/action_dispatch/testing/request_encoder.rb:39:in `encode_params'
    .../actionpack/lib/action_dispatch/testing/integration.rb:251:in `process'
    .../actionpack/lib/action_dispatch/testing/integration.rb:22:in `post'
    .../actionpack/lib/action_dispatch/testing/integration.rb:379:in `post'
    issue_bug.rb:39:in `test_params_with_htm_content_type'
```

### System configuration

**Rails version**:

Rails 7.1.2 & main

**Ruby version**:

Ruby 3.2.2"
50344,Inaccurate documentation for config.active_support.executor_around_test_case,semaperepelitsa,docs,2023-12-13T07:28:47Z,2023-12-14T22:32:32Z,2023-12-14T07:19:56Z,"The guide says:

> [3.14.17 config.active_support.executor_around_test_case](https://guides.rubyonrails.org/configuring.html#config-active-support-executor-around-test-case)
> Configure the test suite to call `Rails.application.executor.wrap` around test cases.

But the actual implementation calls `executor.perform`

https://github.com/rails/rails/blob/531643244474446efc061b559504ed67acc8cae1/activesupport/lib/active_support/executor/test_helper.rb#L3-L7

I don't know myself what is the actual difference with `wrap` - the method is marked as ""nodoc"".
"
50342,doc(active_record): adding more examples about scope control,JohnAnon9771,docs,2023-12-13T01:44:22Z,2023-12-22T04:00:27Z,,"### Motivation / Background

In the rails contributors [discord](https://discord.com/channels/849034466856665118/974004968015155230/1129535848753406092), there was a discussion in the past about a Rails behavior that is somewhat unknown to Rails newbies (I am included in that list) where it showed that Rails can identify which relationship you define according to the scope of the model.

I'm opening this PR for opinions on how this can be documented, as it seems to be something very interesting about Rails and which is only noticed if you have the correct intuition that Rails can do this.

https://github.com/rails/rails/blob/c9cdd800d30ec38f079b3df0772ab47f4ba4b11f/activerecord/lib/active_record/inheritance.rb#L241-L244

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50341,Help Active Job comply with Strict Loading,seanpdoyle,activejob,2023-12-13T00:02:07Z,2023-12-13T15:49:45Z,,"### Motivation / Background

By the time an `ActiveJob::Base#perform` method is invoked, Active Record instances are already deserialized and reified through GlobalID integration.

Unfortunately, since end-users don't have a means of configuring that loading process, it's common for Active Job executions to raise be at conflict with the application's Active Record strict loading configuration. That can result in errors like:

```
ActiveRecord::StrictLoadingViolationError: `Article` is marked for strict_loading. The Tag association named `:tags` cannot be lazily loaded.
```

Fortunately, calls to `GlobalID::Locator.locate` support an optional `includes:` keyword argument that's incorporated into the Active Record query to fetch the record.


### Detail

This commit introduces a rudimentary interface to provide `ActiveJob::Base` descendants with a means of eager-loading associations to comply with strict loading.

While it certainly isn't the public interface to ship, this change supports something in the realm of the following example:

```ruby
class Article < ApplicationRecord
  self.strict_loading_by_default = true

  has_and_belongs_to_many :tags
end

class Tag < ApplicationRecord
  has_and_belongs_to_many :articles
end

class PublishJob < ApplicationJob
  def perform(article)
    article.tags.each { |tag| ... }
  end

  private
    def options_for_global_id(model_class)
      if model_class == Article
        { includes: [:tags] }
      else
        super
      end
    end
end
```

### Additional information

The interface proposed in the current diff is awkward and not particularly well-named. It aims to demonstrate the necessary layers of abstraction that need to be breached in order for a Job to specify how to load records of a given model class. I'm hoping to gather feedback and guidance to shape the developer-facing public interface to configure how `GlobalID::Locator.locate` is invoked. **All feedback is welcomed**.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50340,Update Rack::Head documentation to match code behavior [ci-skip],notapatch,docs,2023-12-12T21:12:26Z,2023-12-13T07:38:43Z,2023-12-13T07:38:43Z,"### Motivation / Background

This Pull Request has been created because the documentation for Rack::Head was left-over from ActionDispatch::Head's documentation. This PR updates the comment.

### Detail 

In commit 449039a86d802871b707dfb51ac1ed96d53526f9, [ActionDispatch::Head](https://github.com/rails/rails/blob/3-2-stable/actionpack/lib/action_dispatch/middleware/head.rb) was replaced with [Rack::Head](https://github.com/rack/rack/blob/main/lib/rack/head.rb) in the middleware. However, the documentation was not changed.

The left-over ActionDisplayt::Head documentation is, unsurprisingly, wrong. Rack::Head code behaviour is not to change HEAD into GET it is to close the body of all HEAD requests. This commit fixes the docs to show this.

[Old behavior: ActionDispatch::Head changing HEAD into GET
](https://github.com/rails/rails/blob/3-2-stable/actionpack/lib/action_dispatch/middleware/head.rb)
[New behavior: Rack::Head closing the body of HEAD requests](https://github.com/rack/rack/blob/main/lib/rack/head.rb)

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50339,Document developer-facing change to `config.action_dispatch.show_exceptions` default,seanpdoyle,"railties, docs",2023-12-12T20:13:56Z,2023-12-15T17:35:40Z,,"### Motivation / Background

Support for the new `action_dispatch.show_exceptions` values was
introduced in [e28f147][]. Alongside the change to introduce new values
(like `:all`, `:rescuable`, `:none`), the default behavior was changed
for `Rails.env.test?`.

Prior to that commit, the `test` environment's default value was `false`
(introduced in [d898a4b][]) (which corresponds to the new `:none`
setting).

The new default behavior has some unintended negative side effects that
impact the feedback loop at the core of test-driven development.
When errors are rescued and transformed into HTML pages, the context of
the cause of failure is obscured by additional layers of information.

### Detail

First, this commit adds more prominent entries to the Upgrading and
Configuring guides, as well as the 7.1 Release Notes to document the
details of the configuration and its new values.

Next, this commit adds more documentation around the change in default
behavior. To start, it mentions the new value in the sections for the
affected test types: Controller, Integration, and System.

[e28f147]: https://github.com/rails/rails/commit/e28f147329330e7ae55606e62ecc3de328431f0b
[d898a4b]: https://github.com/rails/rails/commit/d898a4ba425a201827f07a5bb11c8c6bf85159b8

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50338,ActiveRecord >=7.1: `destroy` does not work after RestartParentTransaction/SavepointTransaction rollback,hoshi-sano,,2023-12-12T15:40:06Z,2023-12-18T00:11:16Z,,"### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""activerecord"", "" 7.1.0""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
  end
end

class Post < ActiveRecord::Base
  has_many :comments

  def self.test_restart_parent_transaction
    post = self.first
    ActiveRecord::Base.transaction do
      ActiveRecord::Base.transaction(requires_new: true) do
        post.destroy
        raise ""Rollback""
      end
    end
  rescue
    logger.info(""destroy #{post.inspect}"")
    post.destroy
  end

  def self.test_savepoint_transaction
    post = nil
    ActiveRecord::Base.transaction do
      post = self.first
      ActiveRecord::Base.transaction(requires_new: true) do
        post.destroy
        raise ""Rollback""
      end
    end
  rescue
    logger.info(""destroy #{post.inspect}"")
    post.destroy
  end
end

class BugTest < Minitest::Test
  def teardown
    Post.delete_all
  end

  def test_destroy_after_restart_parent_transaction_rollback
    Post.create!
    assert_equal 1, Post.count

    Post.test_restart_parent_transaction

    assert_equal 0, Post.count
  end

  def test_destroy_after_savepoint_transaction_rollback
    Post.create!
    assert_equal 1, Post.count

    Post.test_savepoint_transaction

    assert_equal 0, Post.count
  end
end
```

`>=7.1.0` Failed
![image](https://github.com/rails/rails/assets/1905688/ae70afb7-730c-4375-81df-f337d232cd5f)

`<7.1 (7.0.8)` Passed
![image](https://github.com/rails/rails/assets/1905688/e4f4f0be-56df-45d9-b617-b266e879e13c)


### Expected behavior

It seems to me that it should behave the same as before 7.0.8. ( `post.destroy` after rollback should be work.)

### Actual behavior

`post.destroy` after rollback won't work.

---

The following changes seem to be related.

- #46197
- #48303

https://github.com/rails/rails/blob/6b93fff8af32ef5e91f4ec3cfffb081d0553faf0/activerecord/lib/active_record/persistence.rb#L780-L787

Since `RestartParentTransaction`/`SavepointTransaction` leave `@_trigger_destroy_callback` **true** after rollback, `destroy_row` won't executed.

https://github.com/rails/rails/blob/v7.1.2/activerecord/lib/active_record/transactions.rb#L347
https://github.com/rails/rails/blob/v7.1.2/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L200
https://github.com/rails/rails/blob/v7.1.2/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L319

### System configuration

**Rails version**: >= 7.1.0
**Ruby version**: 3.2.1 (2023-02-08 revision 31819e82c8) [x86_64-linux]
"
50337,Fix `config.log_level` being ignored when using a Broadcast Logger,Edouard-chin,railties,2023-12-12T14:59:02Z,2023-12-12T21:05:58Z,,"ℹ️ To backport to 7-1 stable please 🙇 
______________________________________

<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

If an application has configured a Broadcast Logger, setting the `config.log_level` to any value has no effect:

```ruby
# config/application.rb

config.logger = ActiveSupport::BroadcastLogger.new(Logger.new(STDOUT))
config.log_level = :warn

puts Rails.logger.broadcasts.map(&:level) #=> [Logger::DEBUG]
```

This is a side effect of #49621 which tried to fix the `log_level` default value overriding the whole broadcasts.


### Detail

##### Context

The `log_level` default's value shouldn't apply to a Broadcast Logger, as otherwise it overrides whatever the application previously configured. While this behaviour is the same with a vanilla logger, at least we can workaround it:

```ruby
###############################
# When using a vanilla logger #
###############################

config.logger = Logger.new(STDOUT, level: LOGGER::WARN)
# Once the app boots, the level is overriden to DEBUG. We need to add the following line.
config.log_level = :warn

#################################
# When using a broadcast logger #
#################################

stdout = Logger.new(STDOUT, level: Logger::INFO)
stderr = Logger.new(STDERR, level: Logger::ERROR)
config.logger = ActiveSupport::BroadcastLogger(stdout, stderr)

# Once the app boots the whole broadcast level is overriden to DEBUG.
# There is no way to workaround this as you can't fine grain the level of each
# loggers with `config.log_level=`.
```

##### Solution

This PR ignores the default `log_level` value when using a Broadcast Logger, but ensure it gets used if an application manually sets it.

Fix #50324
cc/ @ghiculescu 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50336,Change `SchemaDumper.dump` default stream to `$stdout`,fatkodima,activerecord,2023-12-12T14:44:49Z,2023-12-14T16:16:20Z,2023-12-14T15:41:23Z,"In my gem, I extended `SchemaDumper` with a small custom logic and when wrote tests for it (https://github.com/fatkodima/online_migrations/commit/39d2f1b0f19e95597e05e8d1ae4f0b1d71d4a06b#diff-cb07f4a9f75db580d9b7e7bb54c641cb2cab696ef90a9afd64f128fb002a79a7R42-R46) was wondering why `capture_io` is not working. Turned out, that is because `.dump` accepts `STDOUT` (instead of `$stdout`) as a default output stream.

I changed that method's signature to make it easier to test and also changed 2 test helpers to use that."
50335,[ci skip] Update outdated documentation for Engines,takmar,docs,2023-12-12T04:52:39Z,2023-12-12T05:02:27Z,2023-12-12T05:02:15Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

The template for scaffolding was changed in [the PR](https://github.com/rails/rails/pull/41210). However, the view files created by scaffolding in [Engines page](https://edgeguides.rubyonrails.org/engines.html) are not updated after that.

### Detail

The part of the documentation that I updated instructs us to add the code above the ""Title"" output inside app/views/blorgh/articles/show.html.erb, but as I mentioned previously, the template file for scaffolding was changed, so there is no ""Title"" in the file, and the ""Title"" exists in app/views/articles/_article.html.erb.

app/views/articles/_article.html.erb file contents at that moment are in the below.

```
<div id=""<%= dom_id article %>"">
  <p>
    <strong>Title:</strong>
    <%= article.title %>
  </p>

  <p>
    <strong>Text:</strong>
    <%= article.text %>
  </p>

</div>
```

And app/views/blorgh/articles/show.html.erb is like the following.

```
<p style=""color: green""><%= notice %></p>

<%= render @article %>

<div>
  <h3>Comments</h3>
  <%= render @article.comments %>
  <%= render ""blorgh/comments/form"" %>

  <%= link_to ""Edit this article"", edit_article_path(@article) %> |
  <%= link_to ""Back to articles"", articles_path %>

  <%= button_to ""Destroy this article"", @article, method: :delete %>
</div>
```

So I updated the documentation and also updated the related parts.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50334,Add doc for `assert_queries` and `assert_no_queries`,yykamei,"activerecord, ready",2023-12-12T04:26:40Z,2023-12-14T23:58:32Z,2023-12-14T15:43:15Z,"Follow-up to #50281

### Motivation / Background

I think `assert_queries` and `assert_no_queries` are so useful that I want to read the documentation for the assertions. This pull request adds the doc for them and updated the test case named `test_assert_queries` to verify `:matcher` works as expected.

### Additional information

I also changed `assert_queries` to make sure the subscriber of `""sql.active_record""` is unsubscribed without affecting other test cases. Without this change, some test cases fail because of execution of `String#match`, which may cause `ArgumentError: invalid byte sequence in UTF-8`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
    - This does not include behavior changes
"
50333,Support validation for old Enum API,skipkayhil,activerecord,2023-12-12T04:24:57Z,2023-12-17T14:33:30Z,,"### Motivation / Background

The new, symbol, `#enum` API recently [gained][1] support for a new `validate` option which replaces `ArgumentErrors` with Active Model validation errors.

### Detail

This commit adds `_validate` to the old, keyword argument, `#enum` API to keep the two APIs in sync.

[1]: https://github.com/rails/rails/commit/7c65a4b83b583f4f27f3f20a9fb078b35823d2fe

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50332,Enum validations throw error\crash,merof-code,,2023-12-12T03:15:16Z,2023-12-12T17:19:00Z,2023-12-12T04:04:11Z,"Following [a tutor](https://www.shakacode.com/blog/rails-7-1-adds-validation-to-enums/) for new rails 7.1 feature with validation on enum, found that if I use it, add `, validate: true`, it does not work, like at all.

Feature in release notes:
https://edgeguides.rubyonrails.org/7_1_release_notes.html#active-record-notable-changes
- Add validation option for enum.


This is the issue itself
```ruby
class Post < ActiveRecord::Base
  enum status: [:active, :inactive, :deleted], validate: true # does not work
end

def test_association_stuff
    post = Post.new
    post.status = Post.statuses[:active]
    post.save
    assert_equal 1, Post.count
 end
```

## The gist as per template 
[the gist, with rails main](https://gist.github.com/merof-code/28a641979e1b672f95368198903694b8)


### Expected behavior
to not give the error messages

### Actual behavior
```bash
active_record/enum.rb:362:in `assert_valid_enum_definition_values': Enum values true must be either a non-empty hash or an array. (ArgumentError)
```
or 
```bash
You tried to define an enum named ""value_type"" on the model ""MyModel"", but this will generate a instance method ""Debit?"", which is already defined by another enum.
```
### System configuration
latest rails, as in the gist

**Ruby version**: 3.1.4
"
50331,Lock `bigdecimal` version to 3.1.4 or lower,yahonda,activesupport,2023-12-12T02:51:00Z,2023-12-14T23:56:07Z,2023-12-12T05:01:00Z,"### Motivation / Background

This commit addresses the Rails CI using Ruby master branch failure because Rails CI enables `RAILS_STRICT_WARNINGS` to raise RuntimeError for warnings.

https://buildkite.com/rails/rails/builds/102621#018c49df-e3de-4c2f-aeb7-6d8f08997da9/1102-1107
```ruby
/rails/activesupport/lib/active_support/core_ext/big_decimal/conversions.rb:4: warning: bigdecimal/util is found in bigdecimal, which will no longer be part of the default gems since Ruby 3.4.0. Add bigdecimal to your Gemfile or gemspec. (RuntimeError)
```

### Detail

According to https://bugs.ruby-lang.org/issues/20058 , This failure has been triggered since https://github.com/ruby/ruby/commit/cc9826503d989df877adbcd94d39a6ff78d0b785 and it will be addressed once the bigdecimal 3.1.5 is available at rubygems.org .

In the meantime, we can workaround this issue by logking `bigdecimal` version to 3.1.4 or lower. This commit should be reverted when the `bigdecimal` 3.1.5 is available at rubygems.org .

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50330,Document :request in start_processing's payload [ci-skip],skipkayhil,docs,2023-12-12T00:07:50Z,2023-12-12T00:18:08Z,2023-12-12T00:18:05Z,
50329,Revert backport of #49721,ghiculescu,"activesupport, railties",2023-12-11T21:32:04Z,2023-12-12T21:05:45Z,2023-12-12T21:05:45Z,"In https://github.com/rails/rails/commit/7254e275ea44c48abb934e3ce82666e184d32200, https://github.com/rails/rails/pull/49721 was backported to `7-1-stable`.

As noted in https://github.com/rails/rails/issues/50324 this introduces a breaking change. I think it's fine for this to be on `main` while we work it out but it shouldn't be on the stable branch, so proposing to revert the backport.

Unfortunately this change was included in [7.1.2](https://github.com/rails/rails/blob/v7.1.2/railties/lib/rails/application/bootstrap.rb#L59), but not [7.1.1](https://github.com/rails/rails/blob/v7.1.1/railties/lib/rails/application/bootstrap.rb#L57). I'm not sure if being in a release makes it too late to revert (IMO it should still be reverted)."
50328,refactor: fix typo,rimedelis,docs,2023-12-11T19:57:24Z,2023-12-11T20:20:25Z,2023-12-11T20:20:17Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

This Pull Request changes [REPLACE ME]

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50327,ActiveRecord: none?(...) should behave the same as exists?(...),james-em,"activerecord, With reproduction steps",2023-12-11T15:34:58Z,2023-12-15T18:14:46Z,2023-12-14T16:31:10Z,"### Steps to reproduce
```
OK:
irb(main):022> User.where(discarded_at: nil).none?
  User Exists? (1.4ms)  SELECT 1 AS one FROM ""users"" WHERE ""users"".""discarded_at"" IS NULL LIMIT $1  [[""LIMIT"", 1]]
=> false

OK: 
irb(main):023> User.where(discarded_at: nil).exists?
  User Exists? (1.8ms)  SELECT 1 AS one FROM ""users"" WHERE ""users"".""discarded_at"" IS NULL LIMIT $1  [[""LIMIT"", 1]]
=> true

NOT OK:
irb(main):024> User.none?(discarded_at: nil)
  User Load (1.5ms)  SELECT ""users"".* FROM ""users""
=> true

OK:
irb(main):025> User.exists?(discarded_at: nil)
  User Exists? (1.4ms)  SELECT 1 AS one FROM ""users"" WHERE ""users"".""discarded_at"" IS NULL LIMIT $1  [[""LIMIT"", 1]]
=> true
```
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :users, force: true do |t|
    t.datetime :discarded_at
  end
end

class User < ActiveRecord::Base
end

class BugTest < Minitest::Test
  def test_none_against_exists_a
    User.create!(discarded_at: nil)

    # SUCCESS
    assert_equal User.where(discarded_at: nil).exists?, !User.where(discarded_at: nil).none?
  end

  def test_none_against_exists_b
    User.create!(discarded_at: nil)
    # FAIL
    assert_equal User.exists?(discarded_at: nil), !User.none?(discarded_at: nil)
  end
end
```

### Expected behavior

`exists?` and `none?` should behave the same

### Actual behavior
`none?(...)` completly discard what is being passed in parameters

### System configuration
**Rails version**: 7.1

**Ruby version**: 3.2.2
"
50326,Inconsistent results of params.deep_transform_keys,iagopiimenta,"actionpack, With reproduction steps",2023-12-11T15:30:54Z,2023-12-11T21:17:02Z,,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_controller/railtie""
require ""active_support""
require ""active_support/core_ext/object/blank""
require ""minitest/autorun""

class BugTest < Minitest::Test
  def test_stuff
    raw_parameters = { item: { exampleOne: 1 } }
    params = ActionController::Parameters.new(raw_parameters)
    #<ActionController::Parameters {""item""=>{""exampleOne""=>1}} permitted: false>

    expected = { 'item' => { 'example_one' => 1 } }
    assert_equal(expected, params.deep_transform_keys(&:underscore).to_unsafe_h) # true

    params[:item] # just access the item
    params
    #<ActionController::Parameters {""item""=>#<ActionController::Parameters {""exampleOne""=>1} permitted: false>} permitted: false>

    assert_equal(expected, params.deep_transform_keys(&:underscore).to_unsafe_h) # false
  end
end
```

### Expected behavior
`params.deep_transform_keys` should transform the keys of the params, including nested hashes, arrays, and `ActionController::Parameters`.
`params[key]` should not change the params object

### Actual behavior
`params.deep_transform_keys` fails to transform the keys of `ActionController::Parameters` nested inside params.
`params[key]` changes the params object.

### System configuration
**Rails version**: Rails 5+

**Ruby version**: Ruby 2.3+
"
50325,Fix `Preloader` to not generate a query for already loaded association with `query_constraints`,fatkodima,activerecord,2023-12-11T10:33:44Z,2023-12-12T13:29:29Z,2023-12-11T14:28:10Z,"Fixes #50310.

The behavior was introduced in https://github.com/rails/rails/commit/1e9dbf00bd03e518e3605e5a0b9d306d02dab45d#diff-97709b319ca07f6cd3f4d6b8a8c443d0cb3e7487696098be377aa9fa78907a35R38-R44

Previously, for empty `keys`, `scope.where(association_key_name => keys)` would generate a no-op query which was not issued to the database. But with that change, `scope` (which is `select *`) is always loaded. 

That code was also further changed in https://github.com/rails/rails/commit/0bbf4e86cb9a673d3deb6e180c4082276ef1e762#diff-97709b319ca07f6cd3f4d6b8a8c443d0cb3e7487696098be377aa9fa78907a35R42-R50 but it still performs that `select *`.

cc @nvasilevski 
"
50324,`ActiveSupport::BroadcastLogger` does not respect `config.log_level` in Rails 7.1,ghiculescu,activesupport,2023-12-11T07:30:46Z,2023-12-12T21:06:21Z,,"I am working on upgrading an app from Rails 7 to 7.1 and onto edge. I've come across an issue that I think is a bug, but could also be configuration not being used as intended.

Rails 7 config:

```ruby
# config/application.rb
config.logger = Logist::Logger.new($stdout)
other_logger = AnotherLogger.new

config.logger.extend(ActiveSupport::Logger.broadcast(other_logger))

config.log_level = :info if Rails.env.production?
```

With this config, `Rails.logger.debug` does nothing in production. 🟢 

The Rails 7 config relied on the private API described in https://github.com/rails/rails/pull/48615, so we have to refactor it for 7.1. 7.1/Edge Rails config:

```ruby
# config/application.rb
config.logger = Logist::Logger.new($stdout)
other_logger = AnotherLogger.new

config.logger = ActiveSupport::BroadcastLogger.new(config.logger, other_logger)

config.log_level = :info if Rails.env.production?
```

With this config, `Rails.logger.debug` logs in production. 🔴 

I think the issue comes from https://github.com/rails/rails/pull/49721, since the `log_level` is no longer being assigned to the broadcast loggers. I would expect `config.log_level` to work for whatever you assign `config.logger` too, and if that's changing it seems like a breaking change to me.

Is the expectation that if you use `BroadcastLogger`, you set the `level` manually on loggers?

cc @Edouard-chin @andrewn617  @rafaelfranca 

### System configuration
**Rails version**: `main`

**Ruby version**: 3.2
"
50323,Fix tests for status code change on Rack HEAD,skipkayhil,actionpack,2023-12-11T06:19:04Z,2023-12-20T02:30:20Z,2023-12-11T07:05:42Z,"### Motivation / Background

Rack was recently [updated][1] with a deprecation for some status codes that have been renamed (most notably, Unprocessable Entity was renamed to Unprocessable Content). Since the deprecation was only added to the `#status_code` method, this has caused test failures for some tests that depend on the `SYMBOLS_TO_STATUS_CODE` hash.

### Detail

This commit replaces the usage of `SYMBOLS_TO_STATUS_CODE` with `#status_code` so that we get the deprecation message instead of a test failure.

[1]: https://github.com/rack/rack/commit/64ad26e3381da2ce1853638a2c4ea241c2ad3729

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50322,Fix wrong example code: `active_job.message_serializer`,r7kamura,docs,2023-12-11T05:19:49Z,2023-12-11T07:52:53Z,2023-12-11T06:19:53Z,"### Motivation / Background

This is a simple documentation correction.

From what I've read, this was probably a miswritten `active_support.message_serializer` rather than `active_job.message_serializer`.

Sorry if I misunderstood something.

### Additional information

It appears that this example was originally added in the following pull request:

- https://github.com/rails/rails/pull/47963

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* ~[ ] Tests are added or updated if you fix a bug or add a feature.~
* ~[ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.~
"
50321,Fix polymorphic `belongs_to` to correctly use parent's `query_constraints`,fatkodima,activerecord,2023-12-10T20:14:57Z,2023-12-11T15:13:19Z,2023-12-11T15:12:45Z,"Fixes #50315.

For polymorphic association with query constraints, we get incorrect value for primary key (specifically, `""id""` in the referenced issue) here
https://github.com/rails/rails/blob/5c4a7a711068c1dff2bd873da510ddbb82dcadd7/activerecord/lib/active_record/reflection.rb#L870-L882

which then incorrectly matches with foreign key (specifically, `[""tenant_id"", ""commentable_id""]` in the referenced issue) here https://github.com/rails/rails/blob/5c4a7a711068c1dff2bd873da510ddbb82dcadd7/activerecord/lib/active_record/associations/association_scope.rb#L58-L63

With this change, `association_primary_key` now correctly returns `[""tenant_id"", ""id""]`."
50320,Add `config.action_view.nest_html_attributes_within`,seanpdoyle,"railties, docs, actionview",2023-12-10T17:17:03Z,2023-12-19T16:40:31Z,,"### Motivation / Background

While [Stimulus][] and [Turbo][] rely on values encoded into `data`-prefixed HTML attributes present in the document, other frameworks like [Alpine.js][] and [htmx][] rely on different prefixes (`x` and `hx`, respectively).

### Detail

To add support for those frameworks and others like them, this commit introduces the `config.action_view.nest_html_attributes_within` value to expose a value for consumer applications to add to.

[Stimulus]: https://stimulus.hotwired.dev
[Turbo]: https://turbo.hotwired.dev
[Alpine.js]: https://alpinejs.dev
[htmx]: https://htmx.org

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50319,Fix predicate builder for polymorphic models referencing models with composite primary keys,fatkodima,activerecord,2023-12-10T12:02:54Z,2023-12-11T15:20:08Z,2023-12-11T15:20:08Z,"Fixes #50318.

I needed to create 2 models for the test case, because there is no currently Cpk model where both primary key columns are not `""id""`. When one of them is named `""id""`, we do not get the error as in the linked issue https://github.com/rails/rails/blob/5c4a7a711068c1dff2bd873da510ddbb82dcadd7/activerecord/lib/active_record/reflection.rb#L875-L879"
50318,`Where(relation: )` broken for polymorphic records when using composite primary keys,jackozi,"activerecord, attached PR, With reproduction steps",2023-12-10T10:41:36Z,2023-12-11T15:20:09Z,2023-12-11T15:20:09Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

When creating a polymorphic association with composite primary keys where(relation: model) is broken. 

- Create a model with composite primary key (e.g. Post as commentable) 
- Point another model towards it with a polymorphic relation (e.g Comment)
- Comment.where(commentable: post) will raise: `ArgumentError: Expected corresponding value for [""commentable_title"", ""commentable_author""] to be an Array`

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, primary_key: [:title, :author], force: true do |t|
    t.string :title
    t.string :author
  end

  create_table :comments, force: true do |t|
    t.string :commentable_title
    t.string :commentable_author
    t.string :commentable_type
  end
end

class Post < ActiveRecord::Base
  has_many :comments, query_constraints: %i[commentable_title commentable_author], as: :commentable
end

class Comment < ActiveRecord::Base
  belongs_to :commentable, query_constraints: %i[commentable_title commentable_author], polymorphic: true
end

class BugTest < Minitest::Test
  def test_association_stuff
    post = Post.create!(title: ""post"", author: ""author"")
    post.comments << Comment.create!

    assert Comment.where(commentable: post).exists?
  end
end
```

### Expected behavior
Correct collection should be returned. 

### Actual behavior
Error is raised instead 

### System configuration
**Rails version**: edge 

**Ruby version**: 3.2.2
"
50317,Consolidate bug_report_templates and remove the gem versions,zzak,docs,2023-12-09T23:33:14Z,2023-12-19T21:01:23Z,2023-12-16T12:55:26Z,"As a contributor, changing a single line to test the desired version does not warrant a separate file for each type of report.

The only argument I can see for keeping the gem versions is that users are likely reporting a bug for a specific version of Rails, typically during an upgrade. As few people are probably testing their applications against Rails main branch.

Additionally, having the gem version templates means that we are testing both main and a stable release of Rails in CI, which has some benefit.

IMO, the cost of separate files and the confusion it will create if we want to add more templates outweighs the benefits mentioned here.

My motivation is that I want to add more report templates, like for additional adapters, and this list will grow to be unmanageable if we keep the gem versions.

/cc @yahonda @skipkayhil as I think we've discussed this before"
50316,[fix] ActiveStorage Registry failing when service is a Proc,swiknaba,activestorage,2023-12-09T20:19:44Z,2023-12-09T21:57:22Z,2023-12-09T21:01:59Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

PR https://github.com/rails/rails/pull/49863 introduced that `service` for ActiveRecord callbacks `has_one_attached`/`has_many_attached` can be a `proc`.

Thanks for that feature; I love it. Unfortunately, it fails for me with

> activestorage-7.1.2/lib/active_storage/service/registry.rb:11
> `undefined method `to_sym' for #<Proc:0x00000001219b`
>
> services.fetch(name.to_sym) do |key|

This PR fixes this :)

### Detail

`ActiveStorage::Service::Registry#fetch` now checks if the passed `service` is a Proc.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] ~Tests are added or updated if you fix a bug or add a feature.~
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50315,Polymorphic association in model with query constraints pointing to incorrect records,iamradioactive,"activerecord, With reproduction steps",2023-12-09T19:04:02Z,2023-12-11T15:12:46Z,2023-12-11T15:12:46Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->
While working on #50297 I found another bug related to query constraints for Polymorphic associations. I am looking into this but I created an issue here as I suspect there might be similar issues related to the usage of Query constraints.

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem 'rails', '7.1'
  gem 'sqlite3'
  gem 'pry'
end

require ""active_record""
require ""logger""
require 'minitest/autorun'

ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')

ActiveRecord::Schema.define do
  create_table :comments, force: true do |t|
    t.integer :tenant_id
    t.references :commentable, polymorphic: true, null: false
    t.string :body
    t.integer :position
  end

  create_table :authors, force: true do |t|
    t.integer :tenant_id
  end
end

class Author < ActiveRecord::Base
  query_constraints :tenant_id, :id

  has_many :comments, as: :commentable
end 

class Comment < ActiveRecord::Base
  query_constraints :tenant_id, :id

  belongs_to :commentable, polymorphic: true
end

class BugTest < Minitest::Test
  # Case when Author with tenant_id exists
  def test_when_id_exists
    author_1 = Author.create!(tenant_id: 1)
    author_2 = Author.create!(tenant_id: 1)
    comment = Comment.create(tenant_id: 1, commentable_id: author_2.id, commentable_type: 'Author')

    # BUG: Makes a query with tenant_id
    assert_equal author_2.id, comment.commentable.id 
  end

  # Case when Author with tenant_id does not exist
  def test_when_id_does_not_exist
    author = Author.create!(tenant_id: 11)
    comment = Comment.create(tenant_id: 11, commentable_id: author.id, commentable_type: 'Author')

    assert_equal author.id, comment.commentable&.id 
  end
end
```

### Expected behavior
<!-- Tell us what should happen -->

### Actual behavior
<!-- Tell us what happens instead -->

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 2.7.8
"
50314,Empty method issue fixed if counter cache negative,Nadia-Ahsan,activerecord,2023-12-09T18:11:53Z,2023-12-12T10:02:46Z,,"If there's has many association between two tables. Let say, `post` and `comment`. Post has no comments but due to some issue, counter_cache is negative, then `empty?`  method returns false. It should return true as the DB query would return true.

This PR is related to [Counter cache issue](https://github.com/rails/rails/issues/50311) #50311 
"
50313,Ignore negative counter caches when checking for existence of the association,fatkodima,activerecord,2023-12-09T16:19:47Z,2023-12-10T10:42:16Z,,"Fixes #50311.

Due to race conditions, it is possible to get a negative number of counter cache values.
When we are in this situation, we should actually query the association to check if there are any records. "
50312,Implement `button_to` in terms of `form_tag`,seanpdoyle,"docs, actionview",2023-12-09T15:47:44Z,2023-12-11T22:48:47Z,,"### Motivation / Background

While the ergonomics of calling `button_to` match those of `form_for`, `form_with`, or even `form_tag`, the implementation doesn't use much of those helper's existing infrastructure. There are chunks of logic repeated and re-implemented. For example:

* determining the `[action]` and `[method]` attributes for the `<form>`
* rendering an `<input type=""hidden"" name=""_method"">` for methods other than `POST` or `GET`
* generating and rendering an authenticity token input
* content exfiltration
* encoding `[data-remote]` for UJS integration


### Detail

This commit implements more of `button_to` in terms of the [form_tag][] helper method defined in `FormTagHelper`. That method handles responsibilities like determining `[method]`, rendering `<input type=""hidden"">`, etc.

The only outward-facing changes (reflected in test suite cases) involve the order of the `<form>` element's content, and the introduction of an `[accept-charset=""UTF-8""]` attribute.

The `<button>` element will be rendered **after** hidden fields instead of **before** (the previous behavior).

Similarly, the `[accept-charset]` attribute wasn't being rendered before, but is rendered by `form_tag`. The `form_tag` helper doesn't currently expose a mechanism to skip that attribute (in the same way that `:enforce_utf8` is being used here to skip the `<input type=""hidden"">`.


### Additional information

As part of these changes, this commit also excises the `method_tag` and `token_tag` private helpers out of the `UrlHelper` module and into the `FormTagHelper` module, since that's the only remaining call site. The previous implementation relied on the fact that both `UrlHelper` and `FormTagHelper` end up being mixed into an `ActionView::Base` instance, so the cross-module `private` boundary wasn't effective.

[form_tag]: https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html#method-i-form_tag

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50311,Collection Association's empty? method is not working correctly due to counter_cache,ZainIftikhar7vals,"activerecord, attached PR, With reproduction steps",2023-12-09T14:10:52Z,2023-12-10T16:30:16Z,,"### Steps to reproduce
I'm using ActiveRecord 7.1.0 and Ruby 3.2.2 and I'm facing a bug due to counter_cache being negative. If you have a parent-child association like this:

```ruby
class Post < ActiveRecord::Base
  has_many :comments
end

class Comment < ActiveRecord::Base
  belongs_to :post, counter_cache: true
end
```

Then say you have a Post with no comments
```ruby
first_post = Post.new(name: 'post 1')
```
Now if by any chance Post#comments_count becomes negative

```ruby
first_post.update!(comments_count: -1)
first_post.comments.empty? 
```
this `empty?` returns false due to negative counter_cache. It should return true as the DB query would return true.

Here is a standalone script that reproduces the issue:
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.integer :comments_count
  end

  create_table :comments, force: true do |t|
    t.integer :post_id
  end
end

class Post < ActiveRecord::Base
  has_many :comments
end

class Comment < ActiveRecord::Base
  belongs_to :post, counter_cache: true
end

class BugTest < Minitest::Test
  def test_comments_association_is_empty 
    post = Post.create!
    post.update(comments_count: -1)
    assert_equal true, post.comments.empty?
  end
end
```
Same issue occurs on older versions of ActiveRecord as well."
50310,Rails 7.1: query_constraints: preloading already loaded association cause a query without conditions.,yosiat,,2023-12-09T14:06:31Z,2023-12-12T13:15:28Z,2023-12-11T14:28:12Z,"When I am trying to use `query_constraints` I found a bug where doing `preload` on already loaded association, we get a `SELECT * FROM table` query without `WHERE` conditions.

### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""pg""
end

require ""active_record""
require ""logger""

ActiveRecord::Base.establish_connection(
  adapter: ""postgresql"",
  database: ""test"",
  encoding: ""unicode"",
  host: ""localhost"",
  port: ""5432"",
  password: ""12345"",
  username: ""test"")

ActiveRecord::Schema.define do
  create_table :comments, force: true do |t|
    t.integer :tenant_id
    t.integer :post_id
    t.integer :author_id
    t.string :body
    t.integer :position
  end

  create_table :posts, force: true do |t|
    t.integer :tenant_id
  end

  create_table :author, force: true do |t|
    t.integer :tenant_id
  end
end

class Post < ActiveRecord::Base
  query_constraints :tenant_id, :id

  has_many :comments
end

class Author < ActiveRecord::Base
  query_constraints :tenant_id, :id
end

class Comment < ActiveRecord::Base
  query_constraints :tenant_id, :id

  belongs_to :post
  belongs_to :author
end

post = Post.create!(tenant_id: 1)
post.comments << Comment.create(body: ""hello"", tenant_id: 1, author: Author.new(tenant_id: 1))
post.save!


# Preloading here for already loaded association (author)
# Causes `SELECT * FROM author` query
ActiveRecord::Base.logger = Logger.new(STDOUT)
ActiveRecord::Associations::Preloader.new(records: post.comments, associations: [:author]).call
```

Output:
```
-- create_table(:comments, {:force=>true})
   -> 0.0343s
-- create_table(:posts, {:force=>true})
   -> 0.0069s
-- create_table(:author, {:force=>true})
   -> 0.0086s
D, [2023-12-09T16:01:05.744467 #68584] DEBUG -- :   Comment Load (0.2ms)  SELECT ""comments"".* FROM ""comments"" WHERE ""comments"".""tenant_id"" = $1 AND ""comments"".""post_id"" = $2  [[""tenant_id"", 1], [""post_id"", 1]]
D, [2023-12-09T16:01:05.746333 #68584] DEBUG -- :   Author Load (0.2ms)  SELECT ""authors"".* FROM ""authors""
```

### Expected behavior

1. No additional queries should be done - since associations are already loaded
2. In my opinion: A query without conditions should be avoided at all cost, and if we got to invalid-state we should throw an error.

### Troubleshooting

From my simple investigation: looks like `keys_to_load` (here - https://github.com/rails/rails/blame/main/activerecord/lib/active_record/associations/preloader/association.rb#L89) is empty set and `already_loaded_records_by_key` contains the already loaded data.

I am not sure if adding guard of `return if keys_to_load.empty?` is correct, because this code don't look specific to `query_constraints` so I assume something else is going on here.

### System configuration
**Rails version**: `7.1`
**Ruby version**: `ruby 3.2.2 (2023-03-30 revision e51014f9c0) [arm64-darwin22]`
"
50309,`ActiveRecord::Store`: define predicate attribute method,seanpdoyle,activerecord,2023-12-09T05:03:34Z,2023-12-09T15:34:21Z,,"### Motivation / Background

Storing attributes in database columns via the `.store` and `.store_accessor` class methods generates a collection of methods, including an attribute reader.

The methods are similar to the ones generated from `ActiveRecord::AttributeMethods` (and transitively `ActiveModel::AttributeMethods`), but do not include a presence predicate method (like
`ActiveModel::AttributeMethods#attribute_present?`).

### Detail

This commit generates an `#{attribute}?` method that reads from the store attribute, then chains a `#present?` predicate method on the return value.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50308,Small refactoring of batching over loaded relation,fatkodima,activerecord,2023-12-08T23:57:09Z,2023-12-08T23:57:12Z,,"For `.sort_by!` we avoid allocating an extra array and the code gets shorter and simpler.
For `.each_slice` the code is simpler and so easier to understand."
50307,Comments inside helper files affecting views,stxss,,2023-12-08T18:46:40Z,2023-12-08T22:28:22Z,2023-12-08T19:21:25Z,"Hey! I found some weird behavior while developing my most recent project, and was able to reproduce it with a brand new app, but I'm not sure the scope of this issue is limited to js/css bundling, as file contents were read/accessed when they were not supposed to.

### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

Create a brand new rails app

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```bash
rails new myapp -d postgresql --css=tailwind --javascript=esbuild
bundle add inline_svg # using this gem to render svg's
rails db:create
rails g scaffold posts
rails db:migrate
bin/dev
```
```ruby
# config/routes.rb
root ""posts#index""
```

Create a new `app/assets/images/svg/` folder, where you save any svg you want. I placed the solid `sun` and `moon` icons from [heroicons](https://heroicons.com/)

```ruby
# app/helpers/icons_helper.rb

module IconsHelper
  def sun_icon
    inline_svg_tag(""svg/sun.svg"", class: ""sun fill-black stroke-black "")
  end

  def moon_icon
    inline_svg_tag(""svg/moon.svg"", class: ""moon fill-black stroke-black"")
  end
end
```
```erb
# app/views/posts/index.html.erb

<%= sun_icon %>
<%= moon_icon %>
```

### Expected behavior
<!-- Tell us what should happen -->
The page should just present a simple svg, not bound by any height styles, and adding TailwindCSS classes as comments should not affect the style of the elements.

### Actual behavior
<!-- Tell us what happens instead -->
You'll see 2 big svg's that occupy the whole page. 

Now, in this small app example, if you add `# h-6` anywhere in the `app/helpers/icons_helper.rb` or `<%# h-6 %>` in the `app/views/posts/index.html.erb` file and reload the page, the icons will indeed have a h-6 (1.5rem) applied, which, from my understanding, **should not** happen. 

In my personal project, removing this css class, closing the server and running `bin/dev` again, messed with all the svg files and every element that had a `h-6` applied to it. 

The weird thing with this as well, at least in my case, is that it only happens when that specific string 'h-6' is removed or added to the files and the server is restarted. So if you start the server, go to the page, add the string to the helper/view file in any way and restart the page, changes will be made and if that string is removed nothing will happen until you restart the server.

I'll attach a video to showcase what exactly is happening if my explanation isn't clear.

https://github.com/rails/rails/assets/93729036/5c91651c-115c-4287-b2de-39dcb44d2663

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50306,[ci skip]Correct example query given in HAVING conditions section,jbk2,docs,2023-12-08T16:28:50Z,2023-12-08T19:22:10Z,2023-12-08T19:22:10Z,"Correct the active_record query example, in the HAVING conditions section, to align with the corresponding given SQL output."
50305,Log trace of causes for unhandled exceptions,MaxLap,actionpack,2023-12-08T16:24:59Z,2023-12-14T16:42:40Z,,"https://github.com/rails/rails/pull/50145 recently added logging of an exception's causes' messages, which is great as I was going to add that. 

However, the backtraces of the causes are not included in that PR.

This PR adds the backtraces too, which can be helpful. Note that I also changed the ""header"" part from.

```
RuntimeError (Third error)

Causes:
RuntimeError (Second error)
RuntimeError (First error)
```

To:

```
RuntimeError (Third error)
Caused by: RuntimeError (Second error)
Caused by: RuntimeError (First error)
```

And I highlight that the first backtrace is from the ""main"" exception with this message: 

```
Infos for: RuntimeError (Third error):
```

Here is a truncated example:

```
RuntimeError (Third error)
Caused by: RuntimeError (Second error)
Caused by: RuntimeError (First error)

Infos for: RuntimeError (Third error):

/home/max/projects/rails/actionpack/test/dispatch/debug_exceptions_test.rb:53:in `rescue in rescue in raise_nested_exceptions'
/home/max/projects/rails/actionpack/test/dispatch/debug_exceptions_test.rb:50:in `rescue in raise_nested_exceptions'
/home/max/projects/rails/actionpack/test/dispatch/debug_exceptions_test.rb:47:in `raise_nested_exceptions'
/home/max/projects/rails/actionpack/test/dispatch/debug_exceptions_test.rb:113:in `call'
/home/max/.rvm/gems/ruby-3.2.2/gems/rack-3.0.8/lib/rack/lint.rb:63:in `response'
/home/max/.rvm/gems/ruby-3.2.2/gems/rack-3.0.8/lib/rack/lint.rb:35:in `call'
/and/way/more

Infos for cause: RuntimeError (Second error):

/home/max/projects/rails/actionpack/test/dispatch/debug_exceptions_test.rb:51:in `rescue in raise_nested_exceptions'
/home/max/projects/rails/actionpack/test/dispatch/debug_exceptions_test.rb:47:in `raise_nested_exceptions'
/home/max/projects/rails/actionpack/test/dispatch/debug_exceptions_test.rb:113:in `call'
/home/max/.rvm/gems/ruby-3.2.2/gems/rack-3.0.8/lib/rack/lint.rb:63:in `response'
/home/max/.rvm/gems/ruby-3.2.2/gems/rack-3.0.8/lib/rack/lint.rb:35:in `call'
/home/max/projects/rails/actionpack/lib/action_dispatch/middleware/debug_exceptions.rb:29:in `call'
/home/max/.rvm/gems/ruby-3.2.2/gems/rack-3.0.8/lib/rack/lint.rb:63:in `response'
/and/way/more

Infos for cause: RuntimeError (First error):

/home/max/projects/rails/actionpack/test/dispatch/debug_exceptions_test.rb:48:in `raise_nested_exceptions'
/home/max/projects/rails/actionpack/test/dispatch/debug_exceptions_test.rb:113:in `call'
/home/max/.rvm/gems/ruby-3.2.2/gems/rack-3.0.8/lib/rack/lint.rb:63:in `response'
/home/max/.rvm/gems/ruby-3.2.2/gems/rack-3.0.8/lib/rack/lint.rb:35:in `call'
/home/max/projects/rails/actionpack/lib/action_dispatch/middleware/debug_exceptions.rb:29:in `call'
/home/max/.rvm/gems/ruby-3.2.2/gems/rack-3.0.8/lib/rack/lint.rb:63:in `response'
/and/way/more
```
"
50304,Document how to transform keys with `ActiveRecord::Store`,seanpdoyle,activerecord,2023-12-08T15:55:14Z,2023-12-09T01:07:07Z,,"### Detail

First, add test coverage to ensure that the behavior supported by the private `read_store_attribute` and `write_store_attribute` doesn't change over time.

Next, add method-level RubyDoc comments to describe how to override them correctly.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50303,alias_attribute gives a deprecation warning for store attributes in Rails 7.1,easydatawarehousing,"activerecord, With reproduction steps",2023-12-08T15:32:44Z,2023-12-12T14:11:40Z,,"When upgrading an app from Rails 7.0 to Rails 7.1 I'm getting these warnings:

    DEPRECATION WARNING: MyModel model aliases `t`, but `t` is not an attribute.
    Starting in Rails 7.2, alias_attribute with non-attribute targets will raise.

The attribute I want to alias is defined in an Active Record Store.
This behavior was introduced in this PR [48972](https://github.com/rails/rails/pull/48972).

### Steps to reproduce

``` ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.2""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :my_models, force: true do |t|
    t.string :properties
  end
end

class MyModel < ActiveRecord::Base
  store :properties, accessors: [:t], coder: JSON
  alias_attribute :title, :t
end

class BugTest < Minitest::Test
  def test_alias_attribute
    my_model = MyModel.create!(title: ""My title"")
    assert_equal my_model.title, ""My title""
    assert_equal my_model.t, ""My title""
  end
end
```

### Expected behavior
No warnings are given.

### Actual behavior

```
-- create_table(:my_models, {:force=>true})
Run options: --seed 9361
# Running:

DEPRECATION WARNING: MyModel model aliases `t`, but `t` is not an attribute. Starting in Rails 7.2, alias_attribute with non-attribute targets will raise. Use `alias_method :title, :t` or define the method manually.

Finished in 0.004296s, 232.7610 runs/s, 465.5219 assertions/s.
1 runs, 2 assertions, 0 failures, 0 errors, 0 skips
```

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2

### Possible solutions

1. Change the test in [ActiveRecord::AttributeMethods::ClassMethods](https://github.com/ipc103/rails/blob/eae26caec3e38c21835f4afd8622aad20c16c713/activerecord/lib/active_record/attribute_methods.rb#L83) to include attributes defined in stores (preferred)
2. Add a method like `alias_store_attribute` which adds getter and setter methods for the aliased name"
50302,Module#delegate takes a new private `as` parameter,casperisfine,"activesupport, actionview, actioncable",2023-12-08T13:46:36Z,2023-12-08T14:40:46Z,2023-12-08T14:40:46Z,"This is a continuation of https://github.com/rails/rails/pull/46875

The behavior of looking up the class method when `to: :class` is passed is a bit error prone because it silently degrades.

By passing the expected owner of the delegated method, we can be more strict, and also generate a delegator in a module rather than having to do it at inclusion time.

I made this argument private API because we want it in Rails, but I'm worried it might be a bit too sharp for public API. I can be convinced otherwise though.
"
50301,Remove some outdated security advice from Security guide [ci-skip],p8,docs,2023-12-08T09:15:54Z,2023-12-08T23:34:08Z,,"Upgrading Rails to ""at least 2.1.1"" is outdated advice. Applications should run 7.0.Z or 7.1.Z.
Also, RedCloth version 4 is from 2009, so I don't think it's that ""new"".

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50300,Take AR affixes into account for Action Mailbox database models,chaadow,actionmailbox,2023-12-08T08:25:08Z,2023-12-11T14:24:43Z,2023-12-11T14:24:43Z,"Follow up to https://github.com/rails/rails/pull/50247 and https://github.com/rails/rails/pull/50167 cc @jonathanhefner 

This removes the redundant hard coded table names to make the models compatible with `ActiveRecord::Base.{prefix|suffix}`

This also adds prefix/suffix in the dummy app to force the entire test suite to be agnostic to hard-coded table names."
50299,Take AR affixes into account for Action Text database models,chaadow,actiontext,2023-12-08T08:13:34Z,2023-12-11T14:24:22Z,2023-12-11T14:24:03Z,"Follow up to https://github.com/rails/rails/pull/50247 and https://github.com/rails/rails/pull/50167 cc @jonathanhefner 

This removes the redundant hard coded table names to make the models compatible with `ActiveRecord::Base.{prefix|suffix}`

This also adds prefix/suffix in the dummy app to force the entire test suite to be agnostic to hard-coded table names."
50298,Do not instance_eval method into RoutesProxy,bensheldon,actionpack,2023-12-08T00:33:26Z,2023-12-09T01:39:18Z,2023-12-09T01:09:47Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because `instance_eval`-ing in RoutesProxy can result in significant memory retention. This was introduced in https://github.com/rails/rails/pull/46974; it previously used `class_eval`.
 
cc @jhawthorn

### Detail

In this circumstance, `instance_eval` creates an anonymous class that is held by the VM; we saw several hundred accumulate during profiling. Unfortunately, this anonymous class also references the Controller instance, which references instance variables, and their Active Record models... and it can become quite a lot that is retained for quite a while. 

```ruby
irb(#<#<Class:0x00000001087c53e0>...):001> main_app
=>
#<ActionDispatch::Routing::RoutesProxy:0x000000010b4f4e88
 @helpers=#<Module:0x00000001074ab5e8>,
 @routes=#<ActionDispatch::Routing::RouteSet:0x0000000108822c70>,
 @scope=#<WorksController:0x00000000030700>,
 @script_namer=nil>
```


[Profiling and heap dump details are here](https://github.com/sciencehistory/scihist_digicoll/issues/2449#issuecomment-1846303545).

Instead of returning to the previous `class_eval` method definition, the behavior is invoked directly.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50297,[Fix #50256] stale state for composite foreign keys in belongs_to ass…,iamradioactive,activerecord,2023-12-07T18:36:17Z,2023-12-13T10:11:04Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fixes #50256 

**Context :** 
- A Model having query constraints and a belongs_to association.
- Associated record is loaded once.

**Action :** 
- Update Foreign key for the belongs_to association.
- Call `model.association` to refer to the associated object.

**Current Behaviour:**
- State is not changed and no reload is triggered.
- Association still points to the old record.

**Updated Behaviour:**
- State is updated and reload is triggered.
- Association points to the updated record.

### Detail

This Pull Request updates `stale_state` method in `belongs_to association` to handle composite foreign keys

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

For Additional context Please refer to #50256 

### Dependency

- This PR has a dependency on #50347 and is to be merged after those changes are approved and merged.
- It is an independent bug, however when the stale state is updated correctly it results in loss of information because of the bug to be fixed in the mentioned PR.
- Please refer to this [comment](https://github.com/rails/rails/pull/50297#issuecomment-1852817664) for additional description.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50296,Fix system tests with Chrome cached by Selenium,jonathanhefner,actionpack,2023-12-07T18:31:42Z,2023-12-07T19:57:02Z,2023-12-07T19:25:54Z,"Follow-up to #49908.

When Selenium resolves the driver path to a copy of Chrome that it has downloaded / cached, it mutates the `Selenium::WebDriver::Chrome::Options` object it receives, and relies on those changes later when the options are used.  If `Selenium::WebDriver::Chrome::Service.driver_path` is set but a different options object is used, Selenium will raise ""cannot find Chrome binary"".  Therefore, this commit ensures that the options object passed to `Selenium::WebDriver::DriverFinder.path` is the same options object used by the driver later.

Fixes #50287.
"
50295,"Rails 7.1 is latest, Security Issue Maintenance should not include `6.1.Z`",jrochkind,docs,2023-12-07T17:45:14Z,2023-12-16T21:22:09Z,,"""Security Issues"" maintanance level when 7.1. is the latest release series should include `7.1.Z` and `7.0.Z`. Currently also includes `6.1.Z` in Guide published for Rails 7.1, but should not. At https://guides.rubyonrails.org/v7.1/maintenance_policy.html

Based on policy:

> The current release series and the next most recent one will receive patches and new versions in case of a security issue.

There should always be two series listed, not three, and I think `6.1.Z` is actually not in ""Security Issues""  level of maintenance at present, now that 7.1.0 is released -- and this guide text is incorrect?

The current ""edge""/main guide, written for a 7.2 release, does only list two series, 7.2.Z and 7.1.Z, as expected. https://github.com/rails/rails/blob/fb09e7f1aa89efc82ed090443b9c6198d5f0bb3f/guides/source/maintenance_policy.md

It looks like the listing of three series including `6.1.Z` came from original ""Start Rails 7.1 development"" commit at 83d85b22074. "
50294,Similar naming of relation and enum results in scope with incorrect result,shobee,"activerecord, With reproduction steps",2023-12-07T15:16:05Z,2023-12-08T16:13:02Z,2023-12-08T16:13:01Z,"### Steps to reproduce
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""sqlite3""
  gem 'pry-byebug'
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
  end

  create_table :comments, force: true do |t|
    t.integer :post_id
    t.integer :posts
    t.integer :user_posts
  end
end

class Post < ActiveRecord::Base
  has_many :comments
end

class Comment < ActiveRecord::Base
  belongs_to :post

  enum posts: { read: 0, unread: 1 }, _prefix: true
  enum user_posts: { read: 0, unread: 1 }, _prefix: true
end

class BugTest < Minitest::Test
  def test_association_stuff
    byebug

    # See the difference between
    # (byebug) Comment.user_posts_read
    #   => SELECT ""comments"".* FROM ""comments"" WHERE ""comments"".""user_posts"" = ? LIMIT ?  [[""user_posts"", 0], [""LIMIT"", 11]]

    # and

    # (byebug) Comment.posts_read
    #   => SELECT ""comments"".* FROM ""comments"" WHERE ""comments"".""post_id"" = ? LIMIT ?  [[""post_id"", 0], [""LIMIT"", 11]]
end
```

Execute the two different commands above on console and watch the SQL results.

### Expected behavior
`Comment.posts_read`
should execute SQL Query
`SELECT ""comments"".* FROM ""comments"" WHERE ""comments"".""posts"" = ? LIMIT ?  [[""posts"", 0], [""LIMIT"", 11]]`

### Actual behavior
`Comment.posts_read`
results in 
`SELECT ""comments"".* FROM ""comments"" WHERE ""comments"".""post_id"" = ? LIMIT ?  [[""post_id"", 0], [""LIMIT"", 11]]`


### System configuration
**Rails version**: main

**Ruby version**: ruby 3.2.1


Yes, the constellation is really strange but I stumbled upon a similar situation in my clients code. I don't expect this to be fixed but rather a warning or exception about the conflict.

"
50293,calling `ActiveSupport::Cache.lookup_store` in application.rb (or environments/*.rb) causes deprecation warning,nov,,2023-12-07T07:01:09Z,2023-12-24T00:45:18Z,,"### Steps to reproduce

call `ActiveSupport::Cache.lookup_store` w/ default `config.active_support.cache_format_version` under `config.load_defaults 7.0`

at that timing, `ActiveSupport::Cache.format_version` is still [the default `6.1`](https://github.com/rails/rails/blob/c1489a8ca4a9b91e21725f6a139e82e803c9eaa6/activesupport/lib/active_support/cache.rb#L55), thus causes [this warning](https://github.com/rails/rails/blob/c1489a8ca4a9b91e21725f6a139e82e803c9eaa6/activesupport/lib/active_support/cache.rb#L773-L778)

sample app is here. you can see the warning just by running it.
https://github.com/nov/rails7_1_sample

### Expected behavior

no warning.
<!-- Tell us what should happen -->

### Actual behavior

```
% rails server
DEPRECATION WARNING: Support for `config.active_support.cache_format_version = 6.1` has been deprecated and will be removed in Rails 7.2.

Check the Rails upgrade guide at https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#new-activesupport-cache-serialization-format
for more information on how to upgrade.
```
<!-- Tell us what happens instead -->

### System configuration
**Rails version**:

**Ruby version**:
"
50292,Fix `Time.now`/`DateTime.now`/`Date.today` to return results in a system timezone after `#travel_to` in 7-0-stable,907th,activesupport,2023-12-07T06:33:03Z,2023-12-07T06:35:22Z,,"This is a backport of #50236 for 7-0-stable.

### Motivation / Background

Fix incorrect `Date.today` result value that caused [a bug with the `Faker::Time.backward` method](https://github.com/faker-ruby/faker/issues/2861) in the Faker gem.

### Detail

There is a bug in the current implementation of `#travel_to`: it remembers a timezone of its argument, and all stubbed methods (`Time.now`, `DateTime.now`, `Date.today`) start returning results in that remembered timezone. However, the expected behaviour is to return results in a system timezone.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50291,Redefine autosave callbacks if associations are overriden,joshuay03,activerecord,2023-12-07T03:22:45Z,2023-12-08T03:27:54Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Context for this change is in #50040, specifically [this comment](https://github.com/rails/rails/issues/50040#issuecomment-1826306098).
This isn't necessarilly to fix that issue, since it was mostly a bad setup, but it does ensure that users don't get unexpected behaviour just because an association was duplicated / overridden.

### Detail

This Pull Request changes `ActiveRecord::AutosaveAssociation::ClassMethods#define_non_cyclic_method` to return only if the method has been defined for the given reflection, as opposed to whether it's ever been defined on the class, to ensure that the autosave methods are redefined for associations that are overridden.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50290,Improve doc for content_type new framework default [ci-skip],skipkayhil,docs,2023-12-07T01:31:24Z,2023-12-11T06:27:02Z,2023-12-11T06:26:58Z,"Previously, the description of this configuration value explains that this configuration controls what part of the Content-Type header is returned by #content_type, but it doesn't explain what the header looks like or what the returned value looks like.

This commit adds examples for what the Content-Type header looks like and what #content_type returns in both configurations. Additionally, it adds context that this configuration is meant to be a transition between behavior in Rails 7.0 and Rails 7.1 which was previously not explained.

Ref #50238 
"
50289,Elaborate on support for hash helpers in Integration Tests [ci skip],seanpdoyle,docs,2023-12-06T22:53:46Z,2023-12-08T09:57:11Z,,"Change the Testing Guide to emphasize that `session`, `flash`, and `cookies` helpers are only available to be read from **after** a request has been made.

This is a break from `ActionController::TestCase` support for writing to these Hash helpers **before** a request has been made, so it's worth emphasizing to avoid confusing the two practices."
50288,Support for Cookies Having Independent Partitioned State (CHIPS),JonLatane,,2023-12-06T20:48:34Z,2023-12-07T06:19:04Z,2023-12-07T06:19:04Z,"### Steps to reproduce
Chrome and other browsers are phasing out third-party cookies. Many embedding applications that rely on them will need CHIPS support, as documented here: https://developer.mozilla.org/en-US/docs/Web/Privacy/Partitioned_cookies. The tl;dr is that we need to be able to add `Partitioned;` into our `Set-Cookie` headers. We already have `same_site` and `secure` cookie options that work like this (`secure` is, in fact, identical).

The nearest I've found documentation on this is here: https://github.com/rails/rails/blob/main/actionpack/lib/action_dispatch/middleware/cookies.rb#L184 But I'm not quite sure where the cookies are actually converted into a header string, so not clear on how to add CHIPS support.

### Expected behavior
Adding `partitioned: true` to an ActionDispatch cookie header hash, as described above, should add `Partitioned;` to the resulting `Set-Cookie` header string.

### Actual behavior
Adding `partitioned: true` to an ActionDispatch cookie header hash does nothing.

### System configuration
**Rails version**: 7.0.4

**Ruby version**: 3.1.3
"
50287,Rails 7.1.2 system tests won't find Chrome downloaded by selenium-webdriver,lazyatom,,2023-12-06T20:34:58Z,2023-12-07T19:57:21Z,2023-12-07T19:57:21Z,"With a recent change (#49908), if you _don't_ have the Chrome (or Chromium) browser accessible in your default system path, system tests will fail to run.

It's not necessary to have Chrome installed to use Selenium with Chrome, because the `chromedriver` binary will automatically download a version and store it in a cache directory for you.

I believe this error is caused by [the assignment to `namespace::Service.driver_path`](https://github.com/rails/rails/blob/e7d743b8ac6f6ce60753bfab3c8190e7b37eaeee/actionpack/lib/action_dispatch/system_testing/browser.rb#L74-L77):

```ruby
namespace::Service.driver_path = ::Selenium::WebDriver::DriverFinder.path( ... )
```

Internally within selenium-webdriver, if this value _is_ assigned, [some important behaviour is skipped when this code runs](https://github.com/SeleniumHQ/selenium/blob/trunk/rb/lib/selenium/webdriver/common/driver_finder.rb#L23-L31) within `selenium-webdriver`:

```ruby
        path = klass.driver_path
        path = path.call if path.is_a?(Proc)

        path ||= begin
          SeleniumManager.driver_path(options) unless options.is_a?(Remote::Capabilities)
        rescue StandardError => e
          raise Error::NoSuchDriverError, ""Unable to obtain #{klass::EXECUTABLE} using Selenium Manager; #{e.message}""
        end
```

One side-effect of the `SeleniumManager.driver_path(options)` method call is that the location of any Chrome binary is inserted _into_ the `options` Hash, which is then used in other parts of the system and ultimately sent as part of the ""capabilities"" to the `chromedriver` process.

However, if `klass.driver_path` is already set -- which is what the change in #49908 does -- then the `begin .. end` block is not evaluated, and so the location of any Chrome binary that selenium-webdrivers finds is never inserted into the `options` Hash.

In my script below I've enabled debug logging from selenium-webdriver, and within the logging, you'll see this:

```
ChromeDriver was started successfully.
2023-12-06 20:25:49 DEBUG Selenium [:command] -> POST session 
2023-12-06 20:25:49 DEBUG Selenium [:command]    >>> http://127.0.0.1:9519/session | {""capabilities"":{""alwaysMatch"":{""browserName"":""chrome"",""goog:chromeOptions"":{}}}} 
```

If I disable the change made in #49908 (e.g. by uncommenting the part of the script below that changes the `preload` method into a no-op), you'll see this in the logging instead:

```
ChromeDriver was started successfully.
2023-12-06 20:28:55 DEBUG Selenium [:command] -> POST session 
2023-12-06 20:28:55 DEBUG Selenium [:command]    >>> http://127.0.0.1:9519/session | {""capabilities"":{""alwaysMatch"":{""browserName"":""chrome"",""goog:chromeOptions"":{""binary"":""/Users/james/.cache/selenium/chrome/mac-arm64/120.0.6099.62/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing""}}}} 
```

Crucially, the ""binary"" value is present, which tells `chromedriver` how to actually launch the specific instance of Chrome that the gem has downloaded on our behalf.

### Steps to reproduce

Most importantly, you *must not* have Chrome or Chromium installed via any other mechanism.

This script is sufficient to replicate the issue for me:

```ruby
require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""capybara""
  gem ""selenium-webdriver""
end

require ""action_controller/railtie""
require ""minitest/autorun""

class TestApp < Rails::Application
  config.root = __dir__
  config.hosts << ""example.org""
  config.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger

  routes.draw do
    get ""/"" => ""test#index""
  end
end

class TestController < ActionController::Base
  include Rails.application.routes.url_helpers

  def index
    render plain: ""Home""
  end
end

Selenium::WebDriver.logger.level = :debug

# Uncomment this to see the expected behaviour
# 
# require 'action_dispatch/system_testing/browser'
# module ActionDispatch
#   module SystemTesting
#     class Browser
#       def preload
#         puts ""Skipping new preload behaviour entirely"" 
#         return
#       end
#     end
#   end
# end

class BugTest < ActionDispatch::SystemTestCase
  driven_by :selenium, using: :chrome, screen_size: [1400, 1400]

  def test_stuff
    visit ""/""
  end
end
```

### Expected behavior

The test should run without any errors.

### Actual behavior
An exception is raised:

```
Selenium::WebDriver::Error::UnknownError: unknown error: cannot find Chrome binary
    0   chromedriver                        0x000000010451c4f4 chromedriver + 4162804
    1   chromedriver                        0x000000010451467c chromedriver + 4130428
    2   chromedriver                        0x000000010416bbc0 chromedriver + 293824
    3   chromedriver                        0x000000010419b704 chromedriver + 489220
    4   chromedriver                        0x000000010419a128 chromedriver + 483624
    5   chromedriver                        0x00000001041e0c40 chromedriver + 773184
    6   chromedriver                        0x00000001041a56bc chromedriver + 530108
    7   chromedriver                        0x00000001041a6930 chromedriver + 534832
    8   chromedriver                        0x00000001044e1e20 chromedriver + 3923488
    9   chromedriver                        0x00000001044e63f4 chromedriver + 3941364
    10  chromedriver                        0x00000001044ca050 chromedriver + 3825744
    11  chromedriver                        0x00000001044e6f54 chromedriver + 3944276
    12  chromedriver                        0x00000001044bc70c chromedriver + 3770124
    13  chromedriver                        0x0000000104503998 chromedriver + 4061592
    14  chromedriver                        0x0000000104503b10 chromedriver + 4061968
    15  chromedriver                        0x00000001045142fc chromedriver + 4129532
    16  libsystem_pthread.dylib             0x000000018d431034 _pthread_start + 136
    17  libsystem_pthread.dylib             0x000000018d42be3c thread_start + 8
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:55:in `assert_ok'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/response.rb:34:in `initialize'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `new'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:83:in `create_response'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/default.rb:103:in `request'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:601:in `execute'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/remote/bridge.rb:53:in `create_session'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:317:in `block in create_bridge'
    <internal:kernel>:90:in `tap'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:316:in `create_bridge'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:74:in `initialize'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/chrome/driver.rb:35:in `initialize'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:47:in `new'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver/common/driver.rb:47:in `for'
    /Users/james/.gem/ruby/3.2.2/gems/selenium-webdriver-4.16.0/lib/selenium/webdriver.rb:89:in `for'
    /Users/james/.gem/ruby/3.2.2/gems/capybara-3.39.2/lib/capybara/selenium/driver.rb:83:in `browser'
    /Users/james/.gem/ruby/3.2.2/bundler/gems/rails-c057edaaadbe/actionpack/lib/action_dispatch/system_testing/driver.rb:55:in `block in register_selenium'
    <internal:kernel>:90:in `tap'
    /Users/james/.gem/ruby/3.2.2/bundler/gems/rails-c057edaaadbe/actionpack/lib/action_dispatch/system_testing/driver.rb:54:in `register_selenium'
    /Users/james/.gem/ruby/3.2.2/bundler/gems/rails-c057edaaadbe/actionpack/lib/action_dispatch/system_testing/driver.rb:41:in `block in register'
    /Users/james/.gem/ruby/3.2.2/gems/capybara-3.39.2/lib/capybara/session.rb:105:in `driver'
    /Users/james/.gem/ruby/3.2.2/gems/capybara-3.39.2/lib/capybara/session.rb:91:in `initialize'
    /Users/james/.gem/ruby/3.2.2/gems/capybara-3.39.2/lib/capybara.rb:421:in `new'
    /Users/james/.gem/ruby/3.2.2/gems/capybara-3.39.2/lib/capybara.rb:421:in `block in session_pool'
    /Users/james/.gem/ruby/3.2.2/gems/capybara-3.39.2/lib/capybara.rb:317:in `current_session'
    /Users/james/.gem/ruby/3.2.2/gems/capybara-3.39.2/lib/capybara/dsl.rb:46:in `page'
    /Users/james/.gem/ruby/3.2.2/gems/capybara-3.39.2/lib/capybara/dsl.rb:52:in `visit'
    selenium-webdriver-issue.rb:43:in `test_stuff'
```

### System configuration
**Rails version**: 7.1.2, edge

**Ruby version**: 3.2.2

**Chrome version**: importantly, *not installed*!
"
50286,Write server URL to a temporary file when starting Rails,andyw8,railties,2023-12-06T17:02:10Z,2023-12-15T13:01:19Z,2023-12-15T13:01:18Z,"Co-authored with @vinistock 

Expose the server URL so that external tools are able to know where the server is running.

One example would be for an [LSP](https://en.wikipedia.org/wiki/Language_Server_Protocol) implementation, so that introspection of the server can be provided.

### Detail

Write the file as part of the server initialization.

### Additional information

This could be a step towards implementing [ruby-lsp-rails](https://github.com/Shopify/ruby-lsp-rails) as a built-in Rails feature.

### Questions

Should we delete the `server_url.txt` file when the server is shutdown? If so, where in the code would that be done?

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50285,[ci skip] Clarify ConnectionPool timeout options,thegcat,docs,2023-12-06T16:34:31Z,2023-12-11T17:19:22Z,,"### Motivation / Background

Long story short: while trying to configure the timeout(s) for connections in a Zammad installation the current docs lead me to believe the `timeout` option would apply to database connections. This is compounded by the `timeout` and `checkout_timeout` options both default to 5 seconds. See also this Zammad Docs issue https://github.com/zammad/zammad/pull/4883#issuecomment-1815291895.

This Pull Request tries to clarify this in the docs by removing the `timeout` option from the Connection Pooling paragraph and explicitly explaining the Pool timeout options. The changes are broken into different Commits to keep formatting and content changes separate to make understanding what is changed easier. They might be squashed before merging.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50284,"Infer `:inverse_of` for `has_many ..., through:`",seanpdoyle,"activerecord, activestorage",2023-12-06T16:25:36Z,2023-12-20T13:22:02Z,,"### Motivation / Background

Closes [#49574][]

Issue #49574 outlines how an Active Record join model accessed through a `has_many ..., through:` association is unable to infer an appropriate `:inverse_of` association by pluralizing a predictably pluralizable class name.

### Detail

This commit resolves that issue by also checking a model's reflections for a pluralized inverse name in addition to whatever's provided through the `:as` option or inferred in the singular.

### Additional information

The issue shares a code sample:

```ruby
ActiveRecord::Schema.define do
  create_table ""listings"", force: :cascade do |t|
    t.bigint ""list_id"", null: false
    t.bigint ""pin_id"", null: false
  end

  create_table ""lists"", force: :cascade do |t|
  end

  create_table ""pins"", force: :cascade do |t|
  end
end

class Pin < ActiveRecord::Base
  has_many :listings
end

class List < ActiveRecord::Base
  has_many :listings
  has_many :pins, through: :listings
end

class Listing < ActiveRecord::Base
  belongs_to :list
  belongs_to :pin
end

class BugTest < Minitest::Test
  def test_association_stuff
    list = List.create!
    pin = list.pins.new

    pin.save!

    assert_equal [pin], list.reload.pins
    assert_equal 1, list.reload.pins.count
  end
end
```

Unfortunately, there isn't a one-to-one mapping in the test suite's `test/model` directory for this type of structure. The most similar associations were between the `Book`, `Subscription`, and `Subscriber`. For the sake of ease, this commit wraps the test block in a new `skipping_validations_for` helper method to ignore validations declared on the `Subscription` join table model.

[#49574]: https://github.com/rails/rails/issues/49574

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50283,ActiveRecord: where.associated and where.missing produce an extra join vs using where / where.not with a check for nil,nickjj,"activerecord, With reproduction steps",2023-12-06T13:55:21Z,2023-12-08T21:49:05Z,2023-12-08T21:41:01Z,"### Steps to reproduce

Here's an example where I have (2) models: `Receipt` and `Affiliate`

- An affiliate `has_many :receipts`
- A receipt `belongs_to :affiliate, optional: true`

#### associated vs where.not

Both of them produce a list of `receipts` that have an `affiliate_id` set:

```rb
Receipt.where.associated(:affiliate)
SELECT ""receipts"".* FROM ""receipts"" INNER JOIN ""affiliates"" ON ""affiliates"".""id"" = ""receipts"".""affiliate_id"" WHERE ""affiliates"".""id"" IS NOT NULL /* loading for pp */ LIMIT $1  [[""LIMIT"", 11]]

Receipt.where.not(affiliate: nil)
SELECT ""receipts"".* FROM ""receipts"" WHERE ""receipts"".""affiliate_id"" IS NOT NULL /* loading for pp */ LIMIT $1  [[""LIMIT"", 11]]
```

#### missing vs where

Both of them produce a list of `receipts` that don't have an `affiliate_id` set:

```rb
Receipt.where.missing(:affiliate)
SELECT ""receipts"".* FROM ""receipts"" LEFT OUTER JOIN ""affiliates"" ON ""affiliates"".""id"" = ""receipts"".""affiliate_id"" WHERE ""affiliates"".""id"" IS NULL /* loading for pp */ LIMIT $1  [[""LIMIT"", 11]]

Receipt.where(affiliate: nil)
SELECT ""receipts"".* FROM ""receipts"" WHERE ""receipts"".""affiliate_id"" IS NULL /* loading for pp */ LIMIT $1  [[""LIMIT"", 11]]
```

### Expected behavior

- `Receipt.where.associated(:affiliate)` produces the same query as `Receipt.where.not(affiliate: nil)`
- `Receipt.where.missing(:affiliate)` produces the same query as `Receipt.where(affiliate: nil)`

### Actual behavior

- `Receipt.where.associated(:affiliate)` creates an extra join
- `Receipt.where.missing(:affiliate)` creates an extra join

### System configuration

**Rails version**: 7.1.1

**Ruby version**: 3.2.2

**Database adapter / version**: Postgres 15.4
"
50282,Need support for bang operator version of type-casters,abdul-wahab-qbatch,,2023-12-06T12:10:39Z,2023-12-06T12:19:03Z,2023-12-06T12:19:02Z,"```ruby
type = 'classic'
type.to_sym!
```

### Expected behavior
`type` should be converted to `symbol`
### Actual behavior
`undefined method `to_sym!' for ""classic"":String (NoMethodError)
`
Rails version: 7.0.5.1
Ruby version: 3.0.2
"
50281,Expose `assert_queries` and `assert_no_queries` assertions,p8,"activerecord, railties, actionview, activestorage, actiontext",2023-12-06T10:48:35Z,2023-12-12T05:25:00Z,2023-12-11T23:29:45Z,"### Motivation / Background

To assert the expected number of queries are made, Rails internally uses `assert_queries` and `assert_no_queries`. These assertions can be useful in applications as well.

By extracting these assertions to a module, the assertions can be
included where required.
These assertions are added to `ActiveSupport::TestCase` when
ActiveRecord is defined.

ActiveStorage, ActionView and ActionText are using this module now as well, instead of duplicating the implementation.
The internal ActiveRecord::TestCase, used for testing ActiveRecord, [implements these assertions](https://github.com/rails/rails/blob/745992e93e5e0a308fcdb9dc0488396b7cd6475e/activerecord/test/cases/test_case.rb#L59) as well. However, these are slighlty more advanced/complex and use the [SQLCounter](https://github.com/rails/rails/blob/745992e93e5e0a308fcdb9dc0488396b7cd6475e/activerecord/test/cases/test_case.rb#L284) class. To keep things simple for now, this implementation isn't used.

### Additional information

These assertions are added to `ActiveSupport::TestCase`:

```ruby
class ArticleTest < ActiveSupport::TestCase
  test ""queries are made"" do
     assert_queries(1) { Article.first }
  end
end
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50280,Infer default `:inverse_of` option for `delegated_type`,seanpdoyle,activerecord,2023-12-06T03:48:22Z,2023-12-20T13:21:50Z,,"### Motivation / Background

Prior to this commit, delegated types were unable to infer their inverse associations, so saving records built with the generated `#build_ASSOCIATION` methods weren't writing to all the necessary places. For example:

```ruby
entry = Entry.create! entryable: Message.new(subject: ""Hello world!"")
entry.message.subject # => ""Hello world!""

entry.build_entryable(subject: ""Goodbye world!"").save!
entry.reload.message.subject # => ""Hello world!""
```

### Additional information

The fact that the `Entry` test model declared a `delegated_type :entryable` definition with `types: %w[ Message Comment ]` was never reciprocated in the appropriate models.

In order to pass the tests, this commit needed to define the corresponding `has_one :entry` associations. To do so, introduce the `Entryable` concern in the same style as the one mentioned in the documentation. The same extraction is made for a `UuidEntryable` concern mixed into `UuidMessage` and `UuidComment`.

Unfortunately, defining `delegated_type :thing, types: %w[ Post ]` was more tricky to fix. The `Post` test model is widely used, so defining a `has_one` had farther-reaching effects than intended. To resolve that issue, this commit redefines `:thing` to use `types: %w[ Essay ]`, which has much fewer unintended side effects.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50279,More improvements to new framework defaults doc [ci-skip],skipkayhil,docs,2023-12-06T00:20:15Z,2023-12-07T22:37:04Z,2023-12-07T22:37:00Z,"- Explain the purpose of wrap_parameters_by_default and how it replaces the wrap_parameters initializer.
- Explain why action_mailer.smtp_timeout exists and why its useful
- Add example to action_view.button_to_generates_button_tag

Ref #50238 

cc @BenSandeen"
50278,Fix link to config.active_record.protocol_adapters [ci-skip],skipkayhil,docs,2023-12-05T22:17:05Z,2023-12-05T22:24:33Z,2023-12-05T22:24:30Z,"Ref #50140 

```
*** BROKEN LINK: #config-active_record-protocol-adapters, perhaps you meant #config-active-record-protocol-adapters.
```"
50277,Improve doc for raise_on_open_redirects [ci-skip],skipkayhil,docs,2023-12-05T22:12:38Z,2023-12-05T22:38:35Z,2023-12-05T22:38:31Z,"- provide a definition for an ""open redirect""
- clarify what ""permitted open redirect"" means in this context

Ref #50238

cc @BenSandeen is this more helpful? I'll make the next PR a larger batch so there don't end up being so many but figured I'd get your opinion on one change first"
50276,fix LocalCache#read_multi_entries not namespacing keys & not deserializing raw values correctly,fusion2004,activesupport,2023-12-05T20:07:59Z,2023-12-21T19:02:36Z,2023-12-11T17:41:18Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because there are several issues w/ `read_multi` on cache stores with an active local cache:
- If using a namespace, it does not normalize the keys before looking them up in the cache and thus always falls back to looking them up in the real cache store
- If trying to lookup raw values, it would always silently fail and return `nil` for the values _if it found them in the local cache_ (this was hidden in the current tests by the above issue)

### Detail

This Pull Request changes `LocalCache#read_multi_entries` to normalize the keys before looking them up in the local cache & to pass the options down to `deserialize_entry` to correctly deserialize raw values for memcache and redis stores. It also changes the `ActiveSupport::Cache::Store#deserialize_entry` signature to account for options being passed to it (from memory, null, & file stores).

### Additional information

On any rails app configured to use :mem_cache_store and no namespace (or do have a namespace and run with the changes from the first commit), run this code in a rails console:

```ruby
class LetsMakeItBreak
  def boom
    log_it = -> { puts ""@data: #{::ActiveSupport::Cache::Strategy::LocalCache::LocalCacheRegistry.cache_for(Rails.cache.send(:local_cache_key)).instance_variable_get(:@data).inspect}"" }

    Rails.cache.with_local_cache do
      log_it.call
      puts ""fetch_multi: #{Rails.cache.fetch_multi(""blep:one"", raw: true) { 1 }}""
      log_it.call
      puts ""increment: #{Rails.cache.increment(""blep:one"", 1, raw: true)}""
      log_it.call
      puts ""read: #{Rails.cache.read(""blep:one"", raw: true)}""
      log_it.call
      puts ""read_multi: #{Rails.cache.read_multi(""blep:one"", raw: true)}""
      log_it.call
    end
  end
end

LetsMakeItBreak.new.boom
```

The output should look like:

```ruby
@data: {}
fetch_multi: {""blep:one""=>1}
@data: {""blep:one""=>""1""}
increment: 2
@data: {""blep:one""=>""2""}
read: 2
@data: {""blep:one""=>""2""}
read_multi: {""blep:one""=>nil}
@data: {""blep:one""=>""2""}
```

You can see the problem on the `read_multi` output! Suddenly, a `nil` appears instead of `""2""`.

If we turn on logging for the cache, we can see a bit more of what is happening:

```ruby
Rails.cache.logger = Logger.new($stdout)
LetsMakeItBreak.new.boom
# ...
D, [2023-12-05T11:30:47.089666 #29076] DEBUG -- : Cache read_multi: 1 key(s) specified ({:compress=>true, :compress_threshold=>1024, :raw=>true})
W, [2023-12-05T11:30:47.089719 #29076]  WARN -- : Unrecognized payload prefix ""2""; deserializing as nil
read_multi: {""blep:one""=>nil}
```

The culprit here is that the local cache strategy code was not accounting for the mem cache and redis stores expecting to pass the `raw: true` all the way down to the `deserialize_entry` method. This PR fixes that, and adjusts the overall signature of `ActiveSupport::Cache::Store#deserialize_entry` so the fix doesn't break other built-in stores like file, memory, & null.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
  * I tried to split this into 2 PRs, but fixing the first issue immediately makes the existing tests fail by exposing the second issue
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` 
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50275,Provide guidance for renaming classes in polymorphic associations [ci skip],seanpdoyle,"activerecord, docs, activestorage, actiontext",2023-12-05T19:43:49Z,2023-12-23T16:33:55Z,,"Add guidance to the Association Basics and `.belongs_to` method
documentation to encourage the renaming of a model's Ruby class to
coincide with updates to the existing data in the database.

Since Action Text and Active Storage rely on polymorphic associations,
add similar warnings to their guides.

Co-authored-by: Petrik de Heus <petrik@deheus.net>

"
50274,fix LocalCache#read_multi_entries not namespacing keys before looking them up in the cache,fusion2004,activesupport,2023-12-05T19:29:12Z,2023-12-05T20:04:56Z,2023-12-05T20:04:56Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because using `read_multi(...)` on a cache with an active `local_cache` & a namespace set will never use the values from the local cache because while the rest of the reading and writing methods normalize the keys (which prepends the namespace), `read_multi_entries` was not.

### Detail

This Pull Request changes `LocalCache#read_multi_entries` to normalize the keys before looking up values in the cache.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50273,Add `request.variant` API and guides documentation,seanpdoyle,"actionpack, docs",2023-12-05T19:04:03Z,2023-12-09T01:04:47Z,,"### Detail

Add prose and code samples for:

* `request.variant=`
* `request.variant`

Add sections to the Action View and Action Controller guides, along with some code samples.

The majority of these changes were excised from past pull requests, such as [#12977][] and [#18939][].

[#12977]: https://github.com/rails/rails/pull/12977
[#18939]: https://github.com/rails/rails/pull/18939

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50272,Seeds not always run with db:prepare,DaAwesomeP,,2023-12-05T17:50:45Z,2023-12-05T17:50:45Z,,"Hello,

It is my understanding that `db:seed` should be idempotent and should be able to be run at any time. As such, its seems like it should be run once during each invocation of `db:prepare` after the `db:migrate` step.

Example scenario: You have an existing app that already has a DB set up. You then create a model and migration called `GlobalSettings`. This model must always have exactly one row, which is added in `seeds.rb` with `GlobalSettings.create() if GlobalSettings.count == 0`.  You run the migration and then the seeds to update the app. 

I ran into this when I had the above scenario and deployed my app via the scaffolded Docker container and entrypoints. The scaffolded entrypoint runs `db:prepare` (which handles initial setup and all migrations), but this does not handle migrations requiring `db:seed` to be run again.

Related issues/pulls:

- #35768
- #44957
- #44958
- #49480

Related code (see that `db:setup` runs `db:seed` but only if the DB does not exist, `db:seed` is not run after `db:migrate`):

https://github.com/robertomiranda/rails/blob/fe006083ea0843ee37fb0259fb706a9ac5562066/activerecord/lib/active_record/railties/databases.rake#L222-L233

The template for `seeds.rb` says:
```ruby
# This file should ensure the existence of records required to run the application in every environment (production,
# development, test). The code here should be idempotent so that it can be executed at any point in every environment.
# The data can then be loaded with the bin/rails db:seed command (or created alongside the database with db:setup).
```"
50271,Use IRB 1.10.1 to avoid console test issues on CI,st0012,,2023-12-05T16:39:19Z,2023-12-05T23:17:45Z,2023-12-05T17:14:12Z,"### Motivation / Background

Fixes https://github.com/rails/rails/issues/50267

### Detail

The issue is caused by IRB's new pager feature being triggered on Rails CI. I fixed the issue by adding a defensive check to IRB's pager so when `TERM` is not set or is `""dumb""`, it won't be triggered.

(For normal interactive shell, `TERM` should be something like `xterm-256color`)

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50270,Lock irb to < 1.10 for now,casperisfine,,2023-12-05T15:33:31Z,2023-12-05T16:00:02Z,2023-12-05T15:59:48Z,"It breaks various `rails console` related integration tests:

```
Failure:
FullStackConsoleTest#test_sandbox [test/application/console_test.rb:123]:
""> "" expected, but got:

(END).
Expected ""\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n--More--\r        \r(END)"" to include ""> "".
```

I tried to figure out a fix, but ran out of time, so in order to fix CI we can lock IRB for now.

I suspect it's no big deal, the way we simulate a TTY is probably confusing irb or reline

FYI: @zzak @st0012 "
50269,ActionView::Template::Error (undefined method `__home_public_html_shared_bu ... in production environment,DeVeLo,,2023-12-05T15:06:39Z,2023-12-12T17:23:57Z,,"We are experiencing a fatal error in our Ruby on Rails application's production environment, detailed as follows:

**Error Type:** ActionView::Template::Error

**Error Message:** Undefined method __home_public_html__shared_bundle_ruby_...bundler_gems...app_views...dynamic_banners_partner_review__rating_user_erb___3326700954093423677_385800 for #<ActionView::Base:0x0000000012d090>.
Suggested Method: The error message suggests a method that might be similar: __home_public_html__shared_bundle_ruby_...app_views...dynamic_banners_partner_review__rating_user_erb___3326700954093423677_174040.

**Stack Trace:**
```
ActionView::Template::Error (undefined method `__home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_dynamic_banners_partner_review__rating_user_erb___3326700954093423677
_385800' for #<ActionView::Base:0x0000000012d090>                                                                                                                                                                                              
Did you mean?  __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_dynamic_banners_partner_review__rating_user_erb___3326700954093423677_174040                         
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_dynamic_banners_partner_review__tracker_content_erb__2450712543660762509_206180                      
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_dynamic_banners__partner_review_erb__4260822619295676666_206120                                      
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_dynamic_banners__law_info_erb__3711636851184190803_206440                                            
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_dynamic_banners__partners_bonus_erb__810643814434380193_544140                                       
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_breadcrumbs__review_erb__483708885293694536_382700                                                   
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_dynamic_banners__partners_bonus_erb__810643814434380193_181880                                       
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_sidebar__articles_list_erb___3688560259246934668_130380                                              
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_sidebar__articles_list_erb___3688560259246934668_393780                                              
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles__top_dynamic_banner_content_erb__3679471442861018855_596300                                          
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_articles_sidebar__articles_list_erb___3688560259246934668_338840                                              
               __home_public_html__shared_bundle_ruby_______bundler_gems_jb_core_c______ea____app_views_jb_core_article_pictures__picture_hash_link_erb___1662850691831340037_338820):                                        
                                                                                                                                                                                                                                               
[bundle]/gems/actionview-6.1.7.4/lib/action_view/base.rb:247:in `public_send'                                                                                                                                                                  
[bundle]/gems/actionview-6.1.7.4/lib/action_view/base.rb:247:in `_run'                                                                                                                                                                         
[bundle]/gems/actionview-6.1.7.4/lib/action_view/template.rb:154:in `block in render'                                                                                                                                                          
[bundle]/gems/activesupport-6.1.7.4/lib/active_support/notifications.rb:203:in `block in instrument'                                                                                                                                           
[bundle]/gems/activesupport-6.1.7.4/lib/active_support/notifications/instrumenter.rb:24:in `instrument'                                                                                                                                        
[bundle]/gems/activesupport-6.1.7.4/lib/active_support/notifications.rb:203:in `instrument'                                                                                                                                                    
[bundle]/gems/actionview-6.1.7.4/lib/action_view/template.rb:345:in `instrument_render_template'                                                                                                                                               
[bundle]/gems/actionview-6.1.7.4/lib/action_view/template.rb:152:in `render'                                                                                                                                                                   
[bundle]/gems/actionview-6.1.7.4/lib/action_view/renderer/partial_renderer.rb:285:in `block in render_partial_template'                                                                                                                        
[bundle]/gems/activesupport-6.1.7.4/lib/active_support/notifications.rb:203:in `block in instrument'                                                                                                                                           
[bundle]/gems/activesupport-6.1.7.4/lib/active_support/notifications/instrumenter.rb:24:in `instrument'                                                                                                                                        
[bundle]/gems/activesupport-6.1.7.4/lib/active_support/notifications.rb:203:in `instrument'                                                                                                                                                    
[bundle]/gems/actionview-6.1.7.4/lib/action_view/renderer/partial_renderer.rb:280:in `render_partial_template'                                                                                                                                 
[bundle]/gems/actionview-6.1.7.4/lib/action_view/renderer/partial_renderer.rb:271:in `render'                                                                                                                                                  
[bundle]/gems/actionview-6.1.7.4/lib/action_view/renderer/renderer.rb:81:in `render_partial_to_object'                                                                                                                                         
[bundle]/gems/actionview-6.1.7.4/lib/action_view/renderer/renderer.rb:27:in `render_to_object'                                                                                                                                                 
[bundle]/gems/actionview-6.1.7.4/lib/action_view/rendering.rb:117:in `block in _render_template'                                                                                                                                               
[bundle]/gems/actionview-6.1.7.4/lib/action_view/base.rb:273:in `in_rendering_context'                                                                                                                                                         
[bundle]/gems/actionview-6.1.7.4/lib/action_view/rendering.rb:116:in `_render_template'                                                                                                                                                        
[bundle]/gems/actionpack-6.1.7.4/lib/action_controller/metal/streaming.rb:218:in `_render_template'                                                                                                                                            
[bundle]/gems/actionview-6.1.7.4/lib/action_view/rendering.rb:103:in `render_to_body'                                                                                                                                                          
[bundle]/gems/actionpack-6.1.7.4/lib/action_controller/metal/rendering.rb:52:in `render_to_body'                                                                                                                                               
[bundle]/gems/actionpack-6.1.7.4/lib/action_controller/metal/renderers.rb:142:in `render_to_body'                                                                                                                                              
[bundle]/gems/actionpack-6.1.7.4/lib/abstract_controller/rendering.rb:47:in `render_to_string'                                                                                                                                                 
[bundle]/gems/actionpack-6.1.7.4/lib/action_controller/metal/rendering.rb:41:in `render_to_string'                                                                                                                                             
[bundle]/bundler/gems/jb_core-c236687ea073/app/controllers/votes_controller.rb:57:in `tracker_rate_response'                                                                                                                                   
[bundle]/bundler/gems/jb_core-c236687ea073/app/controllers/votes_controller.rb:15:in `rate'                                                                                                                                                    

```

**Environment:**
Occurring in the production environment.

**Additional Context:**
The error appears intermittently, which suggests it may not be consistently reproducible.
The issue seems to involve a specific template rendering method, particularly related to the use of render_to_string as a sub-method of render. The error is observed during the processing of a kind of **sub-request** within the application."
50268,Optimize `Time.at_with_coercion`,casperisfine,activesupport,2023-12-05T11:49:34Z,2023-12-05T15:08:28Z,2023-12-05T15:08:28Z,"By using `ruby2_keyword` style delegation we we can avoid a few allocations and some extra checks.

`Time.at_with_coercion` remains a significant overhead though, so hotspots should probably bypass it by calling `Time.at_without_coercion`.

```
$ ruby --yjit /tmp/bench-as-time-at.rb
ruby 3.2.2 (2023-03-30 revision e51014f9c0) +YJIT [arm64-darwin22]
=== Complex call ====
Warming up --------------------------------------
        Time.without   320.514k i/100ms
           Time.with    68.433k i/100ms
       Time.opt_with   167.532k i/100ms
Calculating -------------------------------------
        Time.without      3.781M (± 4.8%) i/s -     18.910M in   5.014574s
           Time.with      1.586M (± 3.5%) i/s -      7.938M in   5.010525s
       Time.opt_with      2.003M (± 2.4%) i/s -     10.052M in   5.021309s

Comparison:
        Time.without:  3781330.9 i/s
       Time.opt_with:  2003025.9 i/s - 1.89x  slower
           Time.with:  1586289.9 i/s - 2.38x  slower

Time.without: 2.003 alloc/iter
Time.with: 9.002 alloc/iter
Time.opt_with: 7.002 alloc/iter

=== Simple call ====
Warming up --------------------------------------
        Time.without   749.097k i/100ms
           Time.with   342.855k i/100ms
       Time.opt_with   416.063k i/100ms
Calculating -------------------------------------
        Time.without      9.289M (± 3.4%) i/s -     46.444M in   5.005361s
           Time.with      3.601M (± 2.1%) i/s -     18.171M in   5.048794s
       Time.opt_with      4.373M (± 8.1%) i/s -     22.051M in   5.084967s

Comparison:
        Time.without:  9289271.2 i/s
       Time.opt_with:  4373226.2 i/s - 2.12x  slower
           Time.with:  3600733.6 i/s - 2.58x  slower

Time.without: 1.002 alloc/iter
Time.with: 3.001 alloc/iter
Time.opt_with: 3.002 alloc/iter
```

```ruby
require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'
  gem 'activesupport', require: 'active_support/all', github: 'rails/rails'
  gem 'benchmark-ips'
end

class Time
  class << self
    def opt_at_with_coercion(time_or_number, *args)
      if args.empty?
        if time_or_number.is_a?(ActiveSupport::TimeWithZone)
          at_without_coercion(time_or_number.to_r).getlocal
        elsif time_or_number.is_a?(DateTime)
          at_without_coercion(time_or_number.to_f).getlocal
        else
          at_without_coercion(time_or_number)
        end
      else
        at_without_coercion(time_or_number, *args)
      end
    end
    ruby2_keywords :opt_at_with_coercion
  end
end

puts RUBY_DESCRIPTION

puts ""=== Complex call ====""
Benchmark.ips do |x|
  x.report(""Time.without"") do
    ::Time.at_without_coercion(223423423, 32423423, :nanosecond, in: ""UTC"")
  end

  x.report(""Time.with"") do
    ::Time.at_with_coercion(223423423, 32423423, :nanosecond, in: ""UTC"")
  end

  x.report(""Time.opt_with"") do
    ::Time.opt_at_with_coercion(223423423, 32423423, :nanosecond, in: ""UTC"")
  end

  x.compare!(order: :baseline)
end

def measure_allocs(title, iterations: 1_000)
  before = GC.stat(:total_allocated_objects)
  iterations.times do
    yield
  end
  allocs = GC.stat(:total_allocated_objects) - before
  puts ""#{title}: #{allocs.to_f / iterations} alloc/iter""
end

measure_allocs(""Time.without"") do
  ::Time.at_without_coercion(223423423, 32423423, :nanosecond, in: ""UTC"")
end

measure_allocs(""Time.with"") do
  ::Time.at_with_coercion(223423423, 32423423, :nanosecond, in: ""UTC"")
end

measure_allocs(""Time.opt_with"") do
  ::Time.opt_at_with_coercion(223423423, 32423423, :nanosecond, in: ""UTC"")
end

puts ""=== Simple call ====""
Benchmark.ips do |x|
  x.report(""Time.without"") do
    ::Time.at_without_coercion(223423423)
  end

  x.report(""Time.with"") do
    ::Time.at_with_coercion(223423423)
  end

  x.report(""Time.opt_with"") do
    ::Time.opt_at_with_coercion(223423423)
  end

  x.compare!(order: :baseline)
end

def measure_allocs(title, iterations: 1_000)
  before = GC.stat(:total_allocated_objects)
  iterations.times do
    yield
  end
  allocs = GC.stat(:total_allocated_objects) - before
  puts ""#{title}: #{allocs.to_f / iterations} alloc/iter""
end

measure_allocs(""Time.without"") do
  ::Time.at_without_coercion(223423423)
end

measure_allocs(""Time.with"") do
  ::Time.at_with_coercion(223423423)
end

measure_allocs(""Time.opt_with"") do
  ::Time.opt_at_with_coercion(223423423, 32423423)
end
```
"
50267,FullStackConsoleTest fails with `irb (1.10.0)`,yahonda,"railties, ci issues",2023-12-05T11:15:37Z,2023-12-05T17:14:13Z,2023-12-05T17:14:13Z,"Managed to reproduce CI failure https://buildkite.com/rails/rails/builds/102508#018c323f-aa3f-4317-a8ff-d56e6c424f74/

### Steps to reproduce

```ruby
git clone https://github.com/rails/rails/
cd rails/railties
bundle update irb --conservative
git diff # to show the irb version changed 
bin/test test/application/console_test.rb
```

### Expected behavior
It should pass.
### Actual behavior
It always fails as follows.

```ruby
$ git diff
diff --git a/Gemfile.lock b/Gemfile.lock
index b20a0a0b9b..fd339f71f6 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -285,7 +285,7 @@ GEM
       activesupport (>= 6.0.0)
       railties (>= 6.0.0)
     io-console (0.6.0)
-    irb (1.8.3)
+    irb (1.10.0)
       rdoc
       reline (>= 0.3.8)
     jbuilder (2.11.5)
$ bin/test test/application/console_test.rb
Run options: --seed 28275

# Running:

.F

Failure:
FullStackConsoleTest#test_sandbox_by_default_with_no_sandbox [/home/yahonda/src/github.com/rails/rails/railties/test/application/console_test.rb:123]:
""> "" expected, but got:


WARNING: terminal is not fully functional
Press RETURN to continue .
Expected ""\r\nWARNING: terminal is not fully functional\r\nPress RETURN to continue "" to include ""> "".


bin/test test/application/console_test.rb:180

F

Failure:
FullStackConsoleTest#test_environment_option_and_irb_option [/home/yahonda/src/github.com/rails/rails/railties/test/application/console_test.rb:123]:
""> "" expected, but got:

a = 1
WARNING: terminal is not fully functional
Press RETURN to continue .
Expected ""a = 1\r\nWARNING: terminal is not fully functional\r\nPress RETURN to continue "" to include ""> "".


bin/test test/application/console_test.rb:204

F

Failure:
FullStackConsoleTest#test_sandbox [/home/yahonda/src/github.com/rails/rails/railties/test/application/console_test.rb:122]:
""=> 0"" expected, but got:


irb(main):001> Pirb(main):001> Poirb(main):001> Posirb(main):001> Postirb(main):001> Post.irb(main):001> Post.cirb(main):001> Post.coirb(main):001> Post.couirb(main):001> Post.counirb(main):001> Post.count   TRANSACTION (0.0ms)  begin transaction
  Post Count (0.1ms)  SELECT COUNT(*) FROM ""posts""
WARNING: terminal is not fully functional
Press RETURN to continue .
Expected ""\r\nirb(main):001> Pirb(main):001> Poirb(main):001> Posirb(main):001> Postirb(main):001> Post.irb(main):001> Post.cirb(main):001> Post.coirb(main):001> Post.couirb(main):001> Post.counirb(main):001> Post.count\e[0m \e[0m  \e[1m\e[36mTRANSACTION (0.0ms)\e[0m  \e[1m\e[36mbegin transaction\e[0m\r\n  \e[1m\e[36mPost Count (0.1ms)\e[0m  \e[1m\e[34mSELECT COUNT(*) FROM \""posts\""\e[0m\r\nWARNING: terminal is not fully functional\r\nPress RETURN to continue "" to include ""=> 0"".


bin/test test/application/console_test.rb:140

F

Failure:
FullStackConsoleTest#test_sandbox_by_default [/home/yahonda/src/github.com/rails/rails/railties/test/application/console_test.rb:123]:
""> "" expected, but got:


WARNING: terminal is not fully functional
Press RETURN to continue .
Expected ""\r\nWARNING: terminal is not fully functional\r\nPress RETURN to continue "" to include ""> "".


bin/test test/application/console_test.rb:168

F

Failure:
FullStackConsoleTest#test_sandbox_by_default_with_development_environment [/home/yahonda/src/github.com/rails/rails/railties/test/application/console_test.rb:123]:
""> "" expected, but got:


WARNING: terminal is not fully functional
Press RETURN to continue .
Expected ""\r\nWARNING: terminal is not fully functional\r\nPress RETURN to continue "" to include ""> "".


bin/test test/application/console_test.rb:192

......

Finished in 76.221321s, 0.1574 runs/s, 0.6953 assertions/s.
12 runs, 53 assertions, 5 failures, 0 errors, 0 skips
$
```

### System configuration
**Rails version**: main branch

**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]
"
50266,"Revert ""Do not overwrite AJ logger if it is supplied""",jhawthorn,activejob,2023-12-05T01:32:57Z,2023-12-11T23:09:05Z,2023-12-05T01:52:57Z,"Reverts rails/rails#50164

[ActiveJob::Logging has a default configured](https://github.com/rails/rails/blob/main/activejob/lib/active_job/logging.rb#L11) so the `=` of the `||=` never has any effect and we'll always keep the default logger."
50265,Add webp and avif as allowed formats for active storage to serve inline,dhh,activestorage,2023-12-05T00:50:04Z,2023-12-18T01:39:05Z,2023-12-18T01:39:04Z,Let's get with the times.
50264,Introduce `package_json` Generator Action,stevepolitodesign,"railties, docs",2023-12-04T20:56:28Z,2023-12-18T15:17:05Z,,"### Motivation / Background

It's common to modify `package.json` with custom [scripts](https://docs.npmjs.com/cli/v6/using-npm/scripts).

We already support the ability to create [rake tasks](https://edgeapi.rubyonrails.org/classes/Rails/Generators/Actions.html#method-i-rakefile), so this change is in alignment with that. 

### Detail

Extends existing [Generator Actions][] by allowing the consumer to modify `package.json`.

```ruby
package_json scripts: { stylelint: ""npx stylelint 'app/assets/stylesheets/**/*.css'"" }
```

This is especially useful when used with an [Application Template][] when creating or modifying a Rails application.

```ruby
gem ""cssbundling-rails""

after_bundle do
  rails_command ""css:install:postcss""
  run ""yarn add stylelint stylelint-config-standard""
  run ""touch .stylelintrc.json""
  insert_into_file "".stylelintrc.json"", <<~JSON
    {
      ""extends"": [""stylelint-config-standard""]
    }
  JSON

  package_json scripts: { stylelint: ""npx stylelint 'app/assets/stylesheets/**/*.css'"" }
end
```

[Generator Actions]: https://edgeapi.rubyonrails.org/classes/Rails/Generators/Actions.html
[Application Template]: https://edgeguides.rubyonrails.org/rails_application_templates.html

### Additional information

I opted to not create a `package.json` file if one does not exist. Instead, the command will raise an error. This is consistent with how the `gem` command works in that it assumes the file already exists. 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50263,"Broken `order(""included.column"").includes(:included).ids` in PostgreSQL",manuelvanrijn,,2023-12-04T14:16:32Z,2023-12-08T10:52:23Z,,"### Steps to reproduce

This bug was introduced by using `group` over `distinct` in #48101. The original problem was when having a `order` on the object that is being queried and having a `includes` it would fail. After the change, this works, but results in an issue when the order is added for the object which is in the `includes`.

```ruby
  def test_includes_with_order_on_includes_object
    Post.includes(:comments)
        .order(""comments.created_at DESC"")
        .ids
  end
```

I would like to create a fix, but think we first need to make sure what the best path for the solution should be.

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""pg""
end

require 'active_record'
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
begin
  config = { adapter: ""postgresql"", encoding: 'unicode', url: ""postgresql://postgres@localhost:5432"", password: 'postgres', database: 'rails-test' }
  ActiveRecord::Base.establish_connection(config.except(:database))
  ActiveRecord::Base.connection.drop_database(config[:database]) rescue nil
  ActiveRecord::Base.connection.create_database(config[:database])
end

ActiveRecord::Base.establish_connection(config)

ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.timestamps
  end

  create_table :comments, force: true do |t|
    t.integer :post_id
    t.timestamps
  end
end

class Post < ActiveRecord::Base
  has_many :comments
end

class Comment < ActiveRecord::Base
  belongs_to :post
end

class BugTest < Minitest::Test
  def test_includes_ids
    Post.includes(:comments)
        .order(""comments.created_at DESC"") # or .merge(Comment.order(created_at: :desc))
        .ids
  end
end
```

### Expected behavior
no exception

### Actual behavior
```
ActiveRecord::StatementInvalid: PG::GroupingError: ERROR:  column ~ must appear in the GROUP BY clause or be used in an aggregate function
```

I've created this issue for Postgres, but MySQL would also give an error with default configurations. Changing `sql_mode` would resolve the error
```
ORDER BY clause is not in GROUP BY clause and contains nonaggregated column 'sqltest_tmp_db.comments.description' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
```

### System configuration
**Rails version**: main

**Ruby version**: 3.2.2
"
50262,Use RedCloth GitHub instead of an expired domain,Techbrunch,docs,2023-12-04T13:45:12Z,2023-12-04T15:56:04Z,2023-12-04T15:52:59Z,
50261,Fix [#50260] Support `:on` option in `#set_callback`,joshuay03,activerecord,2023-12-04T12:44:48Z,2023-12-20T07:22:23Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Attempts to fix https://github.com/rails/rails/issues/50260

### Detail

Introduces `ActiveRecord::Transactions::ClassMethods#set_callback` which behaves like `ActiveSupport::Callbacks::ClassMethods#set_callback` with support for the `:on` option available on `#after_commit` and `#after_rollback` callbacks.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50260,`#set_callback` does not support `:on` option,joshuay03,"activerecord, attached PR",2023-12-04T12:42:16Z,2023-12-05T04:43:07Z,,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

A (common?) pattern in Rails apps is to skip a callback and reenable it. However, there's no straightforward way to do this when the callback is originally defined with the `:on` option. This option is only supported by the `after_commit` (including the following shortcuts: `after_save_commit`, `after_create_commit`, `after_update_commit`, `after_destroy_commit`) and `after_rollback` callbacks.

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
  gem ""net-protocol"", ""0.2.2""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.string :title, null: false
  end
end

class Post < ActiveRecord::Base
  after_update_commit :my_method

  private
    def my_method
      puts ""in my_method""
    end
end

class BugTest < Minitest::Test
  def test_set_callback_with_on
    post = Post.create!(title: ""Created title"") # nothing printed ✅
    post.update!(title: ""Updated title 1"") # prints ""in my_method"" ✅

    Post.skip_callback(:commit, :after, :my_method)

    post.update!(title: ""Updated title 2"") # nothing printed ✅

    Post.set_callback(:commit, :after, :my_method, on: :update) # not supported

    post = Post.create!(title: ""Created title"") # prints ""in my_method"" ❌
    post.update!(title: ""Updated title 1"") # prints ""in my_method"" ✅
  end
end
```

A (not ideal) workaround to solve this currently is to mimic how the conditions are set when the callback is defined.

<details>
<summary>For example, here's how the options are set for `#after_update_commit`</summary>

https://github.com/rails/rails/blob/06d9c3cbe6c92ea2ca8dd6d601a0997821748b5e/activerecord/lib/active_record/transactions.rb#L249-L253

https://github.com/rails/rails/blob/06d9c3cbe6c92ea2ca8dd6d601a0997821748b5e/activerecord/lib/active_record/transactions.rb#L278-L290

https://github.com/rails/rails/blob/06d9c3cbe6c92ea2ca8dd6d601a0997821748b5e/activerecord/lib/active_record/transactions.rb#L444-L455

</details>

We can do the following to simulate the above:

```ruby
Post.set_callback(:commit, :after, :my_method, if: -> { transaction_include_any_action?([:update]) })
```

or

```ruby
Post.set_callback(:commit, :after, :my_method, if: -> { !(@_new_record_before_last_commit || destroyed?) && _trigger_update_callback) })
```

I think a patch for this is tricky since these callback types are defined by `ActiveRecord` but `#set_callback` is defined in `ActiveSupport`. I got [this PR](https://github.com/rails/rails/pull/50261) up as a POC of one possible solution which shouldn't break any existing usage of `#set_callback` while also adding this new functionality.

### Expected behavior
<!-- Tell us what should happen -->

A callback set with `#set_callback` and a `on: :action` option should only run when that action is triggered.

### Actual behavior
<!-- Tell us what happens instead -->

A callback set with `#set_callback` and a `on: :action` option runs independent of that action.

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50259,Getting Started Guide needs more detail on default value in migration,bgiobbe,,2023-12-04T05:41:36Z,2023-12-04T09:19:22Z,2023-12-04T09:19:22Z,"In [Getting Started With Rails](https://guides.rubyonrails.org/getting_started.html), section 9.3 Using Concerns, it says:  
> To choose the status for the existing articles and comments you can add a default value to the generated migration files by adding the default: ""public"" option and launch the migrations again. 

Please show the exact migration code lines with the default: ""public"" option. I am having trouble finding the correct syntax in the Active Record Migrations guide.

### System configuration
**Rails version**:
7.1.2
**Ruby version**:
n/a"
50258,Eager loading bug with inverse_of and the same model in the query twice,pjb3,activerecord,2023-12-03T19:33:46Z,2023-12-19T22:40:26Z,,"I'm using Rails 7.1.2 and Ruby 3.2.2 and I'm seeing a bug with how associated records are loaded when `has_many_inversing` is enabled and `inverse_of` is used in the association and the association is used in the query twice. If you have a parent-child association like this:

```ruby
class User < ActiveRecord::Base
  belongs_to :group, inverse_of: :users
end

class Group < ActiveRecord::Base
  has_many :users, inverse_of: :group
end
```

Then say you have a group with 2 users:

```ruby
group = Group.create!(name: ""Test"")

User.create!(group: group, name: ""John"")
User.create!(group: group, name: ""Jane"")
```

Now let's say you load one of the users and eagerly load the group and the users in the group, like this:

```ruby
User.eager_load(:group => :users).where(""users.id = ?"", 1).first.group.users.map(&:name)
```

I would expect this to return the 2 users, like this:

```ruby
[""John"", ""Jane""]
```

But instead the group is repeated, like this:

```ruby
[""John"", ""John"", ""Jane""]
```

This bug only happens when `has_many_inversing` is set to `true`.

Here is a standalone script that reproduces the issue:

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Base.has_many_inversing = true

ActiveRecord::Schema.define do
  create_table ""groups"", force: :cascade do |t|
    t.string ""name""
    t.datetime ""created_at"", null: false
    t.datetime ""updated_at"", null: false
  end

  create_table ""users"", force: :cascade do |t|
    t.integer ""group_id"", null: false
    t.string ""name""
    t.datetime ""created_at"", null: false
    t.datetime ""updated_at"", null: false
    t.index [""group_id""], name: ""index_users_on_group_id""
  end

  add_foreign_key ""users"", ""groups""
end

class User < ActiveRecord::Base
  belongs_to :group, inverse_of: :users
end

class Group < ActiveRecord::Base
  has_many :users, inverse_of: :group
end

class BugTest < Minitest::Test
  def test_association_loads_correct_number_of_records
    # Create a group
    group = Group.create!(name: ""Test"")

    # Create two users in the group
    john = User.create!(group: group, name: ""John"")
    jane = User.create!(group: group, name: ""Jane"")

    group = Group.find(group.id)
    john = User.find(john.id)
    jane = User.find(jane.id)

    # When you load the use then get the size of the users in the group, you correctly get 2
    assert_equal 2, john.group.users.map(&:name).size

    # But when you eager_load the first user, there are 3 users in the group
    assert_equal 2, User.eager_load(:group => :users).where(""users.id = ?"", 1).first.group.users.map(&:name).size,
      ""expected the first group to have 2 users""
  end
end
```
"
50257,"Sanitize and treat `ActionText::Content#to_{trix_html,html}` as safe",seanpdoyle,actiontext,2023-12-03T18:52:51Z,2023-12-03T19:53:15Z,2023-12-03T19:26:25Z,"### Motivation / Background

Prior to this commit, the HTML strings created from `ActionText::Content` instances were not marked as HTML safe, despite the fact that they were parsed and rendered as fragments by Nokogiri.

### Detail

This commit changes `ActionText::HtmlConversion.node_to_html` to mark the Nokogiri-rendered strings as safe.

```ruby
content = ActionText::Content.new(""<div>hello world</div>"")

content.to_html.html_safe? # => true
content.to_trix_html.html_safe? # => true
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50256,Rails 7.1: query_constraints: causes relation to not be loaded.,yosiat,activerecord,2023-12-03T18:16:43Z,2023-12-16T17:02:52Z,,"While trying to use `query_constraints` (awesome feature 🙏 ) I have seen a case where a relation is `nil` on `after_add` callback.

I reduced my application to this reproduction script and to cause `comment.author` to be nil with `query_constraints` we need to have: Default order in `comments` & `after_initialize` that touches the model.

See the script below to better understand my reproduction.

### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""pg""
end

require ""active_record""
require ""logger""

ActiveRecord::Base.establish_connection(
  adapter: ""postgresql"",
  database: ""test"",
  encoding: ""unicode"",
  host: ""localhost"",
  port: ""5432"",
  password: ""12345"",
  username: ""test"")

ActiveRecord::Schema.define do
  create_table :comments, force: true do |t|
    t.integer :tenant_id
    t.integer :author_id
    t.string :body
    t.integer :position
  end

  create_table :authors, force: true do |t|
    t.integer :tenant_id
  end
end

class Author < ActiveRecord::Base
  query_constraints :tenant_id, :id

  has_many :comments, -> { order(position: :asc) }, after_add: :on_comment_added

  def on_comment_added(comment)
    puts ""added comment: #{comment.author}""
  end
end

class Comment < ActiveRecord::Base
  query_constraints :tenant_id, :id

  belongs_to :author

  after_initialize :calculate_rating, if: :new_record?

  def calculate_rating
    # In our-case since we access `self.author` in `after_initialize` (which always be empty in this case - valid)
    # this will make `comment.author` to be later (in `on_comment_added`) to be blank.
    #
    # In real-world we call this in `after_initialize` and in other callbacks.
    puts ""author_id: #{self.author}""
  end
end

author = Author.create!(tenant_id: 1)
author.comments << Comment.create(body: ""hello"", tenant_id: 1)
```


### Expected behavior

`comment.author` to be accesible in `on_comment_added`, so if we run the reproduce script without `query_constraints`,
we should get this output:
```
author_id: 
added comment: #<Author:0x00000001312f6a48>
```

<!-- Tell us what should happen -->

### Actual behavior

`comment.author` is nil in `on_comment_added`, so we get this output:
```
author_id: 
added comment: 
```

### System configuration
**Rails version**: 7.1
**Ruby version**: `ruby 3.2.2 (2023-03-30 revision e51014f9c0) [arm64-darwin22]`
"
50255,Add test coverage for `rich_text_area` helper,seanpdoyle,actiontext,2023-12-03T17:32:20Z,2023-12-03T21:45:31Z,2023-12-03T21:41:42Z,"### Motivation / Background

Follow-up to [#50252][]

Similar to the reliance on a `FormBuilder` in the helper methods documentation examples, the template test coverage for `#rich_text_area` relied on invocations through a `FormBuilder` instance.

### Detail

This commit adds explicit coverage for calling the `#rich_text_area` helper method directly with both an `object_name` and `method_name` positional arguments.

[#50252]: https://github.com/rails/rails/pull/50252

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50254,Action Text Source-to-Compiled code drift,seanpdoyle,actiontext,2023-12-03T17:18:33Z,2023-12-03T17:21:50Z,2023-12-03T17:21:46Z,"### Motivation / Background

When executing `bin/test` locally on `main`, the following error is raised:

```
Run options: --seed 24472

.......[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: f2998ceb-b80b-428e-8a9b-50c659b84a36) to Test(default) with arguments: #<GlobalID:0x0000000110030438 @uri=#<URI::GID gid://dummy/ActiveStorage::Blob/1>>
.[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 23beadd0-3ae1-4a20-9d09-8c271a54546c) to Test(default) with arguments: #<GlobalID:0x0000000112a52928 @uri=#<URI::GID gid://dummy/ActiveStorage::Blob/1>>
.[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 1bb5caf7-fda2-4d6d-8d76-74ce4de62599) to Test(default) with arguments: #<GlobalID:0x0000000112a37f38 @uri=#<URI::GID gid://dummy/ActiveStorage::Blob/1>>
..............[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: cde515b0-98ad-4abd-9e1e-37ae91f00f3e) to Test(default) with arguments: #<GlobalID:0x00000001131768d0 @uri=#<URI::GID gid://dummy/ActiveStorage::Blob/1>>
.[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 2fa629c2-b865-4c0f-8d9c-e90d032bb2b4) to Test(default) with arguments: #<GlobalID:0x00000001131f9410 @uri=#<URI::GID gid://dummy/ActiveStorage::Blob/1>>
.[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: a919f297-1633-4337-8889-843ce1284f15) to Test(default) with arguments: #<GlobalID:0x00000001103b3100 @uri=#<URI::GID gid://dummy/ActiveStorage::Blob/1>>
.......[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: eed283fd-f78b-4cbd-8afe-9cb637e1def8) to Test(default) with arguments: #<GlobalID:0x0000000112a9e940 @uri=#<URI::GID gid://dummy/ActiveStorage::Blob/1>>
[ActiveJob] Enqueued BroadcastJob (Job ID: 967d6cd7-8d48-4cd4-9344-5b8522cfdef5) to Test(default) with arguments: ""/var/folders/4q/q308vb3s12x2rzrgppdsz0540000gn/T/d20231203-60132-178n3r/broadcast.html"", #<GlobalID:0x0000000112a99878 @uri=#<URI::GID gid://dummy/Message/926854805>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [eed283fd-f78b-4cbd-8afe-9cb637e1def8] Performing ActiveStorage::AnalyzeJob (Job ID: eed283fd-f78b-4cbd-8afe-9cb637e1def8) from Test(default) enqueued at 2023-12-03T17:15:25.508670000Z with arguments: #<GlobalID:0x0000000112a92bb8 @uri=#<URI::GID gid://dummy/ActiveStorage::Blob/1>>
[ActiveJob] [ActiveStorage::AnalyzeJob] [eed283fd-f78b-4cbd-8afe-9cb637e1def8] Performed ActiveStorage::AnalyzeJob (Job ID: eed283fd-f78b-4cbd-8afe-9cb637e1def8) from Test(default) in 105.62ms
[ActiveJob] [BroadcastJob] [967d6cd7-8d48-4cd4-9344-5b8522cfdef5] Performing BroadcastJob (Job ID: 967d6cd7-8d48-4cd4-9344-5b8522cfdef5) from Test(default) enqueued at 2023-12-03T17:15:25.509141000Z with arguments: ""/var/folders/4q/q308vb3s12x2rzrgppdsz0540000gn/T/d20231203-60132-178n3r/broadcast.html"", #<GlobalID:0x0000000112f364d0 @uri=#<URI::GID gid://dummy/Message/926854805>>
[ActiveJob] [BroadcastJob] [967d6cd7-8d48-4cd4-9344-5b8522cfdef5] Performed BroadcastJob (Job ID: 967d6cd7-8d48-4cd4-9344-5b8522cfdef5) from Test(default) in 2.65ms
..............................................................yarn run v1.22.19
$ rollup --config rollup.config.js
Done in 0.53s.
F

Failure:
JavascriptPackageTest#test_compiled_code_is_in_sync_with_source_code [REDACTED/rails/rails/actiontext/test/javascript_package_test.rb:14]:
--- expected
+++ actual
@@ -502,7 +502,7 @@
     }
   }
   class BlobRecord {
-    constructor(file, checksum, url, customHeaders = {}) {
+    constructor(file, checksum, url) {
       this.file = file;
       this.attributes = {
         filename: file.name,
@@ -516,9 +516,6 @@
       this.xhr.setRequestHeader(\""Content-Type\"", \""application/json\"");
       this.xhr.setRequestHeader(\""Accept\"", \""application/json\"");
       this.xhr.setRequestHeader(\""X-Requested-With\"", \""XMLHttpRequest\"");
-      Object.keys(customHeaders).forEach((headerKey => {
-        this.xhr.setRequestHeader(headerKey, customHeaders[headerKey]);
-      }));
       const csrfToken = getMetaValue(\""csrf-token\"");
       if (csrfToken != undefined) {
         this.xhr.setRequestHeader(\""X-CSRF-Token\"", csrfToken);
@@ -598,12 +595,11 @@
   }
   let id = 0;
   class DirectUpload {
-    constructor(file, url, delegate, customHeaders = {}) {
+    constructor(file, url, delegate) {
       this.id = ++id;
       this.file = file;
       this.url = url;
       this.delegate = delegate;
-      this.customHeaders = customHeaders;
     }
     create(callback) {
       FileChecksum.create(this.file, ((error, checksum) => {
@@ -611,7 +607,7 @@
           callback(error);
           return;
         }
-        const blob = new BlobRecord(this.file, checksum, this.url, this.customHeaders);
+        const blob = new BlobRecord(this.file, checksum, this.url);
         notify(this.delegate, \""directUploadWillCreateBlobWithXHR\"", blob.xhr);
         blob.create((error => {
           if (error) {
@@ -1370,7 +1366,7 @@
 }

 class BlobRecord {
-  constructor(file, checksum, url, customHeaders = {}) {
+  constructor(file, checksum, url) {
     this.file = file;
     this.attributes = {
       filename: file.name,
@@ -1384,9 +1380,6 @@
     this.xhr.setRequestHeader(\""Content-Type\"", \""application/json\"");
     this.xhr.setRequestHeader(\""Accept\"", \""application/json\"");
     this.xhr.setRequestHeader(\""X-Requested-With\"", \""XMLHttpRequest\"");
-    Object.keys(customHeaders).forEach((headerKey => {
-      this.xhr.setRequestHeader(headerKey, customHeaders[headerKey]);
-    }));
     const csrfToken = getMetaValue(\""csrf-token\"");
     if (csrfToken != undefined) {
       this.xhr.setRequestHeader(\""X-CSRF-Token\"", csrfToken);
@@ -1469,12 +1462,11 @@
 let id = 0;

 class DirectUpload {
-  constructor(file, url, delegate, customHeaders = {}) {
+  constructor(file, url, delegate) {
     this.id = ++id;
     this.file = file;
     this.url = url;
     this.delegate = delegate;
-    this.customHeaders = customHeaders;
   }
   create(callback) {
     FileChecksum.create(this.file, ((error, checksum) => {
@@ -1482,7 +1474,7 @@
         callback(error);
         return;
       }
-      const blob = new BlobRecord(this.file, checksum, this.url, this.customHeaders);
+      const blob = new BlobRecord(this.file, checksum, this.url);
       notify(this.delegate, \""directUploadWillCreateBlobWithXHR\"", blob.xhr);
       blob.create((error => {
         if (error) {

bin/test test/javascript_package_test.rb:6

Finished in 1.496971s, 63.4615 runs/s, 140.2833 assertions/s.
95 runs, 210 assertions, 1 failures, 0 errors, 0 skips
```

### Detail

This commit aims to synchronize the JavaScript source defined in `app/javascript` with the compiled output defined in `app/assets/javascripts`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50253,Should we allow update associations from nested_attributes not only by id?,ngoral,,2023-12-03T17:11:04Z,2023-12-04T00:38:49Z,2023-12-04T00:38:48Z,"It is not an issue, but a question with a suggestion.
At the moment, if I use `accepts_nested_attributes_for`, the associations will update only if I pass `id`. But sometimes it's just not a case. Sometimes we can find a unique record for update without id. By the id of the parent record and some other field of the association.

The following may be not the best example in real world, but I hope everyone would understand the concept.
Let's say we have a user and his notes. And we want notes of a user to have unique names.
```ruby
class User < ApplicationRecord
  has_many :notes
  accepts_nested_attributes_for :notes
end

class Note < ApplicationRecord
  belongs_to :user
  validates :title, uniqueness: { scope: :user_id }
end
```

And, let's say we have the API, and user does not know the ids of the notes, because.. why should they? =)
In that case I would receive a request with following parameters: `{ user: { foo: bar, notes_attributes: [{ title: 'I do not know the id', content: 'boo' }] } }`. Having these parameters I would have to either not use nested attributes and do everything by myself, or could process attributes, finding the id of every record and adding it to the attributes.

But if only we could find records by some other field...
Something like this: `accepts_nested_attributes_for :notes, key: :title`. And it will find the records for update by this key, not by id.
I took a glance on the NestedAttributes sources and it seems doable. And I could try to do it, but just wanted to know if there are some arguments against such behavior and functions.

What do you think?"
50252,Action Text `rich_text_area` code samples [ci skip],seanpdoyle,actiontext,2023-12-03T16:42:53Z,2023-12-03T17:52:56Z,2023-12-03T17:04:12Z,"### Motivation / Background

The API documentation for the `rich_text_area` Action View helper demonstrates how to invoke the helper through a `FormBuilder` instance, instead of through the `ActionView::Base` instance.

### Detail

This commit removes the `form.` prefix, and includes examples of calling the method with an `object_name` positional argument."
50251,[Fix #49874] `has_secure_token` calls the setter method on initialize,abeidahmed,activerecord,2023-12-03T10:40:40Z,2023-12-04T07:51:17Z,2023-12-04T00:34:29Z,"### Motivation / Background

Fixes #49874 

### Detail

The original behavior of `has_secure_token` was to use the `send(""#{attribute}="", some_value)` method so that the setter method, if defined, was called. PR #49146 replaced the `send` method with `write_attribute` which doesn't call the setter method and breaks existing applications.

### Additional information

Follow-up to #49146

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50250,Merge pull request #50245 from seanpdoyle/field-id-field-name-docs,p8,actionview,2023-12-03T10:29:25Z,2023-12-03T10:29:51Z,2023-12-03T10:29:36Z,
50249,Add actionview deprecation to 7.2 release note [skip ci],akhilgkrishnan,docs,2023-12-03T05:22:11Z,2023-12-05T14:03:49Z,2023-12-05T00:25:45Z,"We deprecated passing content to void elements when using `tag.br` type tag builders in https://github.com/rails/rails/pull/50159

### Detail

This Pull Request add the deprecation changes to 7.2 release note.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc: @skipkayhil 
"
50247,Make isolated engines aware of ActiveRecord::Base table name prefix,chaadow,railties,2023-12-02T19:30:57Z,2023-12-21T18:25:26Z,2023-12-06T22:37:21Z,"Fixes https://github.com/rails/rails/issues/50246 cc @jonathanhefner 
<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because to fix a long standing issue with isolated engines.
In effect, isolated engines define their own `table_name_prefix` method which does not take into consideration The ActiveRecord table name prefix.

### Detail

This Pull Request redefines `table_name_prefix` for engines only when ActiveRecord is loaded. this will allow to prepend `ActiveRecord::Base.table_name_prefix` for isolated engines that generate AR tables for their internal use.

### Additional information

This will fix engines such as `active_storage`, `action_text` and `action_mailbox` that generate tables.

- For ActiveStorage, this PR to be merged first because table names are hard coded https://github.com/rails/rails/pull/50167 
- For the two latter, they would need a separate PR should their AR model have hard coded table names.

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50246,Global Rails Engines issue using `isolate_namespace` not respecting ActiveRecord table name prefix ,chaadow,"engines, attached PR",2023-12-02T15:01:19Z,2023-12-06T22:37:23Z,2023-12-06T22:37:22Z,"cc @jonathanhefner 

Discovered in https://github.com/rails/rails/pull/50167 while trying to fix https://github.com/rails/rails/issues/35811

### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->
From: https://github.com/rails/rails/pull/50167#issuecomment-1832448732 


<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""rails/all""

module TestEngine
  class Engine < Rails::Engine
    isolate_namespace TestEngine
  end

  class Record < ActiveRecord::Base
  end
end

class TestApp < Rails::Application
  config.load_defaults Rails::VERSION::STRING.to_f

  config.root = __dir__
  config.hosts << ""example.org""
  config.eager_load = false
  config.session_store :cookie_store, key: ""cookie_store_key""
  config.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger

  config.active_record.table_name_prefix = ""abc_""
  config.active_record.table_name_suffix = ""_xyz""
end

ENV[""DATABASE_URL""] = ""sqlite3::memory:""

Rails.application.initialize!

ActiveRecord::Schema.define do
  create_table :test_engine_records do |t|
    t.string :value
  end
end

require ""minitest/autorun""

class EngineTest < Minitest::Test
  def test_record_table_name
    assert_equal ""abc_test_engine_records_xyz"", TestEngine::Record.table_name
  end

  def test_record
    TestEngine::Record.create!(value: ""foo"")
    assert_equal ""foo"", TestEngine::Record.first.value
  end
end
```

### Expected behavior
<!-- Tell us what should happen -->
Engine models should respect both ActiveRecord table name prefix and suffix

### Actual behavior
<!-- Tell us what happens instead -->
Engine models only respects the table name suffix but not the prefix. And for internal rails gems/engines like ActiveStorage and ActionText, they do not respect both because of the hard coded table names.

A partial fix to this issue for AS can be found in this commit with a unit test similar to the reproduction script: https://github.com/chaadow/rails/commit/ee2f7df6b174291171aa97411a0485f1552206fe#diff-c7ed83d63aba266c9477a423f458fbd44d0ba4f192331e0b2d6e3f69c8faa8f6R3-R8

### System configuration
**Rails version**:
main / 7.1.x ( but also 7.x and probably older.)
**Ruby version**:
3.2.2"
50245,Action View Docs: `field_id` and `field_name` examples [ci skip],seanpdoyle,actionview,2023-12-02T14:06:39Z,2023-12-02T17:50:49Z,2023-12-02T17:49:22Z,"### Motivation / Background

Several code samples for `field_id` and `field_name` cite the use of [text_field_tag][]-style helper. That usage is incorrect. The helper interface that `field_id` and `field_name` mimic is the [text_field][]-style helper, without the `_tag` suffix.

[text_field_tag]: https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html#method-i-text_field_tag
[text_field]: https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-text_field
"
50244,Merge pull request #50233 from rails/lock-json-gem,zzak,,2023-12-02T10:27:32Z,2023-12-02T12:02:52Z,2023-12-02T11:55:48Z,"Lock json gem

Backports #50233 to `7-0-stable`
"
50243,Merge pull request #50233 from rails/lock-json-gem,zzak,,2023-12-02T10:27:25Z,2023-12-02T12:02:56Z,2023-12-02T11:55:35Z,"Lock json gem

Backports #50233 to `7-1-stable`
"
50242,Update security.md typo about HTTP Strict-Transport-Security [ci-skip],yysaki,docs,2023-12-02T08:36:55Z,2023-12-02T09:44:11Z,2023-12-02T09:06:25Z,"### Motivation / Background


This Pull Request has been created because of a security.md typo about HTTP Strict-Transport-Security.
The abbreviation for HTTP Strict-Transport-Security is written as ""HTST"" in that text, but the correct is ""HSTS"".

### Detail

This Pull Request changes changes the spelling of abbreviation in security.md

### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50241,Alias `field_set_tag` helper to `fieldset_tag`,seanpdoyle,actionview,2023-12-02T06:10:32Z,2023-12-02T13:07:36Z,2023-12-02T09:23:24Z,"### Motivation / Background

The [field_set_tag][] renders a `<fieldset>` element. At times, the desire to render a `fieldset` results in calling `fieldset_tag`, only to be surprised by a `NoMethodError`.

Originally, the method's name was `fieldset_tag` helper (defined in [0e6c8e5][] in 2007), but was renamed in [73c7083][] (3 days later).

### Detail

This commit aliases `field_set_tag` to `fieldset_tag` so that both are available.

### Additional information

Additionally, defines the method so that it utilizes the [content_tag][] so that it isn't responsible for manually managing the closing (`</fieldset>`) of the opening `<fieldset>` tag.

[field_set_tag]: https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html#method-i-field_set_tag
[0e6c8e5]: https://github.com/rails/rails/commit/0e6c8e5f6c168b9d376122f730c604d3758f4b04
[73c7083]: https://github.com/rails/rails/commit/73c70836515879f69a152535f3ab411acc3317b8
[content_tag]: https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/TagHelper.html#method-i-content_tag

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50240,[Fix #50230] Preserve serialized timezone when deserializing with `ActiveJob::Serializers::TimeWithZoneSerializer`,joshuay03,activejob,2023-12-02T06:02:46Z,2023-12-02T20:51:56Z,2023-12-02T15:05:46Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fixes https://github.com/rails/rails/issues/50230

### Detail

This Pull Request changes `ActiveJob::Serializers::TimeWithZoneSerializer` to include the time zone of the provided time with zone object in the serialized hash which is then used during deserialization.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

A side effect of this change is that `ActiveJob::Serializers::TimeWithZoneSerializer` now inherits directly from `ActiveJob::Serializers::ObjectSerializer` instead of `ActiveJob::Serializers::TimeObjectSerializer` in order to define it's own `#serialize`. I don't see another way to implement this while preserving the current inheritance.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50239,Batch define `FormBuilder` methods with `CodeGenerator`,seanpdoyle,actionview,2023-12-02T05:47:37Z,2023-12-02T13:07:22Z,2023-12-02T09:21:35Z,"### Detail

Define the `ActionView::Helpers::FormBuilder` methods that wrap the `@template` instance methods inside an
`ActiveSupport::CodeGenerator.batch` call so that the underlying `class` extensions aren't invoked more than once.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50238,Rails New Framework Default Documentation is Inadequate,BenSandeen,docs,2023-12-01T20:01:48Z,2023-12-18T19:17:13Z,,"### Steps to reproduce
Go to https://guides.rubyonrails.org/v7.0/configuring.html and try to figure out what each setting does

### Expected behavior
Documentation documents things and explains how they work

### Actual behavior
Documentation restates each new framework default in plain English, typically with little or no additional information

### System configuration
**Rails version**: 7.0

**Ruby version**: 3.0

Sorry for being a bit flippant, but it's _incredibly frustrating_ when trying to turn on these new framework defaults (which are, by definition, very likely to be breaking changes) and the official documentation doesn't explain the before and after states or give examples of the impact the new config might have.  To me, it feels like going to swimming lessons and all the instructor says is, ""Keep your head above the water.""

Sorry if this isn't the right place to report this problem."
50237,Rails new command very verbose ,faraazahmad,,2023-12-01T19:52:00Z,2023-12-07T01:10:39Z,2023-12-02T09:55:45Z,"### Steps to reproduce

```sh
rails new <appname>
```

### Expected behavior

I do recognize this issue might be trivial so feel free to close this. 

For someone familiar with Rails, they would see all the files/folders being created and gems being installed and they know whats going on. For someone who's totally new (who is someone the Rails community is trying to be more welcoming to) this might be intimidating, I've been using Yarn recently and I think it prevents the information overload pretty well. 

By default, I would expect the output to be minimal, for example, see the output of creating a new Nuxtjs app. The current output can still be viewed using a `verbose` flag. 

### Actual behavior

I get this giant wall of text when creating a new rails app:

```
      create  
      create  README.md
      create  Rakefile
      create  .ruby-version
      create  config.ru
      create  .gitignore
      create  .gitattributes
      create  Gemfile
         run  git init from "".""
Initialized empty Git repository in /Users/faraaz/oss/reseed/.git/
      create  app
      create  app/assets/config/manifest.js
      create  app/assets/stylesheets/application.css
      create  app/channels/application_cable/channel.rb
      create  app/channels/application_cable/connection.rb
      create  app/controllers/application_controller.rb
      create  app/helpers/application_helper.rb
      create  app/jobs/application_job.rb
      create  app/mailers/application_mailer.rb
      create  app/models/application_record.rb
      create  app/views/layouts/application.html.erb
      create  app/views/layouts/mailer.html.erb
      create  app/views/layouts/mailer.text.erb
      create  app/assets/images
      create  app/assets/images/.keep
      create  app/controllers/concerns/.keep
      create  app/models/concerns/.keep
      create  bin
      create  bin/rails
      create  bin/rake
      create  bin/setup
      create  Dockerfile
      create  .dockerignore
      create  bin/docker-entrypoint
      create  config
      create  config/routes.rb
      create  config/application.rb
      create  config/environment.rb
      create  config/cable.yml
      create  config/puma.rb
      create  config/storage.yml
      create  config/environments
      create  config/environments/development.rb
      create  config/environments/production.rb
      create  config/environments/test.rb
      create  config/initializers
      create  config/initializers/assets.rb
      create  config/initializers/content_security_policy.rb
      create  config/initializers/cors.rb
      create  config/initializers/filter_parameter_logging.rb
      create  config/initializers/inflections.rb
      create  config/initializers/new_framework_defaults_7_1.rb
      create  config/initializers/permissions_policy.rb
      create  config/locales
      create  config/locales/en.yml
      create  config/master.key
      append  .gitignore
      create  config/boot.rb
      create  config/database.yml
      create  db
      create  db/seeds.rb
      create  lib
      create  lib/tasks
      create  lib/tasks/.keep
      create  lib/assets
      create  lib/assets/.keep
      create  log
      create  log/.keep
      create  public
      create  public/404.html
      create  public/422.html
      create  public/500.html
      create  public/apple-touch-icon-precomposed.png
      create  public/apple-touch-icon.png
      create  public/favicon.ico
      create  public/robots.txt
      create  tmp
      create  tmp/.keep
      create  tmp/pids
      create  tmp/pids/.keep
      create  tmp/cache
      create  tmp/cache/assets
      create  vendor
      create  vendor/.keep
      create  test/fixtures/files
      create  test/fixtures/files/.keep
      create  test/controllers
      create  test/controllers/.keep
      create  test/mailers
      create  test/mailers/.keep
      create  test/models
      create  test/models/.keep
      create  test/helpers
      create  test/helpers/.keep
      create  test/integration
      create  test/integration/.keep
      create  test/channels/application_cable/connection_test.rb
      create  test/test_helper.rb
      create  test/system
      create  test/system/.keep
      create  test/application_system_test_case.rb
      create  storage
      create  storage/.keep
      create  tmp/storage
      create  tmp/storage/.keep
      remove  config/initializers/cors.rb
      remove  config/initializers/new_framework_defaults_7_1.rb
         run  bundle install
Fetching gem metadata from https://rubygems.org/...........
Resolving dependencies...
Fetching rake 13.1.0
Installing rake 13.1.0
Fetching mutex_m 0.2.0
Fetching base64 0.2.0
Fetching bigdecimal 3.1.4
Fetching stringio 3.1.0
Fetching date 3.3.4
Fetching public_suffix 5.0.4
Fetching bindex 0.8.1
Fetching msgpack 1.7.2
Installing mutex_m 0.2.0
Fetching rubyzip 2.3.2
Installing base64 0.2.0
Installing stringio 3.1.0 with native extensions
Installing bindex 0.8.1 with native extensions
Fetching websocket 1.2.10
Installing bigdecimal 3.1.4 with native extensions
Installing msgpack 1.7.2 with native extensions
Installing date 3.3.4 with native extensions
Installing public_suffix 5.0.4
Installing rubyzip 2.3.2
Installing websocket 1.2.10
Fetching sqlite3 1.6.9 (x86_64-darwin)
Fetching drb 2.2.0
Fetching nokogiri 1.15.5 (x86_64-darwin)
Installing drb 2.2.0
Fetching net-protocol 0.2.2
Fetching sprockets 4.2.1
Installing net-protocol 0.2.2
Fetching puma 6.4.0
Installing sprockets 4.2.1
Fetching reline 0.4.1
Fetching addressable 2.8.5
Installing puma 6.4.0 with native extensions
Installing reline 0.4.1
Fetching selenium-webdriver 4.15.0
Installing addressable 2.8.5
Fetching net-smtp 0.4.0
Installing net-smtp 0.4.0
Installing sqlite3 1.6.9 (x86_64-darwin)
Installing selenium-webdriver 4.15.0
Installing nokogiri 1.15.5 (x86_64-darwin)
Fetching xpath 3.2.0
Installing xpath 3.2.0
Fetching capybara 3.39.2
Installing capybara 3.39.2
Fetching bootsnap 1.17.0
Fetching net-imap 0.4.7
Installing bootsnap 1.17.0 with native extensions
Installing net-imap 0.4.7
Fetching jbuilder 2.11.5
Fetching sprockets-rails 3.4.2
Fetching importmap-rails 1.2.3
Fetching stimulus-rails 1.3.0
Fetching turbo-rails 1.5.0
Fetching web-console 4.2.1
Installing sprockets-rails 3.4.2
Installing jbuilder 2.11.5
Installing web-console 4.2.1
Installing stimulus-rails 1.3.0
Installing importmap-rails 1.2.3
Installing turbo-rails 1.5.0
Bundle complete! 14 Gemfile dependencies, 82 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.
         run  bundle lock --add-platform=x86_64-linux
Fetching gem metadata from https://rubygems.org/.........
Resolving dependencies...
Writing lockfile to /Users/faraaz/oss/reseed/Gemfile.lock
         run  bundle binstubs bundler
       rails  importmap:install
       apply  /Users/faraaz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/importmap-rails-1.2.3/lib/install/install.rb
  Add Importmap include tags in application layout
      insert    app/views/layouts/application.html.erb
  Create application.js module as entrypoint
      create    app/javascript/application.js
  Use vendor/javascript for downloaded pins
      create    vendor/javascript
      create    vendor/javascript/.keep
  Ensure JavaScript files are in the Sprocket manifest
      append    app/assets/config/manifest.js
  Configure importmap paths in config/importmap.rb
      create    config/importmap.rb
  Copying binstub
      create    bin/importmap
         run  bundle install
Bundle complete! 14 Gemfile dependencies, 82 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.
         run  bundle lock --add-platform=x86_64-linux
Writing lockfile to /Users/faraaz/oss/reseed/Gemfile.lock
       rails  turbo:install stimulus:install
       apply  /Users/faraaz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/turbo-rails-1.5.0/lib/install/turbo_with_importmap.rb
  Import Turbo
      append    app/javascript/application.js
  Pin Turbo
      append    config/importmap.rb
         run  bundle install
Bundle complete! 14 Gemfile dependencies, 82 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.
         run  bundle lock --add-platform=x86_64-linux
Writing lockfile to /Users/faraaz/oss/reseed/Gemfile.lock
Run turbo:install:redis to switch on Redis and use it in development for turbo streams
       apply  /Users/faraaz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/stimulus-rails-1.3.0/lib/install/stimulus_with_importmap.rb
  Create controllers directory
      create    app/javascript/controllers
      create    app/javascript/controllers/index.js
      create    app/javascript/controllers/application.js
      create    app/javascript/controllers/hello_controller.js
  Import Stimulus controllers
      append    app/javascript/application.js
  Pin Stimulus
  Appending: pin ""@hotwired/stimulus"", to: ""stimulus.min.js"", preload: true""
      append    config/importmap.rb
  Appending: pin ""@hotwired/stimulus-loading"", to: ""stimulus-loading.js"", preload: true
      append    config/importmap.rb
  Pin all controllers
  Appending: pin_all_from ""app/javascript/controllers"", under: ""controllers""
      append    config/importmap.rb
         run  bundle install
Bundle complete! 14 Gemfile dependencies, 82 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.
         run  bundle lock --add-platform=x86_64-linux
Writing lockfile to /Users/faraaz/oss/reseed/Gemfile.lock
```

### System configuration
**Rails version**: Rails 7.1.2

**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-darwin22]
"
50236,Fix `Time.now`/`DateTime.now`/`Date.today` to return results in a system timezone after `#travel_to`,907th,activesupport,2023-12-01T19:39:28Z,2023-12-07T05:12:35Z,2023-12-02T09:24:55Z,"### Motivation / Background

Fix incorrect `Date.today` result value that caused [a bug with the `Faker::Time.backward` method](https://github.com/faker-ruby/faker/issues/2861) in the Faker gem.

### Detail

There is a bug in the current implementation of `#travel_to`: it remembers a timezone of its argument, and all stubbed methods (`Time.now`, `DateTime.now`, `Date.today`) start returning results in that remembered timezone. However, the expected behaviour is to return results in a system timezone.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50235,Fixed getting context for nuxt 3.7+ in conjunction with vite,bananchill,actioncable,2023-12-01T18:39:04Z,2023-12-07T01:00:19Z,,"1) This request needs to be combined, as it corrects the error when losing context for node when working with the next 3.7+ version in conjunction with vite. The context for self is undefined, in the code I change it to global, which exists in node
2) I added a section of code that determines whether there is a context for global, otherwise self

### Checklist


* [+] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs. 

- Yes 
###
* [ +] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
- https://github.com/rails/rails/issues/50232
* [+ ] Tests are added or updated if you fix a bug or add a feature.
###
* [ +] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."
50234,"Rails 7.1 attached image raises error because ""Cannot get a signed_id for a new record"" in image_tag",gregorbg,"third party issue, activestorage",2023-12-01T17:59:47Z,2023-12-02T17:34:31Z,,"### Steps to reproduce
Say I have a model with an attached image, like such:

```ruby
class Company < ApplicationRecord
  has_one_attached :logo
  
  validates :name, presence: true
end
```

...and there is also a controller to update it using the route defined by `resources :companies` like such:

```ruby
def update
  @company = Company.find(params[:id])
  company_params = params.require(:company).permit(:name, :logo)

  if @company.update(company_params)
    flash[:success] = ""Successfully updated Company!""
    redirect_to edit_company_path(@company)
  else
    render :edit
  end
end
```

The `edit` form is an HTML form that looks as follows:

```ruby
<%= simple_form_for @company, url: edit_company_path(@company) do |f| %>
  <%= f.input :name %>
  <%= f.input :logo %>
  <% if @company.logo.attached? %>
    <%= image_tag @company.logo.variant(resize: ""200x200"") %>
  <% end %>
<% end %>
```

Now when I pass in an update payload that generates an invalid state (as per my `Company` model's validations) but has a **valid, existing, readable** logo file, the following error occurs:

```
ActionView::Template::Error: Cannot get a signed_id for a new record

Failure/Error: <%= image_tag @company.logo.variant(resize: ""200x200"") %>

     ActionView::Template::Error:
       Cannot get a signed_id for a new record
```

This is because the `@company.update(...)` statement in the controller writes the attributes, but the actual raw _saving_ to the database fails because of validations.

The edit form then tries to display the new, updated **but not persisted** logo in the frontend, which raises the error about `signed_id`.

### Expected behavior
The `edit` form should render, with the form showing errors on the `name` field according to the validators of the `company` model. Uploading a correct, readable logo should not cause the form to throw an error when rendering.

### Actual behavior
The error above is being thrown.

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50233,Lock json gem,eileencodes,,2023-12-01T17:57:55Z,2023-12-02T08:52:41Z,2023-12-02T08:52:29Z,"Locks the json gem to 2.6.3 until there is a new
release that includes https://github.com/flori/json/pull/554
"
50232,Loss of context for self when using node.js,bananchill,,2023-12-01T17:43:01Z,2023-12-07T01:00:50Z,,"Good evening, I ran into a problem when working with rails in conjunction with nuxt + vite, that when rails does not have a context when working with node, self = undefined, it is better to use global for node, please consider and make edits.
var adapters = {
    logger: global.console,
    WebSocket: global.WebSocket
  };

https://github.com/rails/rails/blob/d6197c5efc84161bb507b73b9d7f5bb064c33cf2/actioncable/app/assets/javascripts/actioncable.js#L7"
50231,"Revert ""Add config for validating migration timestamps""",adrianna-chang-shopify,"activerecord, railties, docs",2023-12-01T17:16:15Z,2023-12-07T18:19:53Z,2023-12-01T17:46:02Z,"Reverts rails/rails#50205

Those changes break copied engine migrations, see https://github.com/rails/rails/pull/50205#issuecomment-1835416318.

We'll revisit adding validation to migration timestamps, but there are a couple of possible ways forward, so we'll revert for now, and add a regression test to cover the case of copied migrations.

Some possible options that @eileencodes and I discussed:
1) Validate only the year, month and date for a migration timestamp
2) Change the way migration copying works: rather than treating timestamps as integers and adding ""1"", add one second to the timestamp, so that we maintain valid timestamps on copied migrations. If we chose to do this, we should disable the config for existing applications, as we don't want existing applications with copied engine migrations to start encountering this error.
"
50230,ActiveJob::Serializers::TimeWithZoneSerializer does not preserve the timezone,jakubkosinski,activejob,2023-12-01T16:04:04Z,2023-12-02T15:05:47Z,2023-12-02T15:05:47Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
require 'active_job'
require 'active_job/arguments'
require 'active_support/all'

Time.zone = 'Europe/London' #=> ""Europe/London""
time = Time.zone.parse('2023-12-01T14:30:00Z') #=> Fri, 01 Dec 2023 14:30:00.000000000 GMT +00:00
serialized_time = ActiveJob::Serializers::TimeWithZoneSerializer.serialize(time) #=> {""_aj_serialized""=>""ActiveJob::Serializers::TimeWithZoneSerializer"", ""value""=>""2023-12-01T14:30:00.000000000+00:00""}
gmt_deserialized_time = ActiveJob::Serializers::TimeWithZoneSerializer.deserialize(serialized_time) #=> Fri, 01 Dec 2023 14:30:00.000000000 GMT +00:00
Time.zone = 'America/Los_Angeles' #=> ""America/Los_Angeles""
pst_deserialized_time = ActiveJob::Serializers::TimeWithZoneSerializer.deserialize(serialized_time) #=> Fri, 01 Dec 2023 06:30:00.000000000 PST -08:00
Time.zone = nil #=> nil
utc_deserialized_time = ActiveJob::Serializers::TimeWithZoneSerializer.deserialize(serialized_time) #=> 2023-12-01 14:30:00 +0000
```

### Expected behavior
<!-- Tell us what should happen -->
Since `ActiveSupport::TimeWithZone` stores information about the time zone I expect that this information should be preserved when serializing time. Changing the `Time.zone` should not affect objects serialized with a different time zone.

### Actual behavior
<!-- Tell us what happens instead -->
Deserialization of a serialized `TimeWithZone` uses always the current `Time.zone` and not the one that was used to create a `TimeWithZone` object instance.

### System configuration
**Rails version**:
6.1.7.1 but the behaviour is the same in 7.x

**Ruby version**:
3.1.3p185"
50229,"Cookie name [""session_id from 7.0.8 to 7.1.0",leoplct,,2023-12-01T15:22:04Z,2023-12-01T19:20:54Z,2023-12-01T19:20:54Z,"### Steps to reproduce
I have just upgraded from Rails 7.0.8 to 7.1.0 and the cookie name is named _[""session_id_ instead of _session_id_.
If I rollback to 7.0.8 it return as _session_id_. 
After that I cannot sign up / log in with Devise due to Invalid authenticity token.

### Expected behavior
The cookie name should be session_id 

### Actual behavior
[""session_id

### System configuration
**Rails version**: **7.2.0.alpha** and **7.1.0**
**Ruby version**: 3.1.2

![Screenshot 2023-12-01 at 16 17 33](https://github.com/rails/rails/assets/1176145/47d82254-6474-45b8-8aab-bb5f95da4e41)

I don't know where to look to debug. 
"
50228,Adjusted an example to align with the documentation section on reversing a previous migration.,cedriccarrard,docs,2023-12-01T10:37:48Z,2023-12-15T15:40:15Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

The purpose of this pull request is to correct the following issue #50189, there is an error in the following section [this documentation section](https://guides.rubyonrails.org/active_record_migrations.html#reverting-previous-migrations).

There is confusion between the steps 

```
1. Reverse the order of create_table and reversible.
2. Replace create_table with drop_table.
3. Finally, replace up with down and vice-versa.
```

and the example below

I suggest modifying the example.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50227,FormData Handling Nested Arrays Incorrectly in Rails 7.1.2,makoto-atarashi,"actionpack, more-information-needed",2023-12-01T10:12:04Z,2023-12-12T00:01:05Z,,"### Issue Overview
After upgrading Rails from version 7.0.6 to 7.1.2, FormData that is including nested array sent from frontend is being received differently on backend, causing processing troubles.

### Steps to Reproduce

1. Use the following frontend JavaScript code, which was working correctly with Rails 7.0.6, to send data to backend.

```javascript
let formData = new FormData();

formData.append(""items[][foo]"", ""FOO"");
formData.append(""items[][bar]"", ""BAR"");
formData.append(""items[][baz]"", ""BAZ"");
formData.append(""items[][list][][a]"", ""A"");
formData.append(""items[][list][][b]"", ""B"");

fetch(""/api_url"", {
  method: ""POST"",
  body: formData
})
  .then(response => response.json())
  .then(data => {
    console.log(data);
  })
  .catch(error => {
    console.error(error);
  });
```
2. Upgrade to Rails 7.1.2 and use the same frontend code to send data to the backend again.

### Expected Behavior
Expecting the data to be received on Rails 7.1.2 as it was on Rails 7.0.6.

### Actual Behavior
Data received on Rails 7.0.6 was in the following format:

```txt
Parameters: {""items""=>[{""foo""=>""FOO"", ""bar""=>""BAR"", ""baz""=>""BAZ"", ""list""=>[{""a""=>""A"", ""b""=>""B""}]}], ""host""=>""example.com""}
```

However, on Rails 7.1.2, it has changed as follows, and params[:items][:list] is not received as an array as expected:

```txt
Parameters: {""items""=>[{""foo""=>""FOO"", ""bar""=>""BAR"", ""baz""=>""BAZ"", ""list[]a""=>""A"", ""list[]b""=>""B""}], ""host""=>""example.com""}
```

### Environment

Rails Version: 7.0.6 -> 7.1.2
Ruby version: ruby 3.2.2-p53
Front End: JavaScript, Fetch API

### Specific Issue Points

On Rails 7.0.6, params[:items][:list] was correctly received as an array, but on Rails 7.1.2, params[:items][:list] is not received as an array as expected."
50226,Encrypted columns in DB are not backwards compatible between 7.0 and 7.1,Linuus,"activerecord, encryption",2023-12-01T10:07:36Z,2023-12-13T13:46:30Z,,"I'm not sure if this is expected or a bug, but I can't find it in the changelogs. There were changes related to encryption though so maybe it's not a bug.

The issue is that we upgrade from Rails 7.0.8 to 7.1.1 and had to roll back due to some unrelated issues. Now, after the roll back we couldn't decrypt fields that were encrypted while on 7.1.1 anymore (using AR `encrypts(:foo)`). I tested with 7.1.2 and had the same issue.

### Steps to reproduce

1. Generate a new rails app on 7.0.8
2. Add a model with an encrypted field
3. On 7.0.8, create a record in the DB
4. Change gemfile to have rails 7.1.2 and bundle
5. Create another record in the DB. At this point it's possible to decrypt the old record
6. Add the setting `config.active_record.encryption.hash_digest_class = OpenSSL::Digest::SHA256` to application.rb
7. Create a third record in the DB
8. Go back to Rails 7.0.8
9. Read the records in the DB. First and second records are fine, but the third will fail with
```
/Users/.../.asdf/installs/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/activerecord-7.0.8/lib/active_record/encryption/encryptor.rb:58:in `rescue in decrypt': ActiveRecord::Encryption::Errors::Decryption (ActiveRecord::Encryption::Errors::Decryption)
/Users/.../.asdf/installs/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/activerecord-7.0.8/lib/active_record/encryption/cipher/aes256_gcm.rb:80:in `rescue in decrypt': ActiveRecord::Encryption::Errors::Decryption (ActiveRecord::Encryption::Errors::Decryption)
/Users/.../.asdf/installs/ruby/3.1.2/lib/ruby/gems/3.1.0/gems/activerecord-7.0.8/lib/active_record/encryption/cipher/aes256_gcm.rb:76:in `final': OpenSSL::Cipher::CipherError
```

I created a repository to easier reproduce this: https://github.com/Linuus/rails-encryption/

1. Clone the repo
2. `git checkout 8a4a807faed975545b13fb710f7e119501daa261`
3. `bundle`
4. `rails c`
5. `Bar.create!(secret: ""rails708"")`
6. `git checkout e213132e7c85747560b395f0f34f6628b3b202cc` (switch to 7.1.2)
7. `bundle`
8. `rails c`
9. `Bar.create!(secret: ""rails712"")`
10. `git checkout 05f77873a0fb71de34e1fc15c8c786b543ead2b6` (sets `config.active_record.encryption.hash_digest_class = OpenSSL::Digest::SHA256`)
11. `rails c`
12. `Bar.create!(secret: ""rails712-2"")`
13. `git checkout 8a4a807faed975545b13fb710f7e119501daa261` (Roll back to 7.0.8)
14. `rails c`
15. `Bar.first.secret #=> rails708`
16. `Bar.second.secret #=> rails712`
17. `Bar.third.secret` crashes with the above decryption error

In 7.0.8 we have this:

```
Loading development environment (Rails 7.0.8)
irb(main):001> Rails.configuration.active_support.key_generator_hash_digest_class
=> OpenSSL::Digest::SHA256
```

In 7.1.2 we haven't set the SHA1 setting (makes no difference as far as I can see. 7.1.2 can still decrypt data from 7.0.8)

```
Loading development environment (Rails 7.1.2)
irb(main):001> Rails.configuration.active_record.encryption.support_sha1_for_non_deterministic_encryption
=> nil
```

So as far as I understand the docs, the encryption shouldn't change?

### Expected behavior

The records should all be decryptable

### Actual behavior

The record created in Rails 7.1.2 and with `config.active_record.encryption.hash_digest_class = OpenSSL::Digest::SHA256` fail to decrypt.

### System configuration
**Rails version**: 7.0.8 -> 7.1.2 (or 7.1.1.)

**Ruby version**:  ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]"
50225,"Incorrectly defined user_class on Ruby 3.0.6, Rails 6.1",legacy370,,2023-12-01T04:38:59Z,2023-12-01T05:33:27Z,2023-12-01T05:33:27Z,"### Steps to reproduce
I have been using Sorcery for years, successfully.  It's running in production, under Ruby 2.6 and Rails 6.0.

However, as I'm attempting to upgrade to Ruby 3.0.6 and Rails 6.1, I'm experiencing a problem.

The last line of my ""config/initializers/sorcery.rb"" file is
config.user_class = ""Suser""

While trying to log into the application under Ruby 3.0.6 and Rails 6.1, I immediately get the error message
ArgumentError in SessionsController#create
You have incorrectly defined user_class or have forgotten to define it in intitializer file (config.user_class = 'User').

I haven't changed the initializer at all.

<!-- Paste your executable test case created from one of the scripts found [here]


# Your reproduction script goes here
Access http://localhost:3000/
Enter email and password
```

### Expected behavior
Successful login

### Actual behavior
ArgumentError in SessionsController#create
You have incorrectly defined user_class or have forgotten to define it in intitializer file (config.user_class = 'User').

### System configuration
**Rails version**:  6.1.7.6

**Ruby version**: 3.0.6
"
50224,Question on ActiveRecord connection pool and schema cache dump,aravindhbw,,2023-11-30T21:35:13Z,2023-12-02T09:48:10Z,2023-12-02T09:48:10Z,"We are running a Rails unicorn web application which forks 3 processes during startup time which will then be used to process requests. We noticed a small increase in latency during startup time because Rails lazily runs the `SHOW FULL FIELDS` command for each table as and when it is queried to collect metadata. To avoid this we turned on schema cache dump using the `rake db:schema:cache:dump` command so that the metadata is collected eagerly. However since unicorn recommends re-establishing connections after forking, the cache dump is lost.

Rails version `5.2.8.18`

```
after_fork do |server, worker|
  # connection re-established so cache dump which was copied from the main process is lost
  ActiveRecord::Base.establish_connection if defined?(ActiveRecord::Base)
end
```

1. Why do we need to re-establish connections after forking?
2. If that is required, how can we reload the schema cache dump after the connection is re-established?

One alternative we tried was to take a copy of the parent schema cache before forking and set it to the child process after forking

```
parent_schema_cache = nil
before_fork do |server, worker|
  ActiveRecord::Base.connection_handler.clear_all_connections! if defined?(ActiveRecord::Base)
  parent_schema_cache = ActiveRecord::Base.connection.schema_cache if defined?(ActiveRecord::Base)
end

after_fork do |server, worker|
  ActiveRecord::Base.establish_connection if defined?(ActiveRecord::Base)
  ActiveRecord::Base.connection_pool.schema_cache = parent_schema_cache.dup
end
```

3. This doesn't look clean. Is there a better way to load the schema dump after forking?
4. How does integrating makara affect this setup where we run a primary db and few replica dbs? Does active record maintain separate connection pools for each db? If so, how does the schema cache get set for each connection pool?

Thanks in advance!"
50223,Add runner script option to disable Executor wrap,bensheldon,railties,2023-11-30T20:27:50Z,2023-12-09T08:35:37Z,2023-12-09T08:35:37Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Rails runner scripts were wrapped with a Rails Executor in https://github.com/rails/rails/pull/44999

This is great! Except when using the Runner to execute long-running/looping/daemon-like scripts. In that case, it would be better to allow for intentionally adding Executor wraps around individual units of work in that script.

### Detail

This Pull Request allows passing `--skip-executor` to the Rails script runner to conditionally _not_ add an Executor wrap to the script.

~**Help wanted:** I don't particularly like the naming. I wanted to make it affirmative, but it's also true by default which means passing `false` option is necessary. The other option is to make it a negative boolean .e.g `--skip-executor`. What do you think?~

**Another option:** Instead of removing the Executor, maybe the runner should be wrapped with a reentrant Executor `#perform` that was introduced in #43550, instead.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50222,(feat) Give `numericality` validation `Clusivity` considerations,spimonid,activemodel,2023-11-30T18:10:29Z,2023-12-06T22:34:27Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

In short, the `numericality` validator doesn't support method names, and we would like it to within our codebase.

This PR gives the `numericality` validator, in order of importance,

1) the ability to accept a range returned from a method call
2) more versatility, it can now accept an array or an array returned from a method call

### Detail

- `includes Clusivity` in `numericality.rb`
- broadens initial type check within `check_validity!`
- in `validate_each`, deals with cases of symbols
- in `validate_each`, uses `includes?` to deal with ranges, arrays, and ranges/arrays returned from method calls

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] This is my first Rails PR and I'm scared / please be nice 
"
50221,Serializers Not Working with coder: keyword argument,ddoherty03,,2023-11-30T18:02:38Z,2023-11-30T22:21:12Z,2023-11-30T18:20:24Z,"### Steps to reproduce
Here are three test cases in a gist:

https://gist.github.com/ddoherty03/5da3353436aea3704303976965ca8bd4

### Expected behavior
As I read the docs, using a positional argument with just the name of the class to serve as the serializer is deprecated and I am supposed instead to use the coder: keyword argument with the class name.  In the example, I save a Charge as a string and want to have it cast into a Charge object when read from the DB.  I have used the `serialize :charge, coder: Charge` line to do so.

### Actual behavior
When I do this however, the attribute remains a String and is not de-serialized into the expected class.  The other examples show (1) that it works using a positional class argument `serialize :charge, Charge` and does not work even adding the type keyword, `serialize :charge, coder: Charge, type: Charge`.

### System configuration
**Rails version**:
7.0.8 (and later?)

**Ruby version**:
3.2.2"
50220,Cannot define rails tasks that take command line arguments since Rails 7.1 Rails::Command::UnrecognizedCommandError,mildred,railties,2023-11-30T15:27:15Z,2023-12-03T17:29:37Z,,"https://github.com/rails/rails/blob/6b93fff8af32ef5e91f4ec3cfffb081d0553faf0/railties/lib/rails/commands/rake/rake_command.rb#L21-L24

In rails 7.0 it was possible to define a rake task invoked using rails that would take command-line arguments. You just had to read the arguments in `ARGV` and to call `exit` in order to prevent rails from looking up the arguments as if they were rake tasks.

In rails 7.1, before even starting the tasks, rails is looking up all command-line arguments to ensure they are valid rake tasks, and arguments are not, and it produces a Rails::Command::UnrecognizedCommandError

Example task that worked in rails 7.0 and no longer works:

```rb
namespace :import do
  task from_v5: :environment do
    if ARGV.length < 1
      warn 'Usage: rails import:from_v5 FILENAME'
      exit 1
    end
    puts ""importing #{ARGV[0]}...""
    exit 0
  end
end
```"
50219,`ActiveRecord::Relation` object could not store to cache store when use MessagePack serializer,r-plus,"activerecord, activesupport",2023-11-30T10:01:40Z,2023-12-01T06:16:55Z,2023-12-01T06:16:54Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# Use MessagePack serializer in config
config.cache_store = :redis_cache_store, { url: '...', serializer: :message_pack }

# write cache code
Rails.cache.fetch('key') { Article.where(id: 1..10) }
```

### Expected behavior
When use `marshal_6_1`, `marshal_7_0` and `marshal_7_1` serializers can store `ActiveRecord::Relation` object to cache.
We expected `message_pack` serializer can do this too.

### Actual behavior
raise the error.
Is this behavior is expected behavior?
Do you have a plan to fallback to marshal serializer like a message serializer?

```
ActiveSupport::MessagePack::UnserializableObjectError at /articles/556656
Unsupported type Article::ActiveRecord_AssociationRelation for object #<ActiveRecord::AssociationRelation []>
```

### System configuration
**Rails version**:
7.1.1
**Ruby version**:
3.2.2"
50218,[Fix #50193] Allow custom Thor commands to load from `lib/commands` by ensuring `lib` is added to the $LOAD_PATH before looking up commands,bensheldon,railties,2023-11-30T00:33:58Z,2023-11-30T00:38:07Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fixes #50193

This Pull Request makes Thor commands included in `lib/commands/*_command.rb` work. They previously did not work because the commands were loaded before the Application was required, which meant that `lib` had not yet been added to the $LOAD_PATH (requiring the Application adds `lib` to the $LOAD_PATH, explained in #48596).

Because requiring the application could slightly slow down invoking commands, this change will first try to find the command _without_ requiring the Application, and if not found, will then require the Application and try the lookup again

cc @matthewd 

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

I think Thor commands, especially the options syntax, is a big improvement over Rake, which is why I would like this to work, and it largely seems like it _should_ work with this very small tweak.

Things to possible defer:

Documentation: Guides can be updated to explain Thor commands alongside Rake tasks. Maybe a default `lib/commands/.keep` too?

Also...

While working on this, I did notice that it is _very easy_ for command files to collide and are thus load-order dependent. This is because the files are required with simply `lib/commands/*_command.rb`:

https://github.com/rails/rails/blob/736353dda303a96a1e8972cf7dc2de0b2b493e58/railties/lib/rails/command/behavior.rb#L40-L44

https://github.com/rails/rails/blob/736353dda303a96a1e8972cf7dc2de0b2b493e58/railties/lib/rails/command/behavior.rb#L56-L60

So if 2 gems, or the application and another gem each have matching filenames, only one of them will be loaded.  I want to call this out because `lib` is added at the front of $LOAD_PATH, which means it will always have the opportunity to clobber someone else.

These changes were introduced here: https://github.com/rails/rails/commit/115abd52b6bf6801dce7c3fbcb0e29d4213a5bb2

So maybe that `require` should be changed to a `load`, or the required paths should be changed to absolute file paths. 



### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50217,Document the `preprocessed` variant option [ci skip],fastjames,docs,2023-11-29T23:43:07Z,2023-12-04T15:49:06Z,2023-12-04T15:49:06Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This change provides visibility for the recently added `:preprocessed` option when creating named variants of an ActiveStorage attachment. 

### Detail

This Pull Request adds a block to the ActiveStorage Overview guide that describes the use of the option.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50216,Changing a record's STI type using nested attributes breaks when classes have different validations,hoffmanilya,activerecord,2023-11-29T23:28:55Z,2023-11-30T17:37:57Z,,"When updating STI record's types using nested attributes the instance of the record doesn't become the new class automatically and therefore validations are run against the old class.

### Steps to reproduce

```ruby
require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'rails', '7'
  gem 'sqlite3'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :people, force: true

  create_table :animals, force: true do |t|
    t.text :type
    t.text :fav_toy
    t.integer :person_id
  end
end

class Animal < ActiveRecord::Base
  belongs_to :person
end

class Cat < Animal
  validates :fav_toy, inclusion: { in: %w[catnip mouse] }
end

class Dog < Animal
  validates :fav_toy, inclusion: { in: %w[lamb duck] }
end

class Person < ActiveRecord::Base
  has_many :animals
  accepts_nested_attributes_for :animals
end

class BugTest < Minitest::Test
  def test_updating_type
    # Create a `Person` with a `Cat`.
    person = Person.create!(
      animals_attributes: [{ type: 'Cat', fav_toy: 'catnip' }]
    )

    persons_cat = person.animals.first

    # Now try to change the `Cat` to be a `Dog`. This fails
    # because `Cat` validations are still being run.
    person.update!(
      animals_attributes: [{ id: persons_cat.id, type: 'Dog', fav_toy: 'duck' }]
    )

    assert Animal.find(persons_cat.id).is_a?(Dog)
  end

  # What works is to use `assign_attributes`, go through the
  # association records and replace them with the correct
  # instances and then save the parent.
  def test_updating_type_and_changing_instances
    person = Person.create!(
      animals_attributes: [{ type: 'Cat', fav_toy: 'catnip' }]
    )

    persons_cat = person.animals.first

    person.assign_attributes(
      animals_attributes: [{ id: persons_cat.id, type: 'Dog', fav_toy: 'duck' }]
    )

    association = person.association(:animals)

    association.target.each.with_index do |animal, i|
      association.target[i] = animal.becomes!(animal.type.constantize) if animal.type_changed?
    end

    person.save!

    assert Animal.find(persons_cat.id).is_a?(Dog)
  end
end
```

### Expected behavior

The `Cat` becomes a `Dog` and the update succeeds.

### Actual behavior

The update fails with a validation error: `ActiveRecord::RecordInvalid: Validation failed: Animals fav toy is not included in the list`

### System configuration
**Rails version**: 7.0.0

**Ruby version**: 2.7.5
"
50215,Automatically disable joins for through associations across different connection pools ,octokatherine,activerecord,2023-11-29T22:07:20Z,2023-12-01T19:38:34Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request changes the default behavior for through associations to disable joins when the connection pools differ, in which case the association would be broken if the user didn't specify `disable_joins: true`. 

This is not a breaking change, as the only effect it could have would be to fix broken associations.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50214,Ensure all GH Actions set to read-only contents,zzak,,2023-11-29T21:09:36Z,2023-11-30T19:39:35Z,2023-11-30T16:41:50Z,"Since a GH token is required for the action-discord notify action to fetch the commit message, otherwise it would make unauthenticated requests leading to rate limiting. This shouldn't impact the result of a workflow, but it's annoying.

The permissions for this token can vary based on the repository's settings. So to ensure we don't accidentally get a token with write access or something, we should use restrictive permissions per workflow, like the other workflows in this project.

See: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
"
50213,Support for non-polymorphic joins on polymorphic belongs_to,lavoiesl,activerecord,2023-11-29T18:07:50Z,2023-12-02T09:47:16Z,,"### Steps to reproduce
I have something like this in my code:
```rb
class Comment < ApplicationRecord
  belongs_to :commentable, polymorphic: true
  validates :commentable_type, inclusion: { in: %w(Post Page) }
end

class Post < ApplicationRecord
  has_many :comments, as: :commentable
end

class Page < ApplicationRecord
  has_many :comments, as: :commentable 
end
```

To count the number of comments on a Page, understand that I can use:
```rb
Page
  .joins(:comments)
  .group(""pages.id"")
  .count
```
But this is a simple example. In my code base, I have a longer chain of relationship and inverting the direction doesn't seem to be possible.


In cases where I start from from the opposite direction and I know that a target is a page, I'd like to do something like this:

```rb
Comment
  .joins(:page)
  .group(""pages.id"")
  .count
```

This _appears_ to be working:
```rb
class Comment < ApplicationRecord
  belongs_to :commentable, polymorphic: true
  validates :commentable_type, inclusion: { in: %w(Post Page) }
  belongs_to :page, class_name: ""Page"", foreign_key: :commentable_id
  belongs_to :post, class_name: ""Post"", foreign_key: :commentable_id
end
```
But it wouldn't check the commentable_type, it would join on any id.

---

I came up with this idea:
```rb
module ActiveRecord
  module Associations
    module ClassMethods
      def belongs_to_polymorphic(name, target:, class_name:, **options)
        reflection = reflections[target.to_s]
        raise ""Association #{target} does not exist"" unless reflection
        raise ""Association #{target} is not polymorphic"" unless reflection.polymorphic?
        raise ""Association #{target} is not a belongs_to"" unless reflection.belongs_to?

        foreign_key = reflection.foreign_key
        foreign_type = reflection.foreign_type
        table_name = self.table_name

        scope = ->() { where({ table_name => { foreign_type => class_name } }) }
        belongs_to(name, scope, class_name: class_name.to_s, foreign_key: foreign_key, **options)

        # Override this method because the default implementation won't check the foreign_type
        # and the `where` condition on the `belongs_to` would not have the table_name available.
        define_method(name) do
          return unless class_name == read_attribute(foreign_type)

          send(target)
        end
      end
    end
  end
end
```

It can be used like:
```rb
class Comment < ApplicationRecord
  belongs_to :commentable, polymorphic: true
  validates :commentable_type, inclusion: { in: %w(Post Page) }
  belongs_to_polymorphic :post, target: :commentable, class_name: ""Post""
  belongs_to_polymorphic :page, target: :commentable, class_name: ""Page""
end

Comment.joins(:page) # Works
Comment.first.page # Fallback on the overridden method.
```

Of course, this is quite hacky, but I wanted to illustrate the point

---

Alternatively, it could be nice to allow polymorphic joins if a `where` clause explicitely specifies the type:

```rb
Comment.joins(:commentable).where(commentable_type: ""Page"")
=> ActiveRecord::EagerLoadPolymorphicError: Cannot eagerly load the polymorphic association :commentable
```


---

https://github.com/rails/rails/issues/45429 seems a bit related, but not exactly the same.


### System configuration
**Rails version**:
6.1.7.6
"
50212,Migrating from Rails 7.0.8 to Rails 7.1.2 without any config breaks encryption,zaratan,"activerecord, encryption",2023-11-29T16:43:20Z,2023-12-01T10:17:44Z,,"### Steps to reproduce

#### Setting up the App

```sh
rails _7.0.8_ new test_rails_enc
cd test_rails_enc
bin/rails db:encryption:init
rails credentials:edit # Copying the keys
rails g model user email:string name:string
```

```ruby
class User < ApplicationRecord
  encrypts :email, deterministic: true
  encrypts :name
end
```

```ruby
User.create(name: ""Zaratan"", email: ""zaratan@hey.com"")
```

#### Migrating to Rails 7.1
In the Gemfile
```ruby
gem ""rails"", ""~> 7.1.2""
```

```sh
rails app:update # Answering Yes to every question
rails db:migrate
```

### Testing
Email:
```ruby
User.pluck(:email).first
```
```
  User Pluck (0.3ms)  SELECT ""users"".""email"" FROM ""users""
/Users/zaratan/.rvm/gems/ruby-3.2.2/gems/activerecord-7.1.2/lib/active_record/encryption/encryptor.rb:58:in `rescue in decrypt': ActiveRecord::Encryption::Errors::Decryption (ActiveRecord::Encryption::Errors::Decryption)
/Users/zaratan/.rvm/gems/ruby-3.2.2/gems/activerecord-7.1.2/lib/active_record/encryption/cipher/aes256_gcm.rb:79:in `rescue in decrypt': ActiveRecord::Encryption::Errors::Decryption (ActiveRecord::Encryption::Errors::Decryption)
/Users/zaratan/.rvm/gems/ruby-3.2.2/gems/activerecord-7.1.2/lib/active_record/encryption/cipher/aes256_gcm.rb:75:in `final': OpenSSL::Cipher::CipherError
```
Name:
```ruby
User.pluck(:name).first
```
```
  User Pluck (0.1ms)  SELECT ""users"".""name"" FROM ""users""
=> ""igor""
```

#### If Adding : 
```
config.active_record.encryption.support_sha1_for_non_deterministic_encryption = true
```

=> Same behaviour

#### If Changing to Rails 7.1 defaults
```
    config.load_defaults 7.1
```

Reading the name will trigger a cipher error and the email will be read correctly

#### If setting config.active_record.encryption.hash_digest_class to `OpenSSL::Digest::SHA1`

```
config.active_record.encryption.hash_digest_class = OpenSSL::Digest::SHA1
```

=> Email: Cipher Error, Name: Ok

#### If setting config.active_record.encryption.hash_digest_class to `OpenSSL::Digest::SHA256`

=> Email: Ok, Name: Cipher Error

### Expected behavior
If a user didn't configure anything the upgrade path should exist or be documented in a way. I think I tried every configuration option documented and couldn't make it work.

Production is still on 7.0.8 so I didn't get any terrible damage but what would be an upgrade path for me (and for others)

### Actual behavior
`OpenSSL::Cipher::CipherError`

### System configuration
**Rails version**: 7.0.8 => 7.1.2

**Ruby version**: 3.2.2
"
50211,Optimize many delegated methods on ActiveSupport::Duration,casperisfine,activesupport,2023-11-29T16:34:47Z,2023-12-08T14:41:37Z,2023-12-08T14:41:37Z,"Fix: https://github.com/rails/rails/pull/50136

Using delegate saves on the `method_missing + public_send` combo.

I chose to delegate to all the methods I saw called in Rails own test suite, but there is likely a handful more candidates for explicit delegation.

But also this rely on a new (private) parameter in `Module#delegate` to provide the expected delegated type and use that to define delegators with the extact required signature. This saves on array and hash allocations caused by splatting.

In some ways it's a continuation of https://github.com/rails/rails/pull/46875

Note that I didn't make the new `as:` parameter public, as I fear it's a bit too brittle to be used. For the same reason I'm considering reverting the optimized path behavior on `to: :class` and requiring to explictly pass `as: self` for that optimized path. (FYI: @amatsuda)

Co-Authored-By: @Morriar"
50210,Update form_helpers.md typo [ci skip],jbk2,docs,2023-11-29T13:17:05Z,2023-12-03T00:36:50Z,2023-11-29T14:25:57Z,Correcting the book[title] value ('My book') on line 265 to reflect the correct value ('Some book') as illustrated on line 248.
50209,ActionCable Redis adapter ssl_params like `cert` and `key` are not recognised,tsrivishnu,actioncable,2023-11-29T11:52:20Z,2023-11-29T12:04:12Z,2023-11-29T12:04:12Z,"### Steps to reproduce
* Configure ActionCable Redis adapter with `ssl: true` and `ssl_params` that contain paths to `cert` and `key` files.
   ```yaml
    # config/cable.yml
    development:
      adapter: redis
      url: ""redis://localhost:6379/0""
      ssl: true
      ssl_params:
        ca_file: config/credentials/redis/dev/ca.crt
        cert: config/credentials/redis/dev/client.crt
        key: config/credentials/redis/dev/client.key
      channel_prefix: app_cable_development

   ```
* Open rails console and try to broadcast a message
   ```ruby
    # In rails console
    ActionCable.server.broadcast(""hi"", ""hello world"")
* Fails with error exception
    ```
    => 2023-11-29 11:48:08.317258 D [7:6040 broadcasting.rb:43] ActionCable [ActionCable] Broadcasting to hi: ""hello world""
    /app/.bundle/ruby/3.1.0/gems/redis-client-0.12.1/lib/redis_client/ruby_connection.rb:59:in `initialize': wrong argument type String (expected OpenSSL/X509) (TypeError)
    ```

### Expected behavior
The message is broadcasts without any error,

### Actual behavior
Fails with error:
```
/app/.bundle/ruby/3.1.0/gems/redis-client-0.12.1/lib/redis_client/ruby_connection.rb:59:in `initialize': wrong argument type String (expected OpenSSL/X509) (TypeError)
```

### System configuration
**Rails version**: 7.0.4

**Ruby version**: 3.10
"
50208,Add #to_s and pretty print for `ActiveSupport::InheritableOptions`,kmcphillips,activesupport,2023-11-28T22:49:40Z,2023-11-29T01:23:30Z,2023-11-28T23:04:29Z,"A small followup to #50151, adds `#to_s` and `#pretty_print` to make `ActiveSupport::InheritableOptions` match the output for `Hash`.

### Before

```
> object = ActiveSupport::InheritableOptions.new(a: ""aaa"")
=> {}
> object.to_s
=> ""{}""
> object.b = ""bbb""
=> ""bbb""
> object.to_s
=> ""{:b=>\""bbb\""}""
```

### After
```
> object = ActiveSupport::InheritableOptions.new(a: ""aaa"")
=> {:a=>""aaa""}
> object.to_s
=> ""{:a=>\""aaa\""}""
> object.b = ""bbb""
=> ""bbb""
> object.to_s
=> ""{:a=>\""aaa\"", :b=>\""bbb\""}""
```

cc @byroot "
50207,Autoloading and Zeitwerk unexpected behaivor with namespaces,FelipeRiveraC,,2023-11-28T21:34:23Z,2023-11-28T22:26:06Z,2023-11-28T22:26:06Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# --- app/models/namespace_a.rb
module NamespaceA
  def self.table_name_prefix
    'namespace_a_'
  end
end

# --- app/models/namespace_a/namespace_b.rb
module NamespaceA
  module NamespaceB
    def self.table_name_prefix
      'namespace_a_namespace_b_'
    end
  end
end

# --- app/models/namespace_a/namespace_b/class_a.rb

class NamespaceA::NamespaceB::ClassA < ApplicationRecord
end

```

### Expected behavior
The expected behaivor is that Zeitwerk load ```ClassA``` as ```NamespaceA::NamespaceB::ClassA```. 

### Actual behavior
(this on rails server, on rails console it works just fine)
For some reason, when Zeitwerk loads ```app/models/namespace_a/namespace_b.rb``` it stops, and dosen´t load ```app/models/namespace_a/namespace_b/class_a.rb```.

If you delete the file ```app/models/namespace_a/namespace_b.rb```, then Zeitwerk will load the ```ClassA``` as ```NamespaceA::NamespaceB::ClassA```.

This error is raised
```
*** NameError Exception: uninitialized constant NamespaceA::NamespaceB

NamespaceA::NamespaceB::ClassA
          ^^^^^^^^^^^^
```
nil


This issue was already discussed [here](https://github.com/rails/rails/issues/38726).

@fxn 

### System configuration
**Rails version**: 7.0.6

**Ruby version**: 3.1
"
50206,Document delegated methods in `ActiveModel::Errors` [ci skip],orhantoy,activemodel,2023-11-28T21:24:45Z,2023-11-29T16:12:42Z,2023-11-29T16:12:38Z,"### Motivation / Background

Fixes #50187

### Detail

Some delegated methods in `ActiveModel::Errors` weren't documented. And `each` seems to have been documented without the proper RDoc syntax which would explain why it's not showing up in the docs.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50205,Add config for validating migration timestamps,adrianna-chang-shopify,"activerecord, railties, docs",2023-11-28T21:00:32Z,2023-12-01T22:02:23Z,2023-11-30T21:20:49Z,"### Motivation / Background

At Shopify, we've managed to get into a situation where several of our migration filenames have timestamps that are invalid: either an unexpected number of digits, a date that doesn't exist, etc. This hasn't been an issue historically, because we have a lot of custom code around migrations, but we're trying to move towards vanilla Rails migrations. I noticed `bin/rails db:rollback` is broken for us, because it uses [`.max`](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/migration.rb#L1428-L1430) to determine the latest migration version to rollback: for us, this is a migration from several years ago that has already been rolled into our structured SQL file, but whose timestamp is 15 digits long (and thus is always considered the max).

Given that Rails makes assumptions about the format of the timestamp prefix on migration files, it would be beneficial to introduce a config option that enforces this. We'd make it opt-in, and only apply it if `active_record.config.timestamped_migrations` is set. This PR proposes such a config.

### Detail

This PR introduces a `config.active_record.validate_migration_timestamps` config. When set, it validates that the timestamp prefix for a migration is in the form YYYYMMDDHHMMSS, with the goal of preventing migration timestamps from being modified by hand. It is turned off by default. Migrations with invalid timestamps will see a `InvalidMigrationTimestampError` raised.

### Additional information

We'd discussed validating that the timestamp was not in the future, but there seem to be other tests that would contradict this, e.g.:
https://github.com/rails/rails/blob/4467b26a3e9b96756525ae7acc2b885b3ceb2194/activerecord/test/cases/migration_test.rb#L1688-L1704

For now, I've opted to check that 1) the length and format matches, and 2) the date is a real date.

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50204,Add support for index storage parameters for PostgreSQL,ankane,activerecord,2023-11-28T20:33:55Z,2023-11-30T22:12:37Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request adds support for [index storage parameters](https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-STORAGE-PARAMETERS) for PostgreSQL.

### Detail

This Pull Request adds a `:with` option to `add_index`:

```ruby
add_index :users, :email, with: { fillfactor: 50 }
```

which generates:

```sql
CREATE INDEX ""index_users_on_email"" ON ""users"" (""email"") WITH (fillfactor=50);
```

### Additional information

- This feature was added in [PostgreSQL 8.2](https://www.postgresql.org/docs/8.2/sql-createindex.html).
- [SQL Server](https://learn.microsoft.com/en-us/sql/t-sql/statements/create-index-transact-sql?view=sql-server-ver16) also supports the `WITH` syntax.

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50203,[Proposal] Deprecate and replace `ActiveSupport::OrderedOptions` and `ActiveSupport::InheritableOptions`,kmcphillips,activesupport,2023-11-28T19:29:00Z,2023-12-13T16:08:15Z,2023-12-13T16:08:15Z,"## Problem

The [`ActiveSupport::OrderedOptions` and `ActiveSupport::InheritableOptions`](https://github.com/rails/rails/blob/ed2bc92b82ddc111150cdf48bb646fd97b3baacb/activesupport/lib/active_support/ordered_options.rb) classes are used throughout rails to provide the `*.config.*` options through the framework railties, as well as some more specific nested configuration options. It is the basis for [`ActiveSupport::Configurable`](https://github.com/rails/rails/blob/ed2bc92b82ddc111150cdf48bb646fd97b3baacb/activesupport/lib/active_support/configurable.rb#L14). They are part of the public API in Active Support.

They are a specialization of `Hash`, and their purpose is ostensibly to provide convenience read/writers as methods, and a few other small features. These classes were [introduced](https://github.com/thedarkone/rails/commit/9f146ea0ac904252b16be1c4017604aed0c383f7) ~15-18 years ago and are now **incorrectly named** and contain bugs as well as **unpredictable and unspecified behaviour** that makes them, in my opinion, dangerous to use reliably. 

I have made some improvements in #50151, but there are many many remaining problems. Such as:


### Incorrectly named and unnecessary hierarchy

The reason it is called `OrderedOptions` is that prior to Ruby 1.9 hash insertion did not promise a stable ordering, which this class provided.

The `InheritableOptions` subclass allows a parent hash to provide defaults, but there is no good reason for this to be a specialized class and can just be initialization options.


### They do not behave hash-like in many cases

Despite being a subclass of `Hash`, the implementation does not behave hash-like in many cases. The reason is that it uses hash default block initialization syntax to carry around the parent hash in the closure, rather than calling `update(parent)` or `merge(parent)` on initialize:
```ruby
  class InheritableOptions < OrderedOptions
    def initialize(parent = nil)
      super() { |h, k| parent[k] }
    end
```

So that parent is passed around by reference. Lookups first check `self` then fall back to `parent`. Any key that is updated is only changed `self` and overshadows the parent. So most hash operations only check _overrides_, but retrievals will fall through to the parent. It also means that changes to the parent hash are reflected in lookups, but any overrides remain local. It's very confusing, and again **unspecified and unpredictable behaviour**. (A detailed example of behaviour listed at the bottom).

This means as Rails calls [`inheritable_copy`](https://github.com/rails/rails/blob/ed2bc92b82ddc111150cdf48bb646fd97b3baacb/activesupport/lib/active_support/ordered_options.rb#L105-L107) on several different levels:
https://github.com/rails/rails/blob/ed2bc92b82ddc111150cdf48bb646fd97b3baacb/actionview/lib/action_view/helpers/controller_helper.rb#L23
https://github.com/rails/rails/blob/ed2bc92b82ddc111150cdf48bb646fd97b3baacb/activesupport/lib/active_support/configurable.rb#L32
https://github.com/rails/rails/blob/ed2bc92b82ddc111150cdf48bb646fd97b3baacb/activesupport/lib/active_support/configurable.rb#L156

The actual value of what is in each copy of the config object depends on what level it was modified, at what time, and if there were any overrides or not.


### Rails depends on this broken entangled behaviour

As linked above, the configs are declared in the root module as `ActiveSupport::Configurable`, but then are copied down. For example `ActionController::Base` is configurable, but that config is copied down to the controller instance, then to the view context. Rails has tests that depend on the pass by reference linking of those copies:
https://github.com/rails/rails/blob/ed2bc92b82ddc111150cdf48bb646fd97b3baacb/actionpack/test/controller/helper_test.rb#L261-L265

But nowhere is this behaviour tested in the unit tests for `InheritableOptions`, nor is it documented. And crucially **this behaviour stops working if it is overridden at any level**. Meaning that if you modify a key in some initialization step before the values are copied down, they stop being linked.

In a few places they are called ""proxy"" which is probably what is desired behaviour here.


## Proposed solution

Fixing all this behaviour in place would mean hard to diagnose internal behaviour breakage. There is no good reason to have `Ordered` in the name as all hashes are ordered. There is no reason to have `InheritableOptions` be a subclass, when it can just be an initializer options.

So I propose:
* Building a new `ActiveSupport::Options` class which fixes the above behaviour and reimplements as a hash, and documents all behaviour.
* Deprecate public use of `ActiveSupport::OrderedOptions` and `ActiveSupport::InheritableOptions` internally and publicly.
* Refactor rails internally to only use `ActiveSupport::Options`. The changes to `ActiveSupport::Configurable` may mean building a proxy wrapper around the config, and that's ok.

Building the new class is trivial, and I have it in a commit https://github.com/kmcphillips/rails/commit/fec85f7141fb6055b9406b2bdb5a7282b48e698a including tests. The new class is just over a hundred lines, including documentation and a `SafeOptions` specialization discussed [here](https://github.com/rails/rails/pull/50140#issuecomment-1823698711) which I think is a great feature to add.

Anyone using these classes outside of Rails just as a feature of Active Support would in most cases just need to update a class name and maybe a `new()` signature.

Internal use should be manageable, because we define the behaviour we want, and would do it over a release cycle.


## Appendix

Here is an example of how unpredictable the behaviour is. This mirrors how Rails copies the config down three levels in the base controller/controller class/view context example:

```
# Given a hash of default values
> defaults = { a: ""a from defaults"", b: ""b from defaults"" }
=> {:a=>""a from defaults"", :b=>""b from defaults""}

# Inheritable options pulls the options from that default
> action_controller_base = ActiveSupport::InheritableOptions.new(defaults)
=> {}

# Assign an override value and a new key value
> action_controller_base.b = ""b from action_controller_base""
> action_controller_base.c = ""c from action_controller_base""

# This works pretty much as expected
> action_controller_base.a
=> ""a from defaults""
> action_controller_base.b = ""b from action_controller_base""
=> ""b from action_controller_base""
> action_controller_base.c = ""c from action_controller_base""
=> ""c from action_controller_base""

# The defaults hash is unchanged
> defaults
=> {:a=>""a from defaults"", :b=>""b from defaults""}

# But if you update the values in the defaults hash
> defaults[:a] = ""a with updated default""
=> ""a with updated default""
> defaults[:b] = ""b with updated default""
=> ""b with updated default""

# Original values are entangled with the copy, updated values are not
irb(main):061> action_controller_base.a
=> ""a with updated default""
irb(main):062> action_controller_base.b
=> ""b from action_controller_base""

# Then we can further make a copy
> controller_instance = action_controller_base.inheritable_copy
> controller_instance.c = ""c from controller_instance""
> controller_instance.d = ""d from controller_instance""

# The values are entangled differently with the two parents
> controller_instance.a
=> ""a with updated default""
> controller_instance.b
=> ""b from action_controller_base""
> controller_instance.c
=> ""c from controller_instance""
> controller_instance.d
=> ""d from controller_instance""

# We make one copy further
> view_context = controller_instance.inheritable_copy
> view_context.d = ""d from view_context""
> view_context.e = ""e from view_context""

# The values are entangled with the three parents
> view_context.a
=> ""a with updated default""
> view_context.b
=> ""b from action_controller_base""
> view_context.c
=> ""c from controller_instance""
> view_context.d
=> ""d from view_context""
> view_context.e
=> ""e from view_context""

# Sometimes changing a parent is reflected all the way down in this copy, sometimes it is not, depending on at what level it was previously modified and at what time
> action_controller_base.a = ""a override action_controller_base""
=> ""a override action_controller_base""
> action_controller_base.b = ""b override action_controller_base""
=> ""b override action_controller_base""
> action_controller_base.c = ""c override action_controller_base""
=> ""c override action_controller_base""
> view_context.a
=> ""a override action_controller_base""
> view_context.b
=> ""b override action_controller_base""
> view_context.c
=> ""c from controller_instance""
> view_context.d
=> ""d from view_context""
```"
50202,Translate Trilogy syscall errors as conn failed,composerinteralia,activerecord,2023-11-28T17:54:07Z,2023-11-28T20:04:35Z,,"At GitHub we get a fair number of Trilogy `ETIMEDOUT` errors (for known reasons that we might be able to improve somewhat, but I doubt we'll make them go away entirely). These are very much retryable network errors, so it'd be handy if these `ETIMEDOUT` errors were translated to `ConnectionFailed` instead of `StatementInvalid`, making them `retryable_connection_error`s.

https://github.com/rails/rails/blob/ed2bc92b82ddc111150cdf48bb646fd97b3baacb/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L1077-L1078

We're already translating `ECONNRESET` (via matching on the error message) and `EPIPE` to `ConnectionFailed`. Rather than adding another case, this commit treats all of the Trilogy `SystemCallError` subclasses as `ConnectionFailed`.

Unfortunately `Trilogy::TimeoutError` is a subclass of `ETIMEDOUT`, so we have to move the `AdapterTimeout` check into the case statement so we can break out to the `super` call in the case of `Trilogy::TimeoutError` that does have an error code (1205, i.e. lock timeout). Cleaning up the various Trilogy timeout errors is a project for another day.

We should be able to simplify this exception translation further once we bump the required Trilogy version to 2.6, but I figured I'd start out with this minimal change that works on Trilogy 2.4 as well.

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50201,Transaction commits before query execution within transaction block.,apmiller108,activerecord,2023-11-28T17:00:24Z,2023-12-03T00:12:14Z,,"### Steps to reproduce

Maybe this is totally expected, but this behavior was found to be surprising.

#### Senario 1
The transaction defined with the following code will commit after the `SET` statement, and before the `Message.all` query.
```ruby
ActiveRecord::Base.transaction do
  ActiveRecord::Base.connection.execute('SET LOCAL statement_timeout = \'5s\';')
  Message.all
end
```

```
TRANSACTION (0.7ms)  BEGIN
(3.4ms)  SET LOCAL statement_timeout = '5s';
TRANSACTION (0.5ms)  COMMIT
Message Load (0.4ms)  SELECT ""messages"".* FROM ""messages"" /* loading for pp */ LIMIT $1  [[""LIMIT"", 11]]
```

#### Senario 2
However, everything appears to run within the transaction when using `execute` for both queries.
```ruby
ActiveRecord::Base.transaction do
  ActiveRecord::Base.connection.execute('SET LOCAL statement_timeout = \'5s\';')
  ActiveRecord::Base.connection.execute(Message.all.to_sql)
end
```

```
TRANSACTION (0.4ms)  BEGIN
(2.4ms)  SET LOCAL statement_timeout = '5s';
(1.2ms)  SELECT ""messages"".* FROM ""messages""
TRANSACTION (0.9ms)  COMMIT
```

### Expected behavior
I expected that in both of the above scenarios, everything in the transaction block would be run within the DB transaction statement, like this:

```
TRANSACTION (0.4ms)  BEGIN
(2.4ms)  SET LOCAL statement_timeout = '5s';
(1.2ms)  SELECT ""messages"".* FROM ""messages""
TRANSACTION (0.9ms)  COMMIT
```

### Actual behavior

But instead, in scenario 1, only the first `execute` statement appears to run within the DB transaction. Maybe that is actually expected (albeit surprising to me). In any event it would be interesting to know why that happens.

```
TRANSACTION (0.7ms)  BEGIN
(3.4ms)  SET LOCAL statement_timeout = '5s';
TRANSACTION (0.5ms)  COMMIT
Message Load (0.4ms)  SELECT ""messages"".* FROM ""messages"" /* loading for pp */ LIMIT $1  [[""LIMIT"", 11]]
```

### System configuration
**Rails version**: 7.1

**Ruby version**: 3.2
"
50200,Fix `read_multi` with local cache and namespace,sbfaulkner,activesupport,2023-11-28T15:07:58Z,2023-11-29T15:58:03Z,2023-11-29T15:58:03Z,"### Motivation / Background

This Pull Request has been created because `ActiveSupport::Cache::Strategy::LocalCache` was not properly handling `read_multi` when a `namespace` was used. This was because `read_multi_entries` was using _key_ values, instead of _name_ values as per the implementations of that interface in the cache stores.

### Detail

This Pull Request changes `ActiveSupport::Cache::Strategy::LocalCache#read_multi` to correctly accept name values instead of key values.

### Additional information

Tests have been added for local_store usage with namespaces.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
"
50199,Improve action view helpers guide [ci skip],apoorv1316,docs,2023-11-28T12:48:06Z,2023-11-29T15:09:40Z,,"Background

- Fixed grammatical errors
- Correct the typo in the path- `app/assets/javascripts` => `app/assets/javascript`"
50198,Fix duplicate `DEFERRABLE` directive added for foreign keys in PostgreSQL and SQLite,fatkodima,activerecord,2023-11-28T12:47:26Z,2023-12-16T13:11:22Z,,"When adding a foreign key with a `:deferrable` option, a duplicate `""DEFERRABLE""` directive is generated. 
Something like:
```sql
ALTER TABLE ""authors"" ADD CONSTRAINT ""fk_rails_94423a17a3""
FOREIGN KEY (""author_address_id"")
  REFERENCES ""author_addresses"" (""id"")
 DEFERRABLE INITIALLY IMMEDIATE DEFERRABLE INITIALLY IMMEDIATE
```

This PR fixes that."
50197,ActiveSupport::Testing::Isolation: gracefully handle the subprocess dying,casperisfine,activesupport,2023-11-28T12:26:01Z,2023-11-28T13:52:09Z,2023-11-28T13:52:03Z,"Right now if the subprocess exit uncleanly, it straight out bring the parent down with it because it will fail to parse the (likely empty) Marshal payload:

```
<internal:marshal>:34:in `load': marshal data too short (ArgumentError)
	from 3.3.0+0/bundler/gems/rails-488a7ce18880/activesupport/lib/active_support/testing/isolation.rb:23:in `run'
	from 3.3.0+0/gems/minitest-5.20.0/lib/minitest.rb:1094:in `run_one_method'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:179:in `block in run'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:168:in `with_timestamps'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:178:in `run'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:229:in `block in run_from_queue'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/ci/queue/redis/worker.rb:55:in `poll'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:228:in `run_from_queue'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:213:in `__run'
	from 3.3.0+0/gems/minitest-5.20.0/lib/minitest.rb:162:in `run'
	from 3.3.0+0/gems/minitest-5.20.0/lib/minitest.rb:86:in `block in autorun'
 - XXXX::XXXXTest#test_xxxxx - /tmp/bundle/ruby/3.3.0+0/bundler/gems/rails-488a7ce18880/activesupport/lib/active_support/testing/isolation.rb:52:in `write': closed stream (IOError)
	from 3.3.0+0/bundler/gems/rails-488a7ce18880/activesupport/lib/active_support/testing/isolation.rb:52:in `puts'
	from 3.3.0+0/bundler/gems/rails-488a7ce18880/activesupport/lib/active_support/testing/isolation.rb:52:in `block (2 levels) in run_in_isolation'
	from 3.3.0+0/bundler/gems/rails-488a7ce18880/activesupport/lib/active_support/testing/isolation.rb:32:in `fork'
	from 3.3.0+0/bundler/gems/rails-488a7ce18880/activesupport/lib/active_support/testing/isolation.rb:32:in `block in run_in_isolation'
	from 3.3.0+0/bundler/gems/rails-488a7ce18880/activesupport/lib/active_support/testing/isolation.rb:28:in `pipe'
	from 3.3.0+0/bundler/gems/rails-488a7ce18880/activesupport/lib/active_support/testing/isolation.rb:28:in `run_in_isolation'
	from 3.3.0+0/bundler/gems/rails-488a7ce18880/activesupport/lib/active_support/testing/isolation.rb:19:in `run'
	from 3.3.0+0/gems/minitest-5.20.0/lib/minitest.rb:1094:in `run_one_method'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:179:in `block in run'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:168:in `with_timestamps'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:178:in `run'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:229:in `block in run_from_queue'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/ci/queue/redis/worker.rb:55:in `poll'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:228:in `run_from_queue'
	from 3.3.0+0/gems/ci-queue-0.38.0/lib/minitest/queue.rb:213:in `__run'
	from 3.3.0+0/gems/minitest-5.20.0/lib/minitest.rb:162:in `run'
	from 3.3.0+0/gems/minitest-5.20.0/lib/minitest.rb:86:in `block in autorun'
```

This breaks the Minitest contract that `run_one_method` shouldn't raise ever, and return a `Minitest::Result`.

By properly checking the sub process status, we can turn this crash into a test failure, allowing the original test process to go on.

NB: I didn't write a test because I have no clue how I could possibly test that."
50196,Ensure triggers are enabled when operation fails in PostgreSQL,fatkodima,activerecord,2023-11-28T10:16:42Z,2023-11-28T19:41:48Z,2023-11-28T19:37:48Z,"Fixes #50191.

Shortened repro script:
```
$ cd activerecord
$ ARCONN=postgresql bin/test test/cases/fixtures_test.rb test/cases/adapters/postgresql/deferred_constraints_test.rb -n ""/^(?:FixturesTest#(?:test_bulk_insert_with_a_multi_statement_query_raises_an_exception_when_any_insert_fails)|PostgresqlDeferredConstraintsTest#(?:test_defer_constraints_with_specific_fk))$/"" --seed 49401
```

When fixture test executes https://github.com/rails/rails/blob/139c5678aa5d9a4209ca06919abea7a9da449b36/activerecord/test/cases/fixtures_test.rb#L113-L129 `insert_fixtire_set` from line 126 uses `disable_referential_integrity`. An error is raised, but triggers are not enabled back in https://github.com/rails/rails/blob/139c5678aa5d9a4209ca06919abea7a9da449b36/activerecord/lib/active_record/connection_adapters/postgresql/referential_integrity.rb#L7-L39 and so for all the other tests from `PostgresqlDeferredConstraintsTest` they are not enabled and any deferrable foreign keys are just disabled.

cc @yahonda "
50195,Use constant for RequestId regex,tgwizard,actionpack,2023-11-28T09:55:47Z,2023-11-28T22:25:45Z,2023-11-28T19:35:47Z,"### Motivation / Background

Reading through some profiles and code for other reasons, I saw this RequestId middleware and that it did this gsub regex thing, and that we created a new regex object for every request. Seemed unnecessary.

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

Pull a regex into a class constant.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`

I did not check the following. Covered by existing tests, and I don't think this PR warrants a changelog entry.
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50194,6 0 stable,rassom,"actionpack, activerecord, activesupport",2023-11-28T09:17:25Z,2023-11-28T09:18:13Z,2023-11-28T09:18:13Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

This Pull Request changes [REPLACE ME]

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50193,`lib/commands/*_command.rb` should load custom Thor commands,bensheldon,railties,2023-11-28T04:30:59Z,2023-11-29T02:41:07Z,,"### Expected behavior

I should be able to create custom Rails Thor commands for my application in a way that is analogous to adding custom Rake tasks:

| Rake Task | Thor Command |
|-----------|--------------|
| `Rails.root/lib/tasks/custom.task` | `Rails.root/lib/commands/custom_command.rb` |  

For example, this should create the custom command `$ bin/rails custom:something` with all of the Thor niceties:

```ruby
# lib/commands/custom_command.rb
module Rails
  module Command
    class CustomCommand < Base
      desc ""something"", ""Perform a custom task""
      method_option :nice, type: :boolean, desc: ""Thor args are nice""
      def something
        puts ""Custom task performed!""
      end
    end
  end
end
```

This behavior already works for Rails Engines (aside: maybe the engine generator should automatically create a `lib/commands` directory in addition to `lib/tasks`). Here's where those lookups happen:

https://github.com/rails/rails/blob/139c5678aa5d9a4209ca06919abea7a9da449b36/railties/lib/rails/command.rb#L163-L169

These are loaded via the `$LOAD_PATH`, for a specific command:

https://github.com/rails/rails/blob/139c5678aa5d9a4209ca06919abea7a9da449b36/railties/lib/rails/command/behavior.rb#L36-L45

... or all commands for `help`:

https://github.com/rails/rails/blob/139c5678aa5d9a4209ca06919abea7a9da449b36/railties/lib/rails/command/behavior.rb#L55-L60

### Actual behavior

The `Rails.root/lib` directory does not get added to the $LOAD_PATH before those lookups happen, so they're never loaded and the commands are not found.

I think the simple solution here is to make sure that `Rails.root/lib` is added to the `$LOAD_PATH` when the `$ rails` command is initially run. That _normally_ happens when the Application is required and there's a custom command method to do that: [`require_application!`](https://github.com/rails/rails/blob/139c5678aa5d9a4209ca06919abea7a9da449b36/railties/lib/rails/command/actions.rb#L13-L16), but I imagine there could be reasons why that's done selectively. Hence opening an issue in case someone has better ideas.

The ""add lib to $LOAD_PATH"" behavior was most recently solidified in https://github.com/rails/rails/pull/48596

### System configuration

**Rails version**: 7.1.1

"
50192,Fix MemoryStore#write with unless_exist and namespace,sbfaulkner,activesupport,2023-11-28T03:40:32Z,2023-11-28T18:48:02Z,2023-11-28T18:25:30Z,"### Motivation / Background

This Pull Request has been created to fix `ActiveSupport::Cache::MemoryStore#write` support for `unless_exist: true` when using the `namespace` option as well.

### Detail

This Pull Request fixes `MemoryStore#write_entry` so that it passes a nil namespace to `exist?`. This is necessary because `exist?` since the _key_ has already been normalized to include the namespace.

### Additional information

In addition to adding a test for `write` with `unless_exist: true` using a `namespace` as well, the existing tests for `write` with `unless_exist: true` were moved to `MemoryStoreTest` (from `MemoryStorePruningTest`).

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
"
50191,`PostgresqlDeferredConstraintsTest` fails at Rails CI ,yahonda,"activerecord, attached PR, PostgreSQL, ci issues",2023-11-28T00:35:05Z,2023-11-28T19:37:49Z,2023-11-28T19:37:49Z,"Managed to reproduce CI failure at https://buildkite.com/rails/rails/builds/102278#018c120d-b274-4418-8eb2-a1e2eeeae9e7

### Steps to reproduce

```ruby
cd activerecord
ARCONN=postgresql bin/test test/cases/fixtures_test.rb test/cases/adapters/postgresql/deferred_constraints_test.rb -n ""/^(?:FixturesTest#(?:test_bulk_insert_with_a_multi_statement_query_raises_an_exception_when_any_insert_fails)|PostgresqlDeferredConstraintsTest#(?:test_defer_constraints|test_defer_constraints_only_defers_single_fk|test_defer_constraints_with_multiple_fks|test_defer_constraints_with_specific_fk))$/"" --seed 49401
```

### Expected behavior
It should pass.

### Actual behavior

These `PostgresqlDeferredConstraintsTest` tests fail.

```ruby
$ ARCONN=postgresql bin/test test/cases/fixtures_test.rb test/cases/adapters/postgresql/deferred_constraints_test.rb -n ""/^(?:FixturesTest#(?:test_bulk_insert_with_a_multi_statement_query_raises_an_exception_when_any_insert_fails)|PostgresqlDeferredConstraintsTest#(?:test_defer_constraints|test_defer_constraints_only_defers_single_fk|test_defer_constraints_with_multiple_fks|test_defer_constraints_with_specific_fk))$/"" ==seed 49401
Using postgresql
Run options: -n ""/^(?:FixturesTest#(?:test_bulk_insert_with_a_multi_statement_query_raises_an_exception_when_any_insert_fails)|PostgresqlDeferredConstraintsTest#(?:test_defer_constraints|test_defer_constraints_only_defers_single_fk|test_defer_constraints_with_multiple_fks|test_defer_constraints_with_specific_fk))$/"" --seed 24686

# Running:

.F

Failure:
PostgresqlDeferredConstraintsTest#test_defer_constraints_with_specific_fk [/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/adapters/postgresql/deferred_constraints_test.rb:24]:
ActiveRecord::InvalidForeignKey expected but nothing was raised.


bin/test test/cases/adapters/postgresql/deferred_constraints_test.rb:23

F

Failure:
PostgresqlDeferredConstraintsTest#test_defer_constraints_with_multiple_fks [/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/adapters/postgresql/deferred_constraints_test.rb:34]:
ActiveRecord::InvalidForeignKey expected but nothing was raised.


bin/test test/cases/adapters/postgresql/deferred_constraints_test.rb:33

F

Failure:
PostgresqlDeferredConstraintsTest#test_defer_constraints [/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/adapters/postgresql/deferred_constraints_test.rb:14]:
ActiveRecord::InvalidForeignKey expected but nothing was raised.


bin/test test/cases/adapters/postgresql/deferred_constraints_test.rb:13

F

Failure:
PostgresqlDeferredConstraintsTest#test_defer_constraints_only_defers_single_fk [/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/adapters/postgresql/deferred_constraints_test.rb:45]:
ActiveRecord::InvalidForeignKey expected but nothing was raised.


bin/test test/cases/adapters/postgresql/deferred_constraints_test.rb:43



Finished in 0.187469s, 26.6711 runs/s, 58.6764 assertions/s.
5 runs, 11 assertions, 4 failures, 0 errors, 0 skips
$
```

### System configuration
**Rails version**: main branch

**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]
"
50190,Retry new connection on checkout after reap,jhawthorn,activerecord,2023-11-27T23:14:43Z,2023-12-09T01:12:11Z,2023-12-09T01:10:09Z,"When we reap connections, we check if they are inactive (connected and responding to ping in most adapters) and if so we remove the connection instead of checking it back in.

However, in acquire_connection, we weren't checking after reaping whether we were allowed to build a new connection, only whether an existing one was in the available pool.

This still leaves a race condition where if the background reaper thread runs while a thread is polling and finds a free inactive connection, it could have the same issue and not wake the waiting thread. However we don't really expect the reaper to solve this (it only runs every 60 seconds by default, far too slow to solve for a blocked thread). I think this should be fixed, just separately (and would probably involve some more significant refactoring).


@joeldrapper showed me an example usage at RubyConf San Diego, which may have been caused (or at least worsened) by this bug. So 🤞 this helps.

Thanks to advice from @composerinteralia and @matthewd 

I think we should backport this to 7-1-stable."
50189,Inconsistency in Documentation: Mismatch Between `revert` Code Example and Subsequent Steps,Leo-U,docs,2023-11-27T22:55:28Z,2023-12-08T22:44:16Z,,"There is an apparent error in [this documentation section](https://guides.rubyonrails.org/active_record_migrations.html#reverting-previous-migrations).

The point of confusion is the last part of the section where it says `the same migration could also have been written without using revert but this would have involved a few more steps` and proceeds to list some steps.

To my understanding, the phrase `the same migration` refers to the code example immediately above that text -- that code example demonstrates the use of `revert` to selectively rollback part of a previous migration. The way it works is that you copy and paste part of the code from a previous migration and wrap it in that `revert` block. Then, rails automatically does the opposite of what is included there. So, that part I think I understand.

So now, back to the text at the end. The steps listed are:
```
    1. Reverse the order of create_table and reversible.
    2. Replace create_table with drop_table.
    3. Finally, replace up with down and vice-versa.
```
Here's what I don't get: that second code example in the docs section that demonstrates the use of revert to selectively revert part of a migration does not involve dropping any table. It would make sense to me if that copy-pasted code included a create_table statement, but it doesn't. So, to my understanding, the steps listed with that last statement don't make sense.

For more context, the `ExampleMigration` referred to in that second code example appears to refer to a migration mentioned further up in the docs in another section, [here](https://guides.rubyonrails.org/active_record_migrations.html#using-reversible).

**It has been pointed out to me that the code example did originally have a `create_table` call, as you can see [here](https://github.com/rails/rails/blob/c4c3a44685b4cfb1ffd4c27309ccfbf1bb53d4e5/guides/source/active_record_migrations.md?plain=1#L606C6-L606C6)**. Therefore, it looks to me like the cause of the confusion is that when the section was updated to remove the `create_table` call, it caused the last bit of the wording in that section to become nonsensical.

I am not any kind of Rails expert, so I wouldn't want to try and edit the documentation myself, so I have decided to open this issue here. Thank you!"
50188,Fix test infra depending on CI=true,skipkayhil,"actionpack, activesupport, railties, activejob, actionmailbox",2023-11-27T22:43:32Z,2023-11-30T18:13:14Z,2023-11-30T18:13:02Z,"The CI env var was recently [changed][1] to be specific for the application being tested instead of the framework tests. Because of this, these lines which should have been true before are now false.

[1]: https://github.com/rails/rails/commit/1f0262aa2b768b14de5e6ef29d0e547628f570ee

Note: I expect this to fail CI because `skip`s will raise now, I'll update with the fixes
"
50187,ActiveModel::Errors does not document that it has a `clear` method,kwerle,"activemodel, docs, good first issue",2023-11-27T21:09:06Z,2023-11-29T16:12:39Z,2023-11-29T16:12:39Z,"### Steps to reproduce
Check https://api.rubyonrails.org/classes/ActiveModel/Errors.html
No `clear` method.  Bummer.

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```
  my_object.errors.attribute_keys.each { |key| my_object.errors.delete(key) } # because errors has no clear method!  I checked the docs.
```

### Expected behavior
I should see docs for methods that exist - even if using them is unusual and part of some maybe dubious code?

### Actual behavior
Try `my_object.errors.clear`.  Oh.  It does have one.
"
50186,Fixes for use of namespace with ActiveSupport::Cache::Store,sbfaulkner,activesupport,2023-11-27T19:53:10Z,2023-11-28T03:44:52Z,2023-11-28T03:00:13Z,"### Motivation / Background

This PR was created because I ran into some unexpected inconsistency with how namespaces worked while using `ActiveSupport::Cache::MemoryStore` (compared to how it worked using `ActiveSupport::Cache::MemCacheStore`).

### Detail

This Pull Request adds some additional tests for use of namespace, and then fixes the broken behaviours.

* moved the `unless_exist` tests to `MemoryStoreTest` (from `MemoryStorePruningTest`)
* expanded the cache logging test behaviour to explicitly test non-namespaced and namespaced cases
* added explicit test cases for any tests that failed if I introduced namespaces for all stores
* fixed the expectations in the (previously introduced) filestore namespacing tests
* fixed the local cache strategy's implementation of `read_multi_entries` so that it accepted names instead of keys (as per the implementations in the cache stores)
* fixed `MemoryStore#write_entry` so that it directly checked existence of an entry instead of relying on `exist?` (which accepts a name rather than a key)

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Tests are added or updated if you fix a bug or add a feature.
"
50185,Use `--quiet` for `bundle install`,jonathanhefner,railties,2023-11-27T18:58:31Z,2023-11-27T20:30:26Z,2023-11-27T20:22:52Z,"When generating a new app, `bundle install` may be run multiple times due to various application templates.  This can create a lot of noise in the output log, particularly with Bundler <= 2.4.16, which displays the full list of gems each time `bundle install` is run.

To reduce noise, this commit adds the `--quiet` flag to `bundle install` commands.

__Before__

  ```console
  $ rails new my_cool_app --dev
        create
        create  Gemfile
           run  bundle install
  Resolving dependencies...
  Fetching gem metadata from https://rubygems.org/..........
  Bundle complete! 1 Gemfile dependency, 58 gems now installed.
  Use `bundle info [gemname]` to see where a bundled gem is installed.
           run  rails new my_cool_app --dev
         exist
        remove  Gemfile
        remove  Gemfile.lock
        create  README.md
  ...
           run  bundle install
  Fetching gem metadata from https://rubygems.org/..........
  Resolving dependencies...
  Bundle complete! 12 Gemfile dependencies, 78 gems now installed.
  Use `bundle info [gemname]` to see where a bundled gem is installed.
  ...
         rails  importmap:install
         apply  importmap-rails-1.2.3/lib/install/install.rb
  ...
           run  bundle install
  Bundle complete! 12 Gemfile dependencies, 78 gems now installed.
  Use `bundle info [gemname]` to see where a bundled gem is installed.

         rails  turbo:install stimulus:install
         apply  turbo-rails-1.5.0/lib/install/turbo_with_importmap.rb
  ...
           run  bundle install
  Bundle complete! 12 Gemfile dependencies, 78 gems now installed.
  Use `bundle info [gemname]` to see where a bundled gem is installed.
         apply  turbo-rails-1.5.0/lib/install/turbo_needs_redis.rb
    Enable redis in bundle
          gsub    Gemfile
           run    bundle install
  Fetching gem metadata from https://rubygems.org/..........
  Resolving dependencies...
  Bundle complete! 13 Gemfile dependencies, 80 gems now installed.
  Use `bundle info [gemname]` to see where a bundled gem is installed.
    Switch development cable to use redis
          gsub    config/cable.yml
           run  bundle install
  Bundle complete! 13 Gemfile dependencies, 80 gems now installed.
  Use `bundle info [gemname]` to see where a bundled gem is installed.
         apply  stimulus-rails-1.3.0/lib/install/stimulus_with_importmap.rb
  ...
           run  bundle install
  Bundle complete! 13 Gemfile dependencies, 80 gems now installed.
  Use `bundle info [gemname]` to see where a bundled gem is installed.
  ```

__After__

  ```console
  $ rails new my_cool_app --dev
        create
        create  Gemfile
           run  bundle install --quiet
           run  rails new my_cool_app --dev
         exist
        remove  Gemfile
        remove  Gemfile.lock
        create  README.md
  ...
           run  bundle install --quiet
  ...
         rails  importmap:install
         apply  importmap-rails-1.2.3/lib/install/install.rb
  ...
           run  bundle install --quiet
         rails  turbo:install stimulus:install
         apply  turbo-rails-1.5.0/lib/install/turbo_with_importmap.rb
  ...
           run  bundle install --quiet
         apply  turbo-rails-1.5.0/lib/install/turbo_needs_redis.rb
    Enable redis in bundle
          gsub    Gemfile
           run    bundle install --quiet
    Switch development cable to use redis
          gsub    config/cable.yml
           run  bundle install --quiet
         apply  stimulus-rails-1.3.0/lib/install/stimulus_with_importmap.rb
  ...
           run  bundle install --quiet
  ```

Note that `bundle install` still displays any errors when using the `--quiet` flag:

  ```console
  $ bundle install --quiet
  Could not find gem 'rails (= 9001.0)' in rubygems repository https://rubygems.org/ or installed locally.

  The source contains the following gems matching 'rails':
    * rails-0.8.0
    ...
    * rails-7.1.2 
  ```
"
50184,[ci skip] Fix small string typo in docs for ActiveRecord Dirty,knodi,activerecord,2023-11-27T18:55:06Z,2023-11-27T20:14:49Z,2023-11-27T19:18:37Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because of a tiny typo in the docs for Dirty

### Detail

This Pull Request changes the spelling in a sample string

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50183,Separate `bundle lock` from `bundle install`,jonathanhefner,railties,2023-11-27T17:53:26Z,2023-11-27T18:32:03Z,2023-11-27T18:32:03Z,"When running `bundle install` for the `bin/rails app:template` command, it is unnecessary and possibly even incorrect to also run `bundle lock --add-platform=...` (because it could add a platform that the user has intentionally removed).  Likewise, when [running `bundle install` to support a prerelease version of Rails](https://github.com/rails/rails/blob/1b67822fe40354abad06608311f55de5e3012489/railties/lib/rails/generators/app_base.rb#L669), it is unnecessary to run `bundle lock --add-platform=...`.

This commit extracts `bundle lock --add-platform=...` from `run_bundle` into its own `add_bundler_platforms` generator task.
"
50182,Add missing preposition in sentence [ci skip],apoorv1316,docs,2023-11-27T16:37:04Z,2023-11-27T21:27:00Z,2023-11-27T21:27:00Z,"Motivation

I have made a correction to the sentence by adding a preposition to improve its grammar and readability."
50181,Add markdown code highlight for bash script [skip ci],akhilgkrishnan,,2023-11-27T14:58:37Z,2023-12-09T06:16:53Z,,"### Detail

This Pull Request adds the markup code highlight for bash script in readme.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50180,Exists? consider raw query as id,Kingtamil2001,,2023-11-27T12:41:51Z,2023-11-27T14:45:26Z,2023-11-27T14:45:26Z,"### Steps to reproduce
User.exists?(""email = 'user_name@domain.com'"")


### Expected behavior
User Exists (342.9ms)  SELECT  1 AS one FROM ""users"" WHERE ""users"".""deleted_at"" IS NULL AND ""users"".""email"" = $1 LIMIT $2  [[""email"", ""user_name@domain.com""], [""LIMIT"", 1]]

### Actual behavior
it triggers the query like this

`User Exists (5.6ms)  SELECT  1 AS one FROM ""users"" WHERE ""users"".""deleted_at"" IS NULL AND ""users"".""id"" = $1 LIMIT $2  [[""id"", 0], [""LIMIT"", 1]]
`

### System configuration

Rails version: 5.0.3
Ruby version: 2.4.10
ActiveRecord version:: 5.0.3
"
50179,Improve documentation for highlight text helper [skip ci],akhilgkrishnan,actionview,2023-11-27T08:35:20Z,2023-12-04T15:40:06Z,2023-12-03T21:42:19Z,"Followup: #50178 

### Detail

This Pull Request updates the the `highlight`  text helper documentation. Separated the options and examples in different section.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc: @jonathanhefner 
"
50178,Improve documentation for truncate text helper [skip ci],akhilgkrishnan,actionview,2023-11-27T08:02:18Z,2023-11-30T17:34:40Z,2023-11-30T17:04:27Z,"Followup: #50153 

### Detail

This Pull Request updates the the `truncate` text helper documentation. Separated the options and examples in different section.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc: @jonathanhefner 
"
50177,Remove unused DeprecatedConstantAccessor include,skipkayhil,actionview,2023-11-26T17:38:47Z,2023-11-26T20:06:50Z,2023-11-26T17:52:35Z,"deprecate_constant removed in 23344d4b8cc36bb8ae3db209e0365b70469118d2
"
50176,ActiveStorage::VariantWithRecord should keep the variant key to store the file,brunto,activestorage,2023-11-26T17:12:50Z,2023-12-14T17:52:35Z,,"### Steps to reproduce
With `config.active_storage.track_variants = false`
```ruby
MyModel.last.photo.variant(resize_to_fit: [200, 100]).key
=> ""variants/xxxxxxx""
```

With `config.active_storage.track_variants = true`
```ruby
MyModel.last.photo.variant(resize_to_fit: [200, 100]).key
=> nil
```

### Expected behavior
With `config.active_storage.track_variants = true` the variant should use [the key method](https://github.com/rails/rails/blob/354d68e8a63b21e47a529105a508411bfe8be869/activestorage/app/models/active_storage/variant.rb#L73) in order to store the variants in the folder ""variants"".

### Actual behavior
It stored the variation_digest in the root ""folder"" instead of the ""variants"" folder.

### System configuration
**Rails version**: 7.1

**Ruby version**: 3.2.2
"
50175,[ActiveStorage] Fix JFIF issue with VIPS processor,chaadow,activestorage,2023-11-26T17:10:04Z,2023-12-09T17:04:26Z,,"Fixes #39921 cc @zzak 

<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->


### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This PR has been created to fix an old issue with VIPS not supporting JFIF. This makes creating variants for JFIF files impossible ( more details in the issue)

### Detail

At the ImageProcessing transformer level, we reformat the ""format"" variable that's passed to the `convert` call from jfif to jpg, only when the image processor is vips.

At first, I tried renaming the tempfile from jfif to jpg. But It had no effect.

Then I realized that the `{ format:  'jfif' }` was passed here: 
https://github.com/rails/rails/blob/9f18c0469777907206954bf2a8cc31141fd60734/activestorage/app/models/active_storage/blob/representable.rb#L36

I thought about maybe refactoring here but since this is a vips issue related to the ImageProcessingTransformer, I migrated the ""mapping"" logic directly there to have minimal impact on apps.


### Additional information
```ruby
Marcel::Magic.new('image/jpeg').extensions 
# => [""jpg"", ""jpeg"", ""jpe"", ""jif"", ""jfif"", ""jfi""]
```
I think we can try to make this more dynamic to handle all of `image/jpeg` extensions what do you think? @zzak 

If you think this is a good idea, i can refactor the tests and the implementation.

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50174,Fix `#reload` consistency issue,sarcilav,activerecord,2023-11-26T10:04:44Z,2023-12-12T14:10:12Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

If you have an object that has strict_loading set and then need to call `reload` multiple times, it would only work the first time, and after that, the application would start throwing a strict loading violation errors.

### Detail
To fix this, and keep `reload` working consistently between calls, we set `strict_loading`, if the original object has `strict_loading`, to the reloaded records to avoid the strict loading error. 

This wasn't a problem for the first call, because it is using the original associations cache, but it isn't the case for the other calls of `reload` as they would be using new copies of it, and when the new cache is used to build the list of ` strict_loaded_associations`, the `assoc.owner.strict_loading?` check will return `false`, as this owner is the previous `fresh_object` reference that doesn't have `strict_loading` set.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50173,Enabling the autosave option disables uniqueness validation,akicho8,"activerecord, With reproduction steps",2023-11-26T05:51:46Z,2023-11-28T15:23:46Z,2023-11-28T11:49:01Z,"Even if you have validation in place to prevent the creation of articles with the same content, the validation becomes invalid if the auto-save option is enabled.

### Steps to reproduce

```ruby
require ""active_record""

RUBY_VERSION                    # => ""3.2.2""
ActiveRecord::VERSION::STRING   # => ""7.1.2""

ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Migration.verbose = false
ActiveRecord::Schema.define do
  create_table :users do |t|
  end
  create_table :articles do |t|
    t.belongs_to :user
    t.string :name
  end
end

class User < ActiveRecord::Base
  has_many :articles, autosave: true
end

class Article < ActiveRecord::Base
  belongs_to :user
  validates :name, uniqueness: true
end

ActiveRecord::Base.logger = ActiveSupport::Logger.new(STDOUT)
ActiveSupport::LogSubscriber.colorize_logging = false

user = User.create! do |e|
  e.articles.build(name: ""a"")
  e.articles.build(name: ""a"")
end
user                            # => #<User id: 1>
user.articles.count             # => 2
# >>   TRANSACTION (0.0ms)  begin transaction
# >>   Article Exists? (0.1ms)  SELECT 1 AS one FROM ""articles"" WHERE ""articles"".""name"" = ? LIMIT ?  [[""name"", ""a""], [""LIMIT"", 1]]
# >>   Article Exists? (0.0ms)  SELECT 1 AS one FROM ""articles"" WHERE ""articles"".""name"" = ? LIMIT ?  [[""name"", ""a""], [""LIMIT"", 1]]
# >>   User Create (0.0ms)  INSERT INTO ""users"" DEFAULT VALUES RETURNING ""id""
# >>   Article Create (0.0ms)  INSERT INTO ""articles"" (""user_id"", ""name"") VALUES (?, ?) RETURNING ""id""  [[""user_id"", 1], [""name"", ""a""]]
# >>   Article Create (0.0ms)  INSERT INTO ""articles"" (""user_id"", ""name"") VALUES (?, ?) RETURNING ""id""  [[""user_id"", 1], [""name"", ""a""]]
# >>   TRANSACTION (0.0ms)  commit transaction
# >>   Article Count (0.0ms)  SELECT COUNT(*) FROM ""articles"" WHERE ""articles"".""user_id"" = ?  [[""user_id"", 1]]
```

### Expected behavior

Because you are trying to create an Article record with the same name, the uniqueness validation will fail and the creation of the User and Article records will fail.

### Actual behavior

A User record is created despite having a unique validation check, leading to an inconsistent state.

### System configuration

```
RUBY_VERSION                    # => ""3.2.2""
ActiveRecord::VERSION::STRING   # => ""7.1.2""
```

"
50172,Check zone presence in find_zone!,matiassalles99,activesupport,2023-11-26T05:37:46Z,2023-11-27T02:50:46Z,,"### Motivation / Background

I've been running into some issues in some projects when calling `in_time_zone` which behind the scenes calls `find_zone!`. The cause was always the zone being an empty string, which I would've expected the method to behave in the same way as when passing nil as a parameter.

This Pull Request has been created because in my opinion instead of calling `.presence` each time we call `in_time_zone` the `find_zone!` method should check for the presence of the argument, making sure that what we just passed is not ""equivalent"" to nil. 

### Detail

This Pull Request changes the `find_zone!` method to check the `zone` argument presence before actually trying to find the corresponding time zone. 

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. -> Not sure if this counts as a minor bug fix, open to add the CHANGELOG file changes too
"
50171,Add link to API documentation for ActionView helper method [skip ci],akhilgkrishnan,docs,2023-11-26T05:22:44Z,2023-12-03T04:53:17Z,,"As per the discussion in https://github.com/rails/rails/pull/49925#issuecomment-1819025503, noticed that its more appropriate to link the api documentation for the each of the action view helper methods to get more information about the methods.

### Detail

This Pull Request added the link to the api documentation for action view helpers.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc: @zzak, @vipulnsward 
"
50170,Don't add `default-mysql-client` when running `db:system:change` to Trilogy,y-yagi,railties,2023-11-26T04:15:44Z,2023-11-29T23:30:54Z,2023-11-27T14:52:28Z,"### Motivation / Background

This Pull Request has been created because `db:system:change --to trilogy` adds an unneeded package.

### Detail

This PR removed adding `default-mysql-client` to `Dockerfile` when running `db:system:change --to trilogy` because Trilogy doesn't depend on the libmariadb / libmysqlclient library. 
Ref: https://github.blog/2022-08-25-introducing-trilogy-a-new-database-adapter-for-ruby-on-rails/#should-you-use-trilogy

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50169,Fix generator tests on `arm64` platforms,jonathanhefner,railties,2023-11-25T22:43:34Z,2023-11-25T23:02:14Z,2023-11-25T23:02:14Z,"Follow-up to #47516 / #47492.

When running generator tests on `arm64` platforms, there is an extra `lock --add-platform` command in `@bundle_commands` which causes `assert_match %r""^exec rails ..."", @bundle_commands[2]` to fail.

However, `run_generator_using_prerelease` isn't really concerned with `lock --add-platform` commands; it is only concerned with the `install` and `exec rails` commands, and the contents of the `Gemfile` when those commands were executed.

Therefore, this commit removes `lock --add-platform` command-related assertions from `run_generator_using_prerelease` and puts them into a dedicated `test_generation_runs_bundle_lock_for_linux` test.  This approach makes `run_generator_using_prerelease` less brittle.  This change also fixes a technically incorrect assertion wherein the contents of the `Gemfile` during the `lock --add-platform` command was checked instead of the contents during the `exec rails` command.

Fixes #50168.
"
50168,Failing tests in shared_generator_tests,fredwillmore,railties,2023-11-25T16:50:03Z,2023-11-25T23:02:15Z,2023-11-25T23:02:15Z,"### Steps to reproduce
I get a number of test failures when I run
`bin/test test/generators/plugin_generator_test.rb`
The failures were all occurring here:
https://github.com/rails/rails/blob/main/railties/test/generators/shared_generator_tests.rb#L416-L417
With the aid of a debugger I went in and found that the test is asserting a match on `@bundle_commands[2]` but there is an actual match on `@bundle_commands[3]`. I made the change locally and now all the tests run clean.
Here is an example of the contents of `@bundle_commands` on line 416:
```
install
lock --add-platform=x86_64-linux
lock --add-platform=aarch64-linux
exec rails plugin new /Users/fredwillmore/OtherDocuments/ruby_projects/rails/railties/test/fixtures/tmp/bukkits/myproject --main
```
It looks like a second `lock` command with `--add-platform=aarch64-linux` is at issue here. This command is added here:
https://github.com/rails/rails/blob/main/railties/lib/rails/generators/app_base.rb#L690-L691
So this is a special case for arm64 macs. (I am using an M2 Pro, running macOS 13.6) The solution I used locally would not be suitable for use on any other platform.

### to reproduce
`bin/test test/generators/plugin_generator_test.rb`

### Expected behavior
tests pass

### Actual behavior
tests on matching bundle commands fail

### System configuration
rails 7.2.0.alpha
ruby 3.2.2
"
50167,[ActiveStorage] Take `ActiveRecord` affixes into account for `ActiveStorage` database models,chaadow,"railties, activestorage",2023-11-25T16:45:50Z,2023-12-21T18:29:52Z,2023-12-07T17:36:39Z,"EDIT: Partially Fixes #35811 ( Only AR suffix will work, prefix is a global engine issue that will be handled in a separate PR
Follow up to the closed PR #35828 

Follow up to https://github.com/rails/rails/pull/30095

<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because ActiveStorage db model table names are hardcoded. Making it impossible to be compatible with ActiveRecord prefix/suffix configuration.

What's also problematic is that AS generated migrations ( with `activestorage:install` task ) respects the prefix/suffix configuration, which makes it then impossible to use AS models in a Rails application.

### Detail

To fix this issue we remove the hard coded lines. But then we need to also override an internal method for specifying the prefix. the full explanation is here: https://github.com/rails/rails/pull/50167#discussion_r1405175059

### Additional information

Some tests were refactored to remove hard coded table name references, making ActiveStorage test suite compatible with ActiveRecord config.

https://github.com/rails/rails/blob/354d68e8a63b21e47a529105a508411bfe8be869/activerecord/lib/active_record/model_schema.rb#L597-L611

- **I believe the root cause lies inside ActiveRecord model schema file** but I can't find the solution... for now ( **EDIT: solution found here: https://github.com/rails/rails/pull/50167#discussion_r1405175059 )** 
- This issue is also present in action_text, but I want to focus for now on activestorage and make sure it works properly before porting it
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."
50166,String contains null byte,collimarco,,2023-11-25T07:04:43Z,2023-12-02T23:40:11Z,2023-11-28T14:49:19Z,"### Steps to reproduce

```
@post = @project.posts.build post_params
@post.save
```

If some users pass a null byte through the REST API (post_params), Rails produces a 500 Internal Server Error on save. This is what I see from logs:

```
ArgumentError (string contains null byte)
```

### More details

In the JSON standard (as defined by RFC 8259), null bytes (i.e., the byte with value 0x00) are not allowed within the JSON text.

When a JSON request is decoded into params, the strings should not contain null bytes. If a string contains null bytes, that is an invalid JSON and an appropriate 4xx error should be returned to the client.

### Expected behavior
Rails returns a 4xx error when a JSON request is decoded if it contains null bytes.

### Actual behavior
Rails ignores the null bytes in the JSON string (and then raises a weird exception during `.save`).

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50165,Fix submit button selector for `type`-less buttons,jonathanhefner,activestorage,2023-11-24T21:38:18Z,2023-11-24T21:49:37Z,2023-11-24T21:49:37Z,"Follow-up to #48290.

The `:is(button, input)[type='submit']` selector does not match `button` elements that omit the `type` attribute in favor relying on its default value (which is `""submit""`).
"
50164,Do not overwrite AJ logger if it is supplied,Aerdayne,activejob,2023-11-24T21:17:46Z,2023-12-05T01:32:45Z,2023-11-25T19:05:39Z,"### Motivation / Background

When supplying a custom logger to `ActiveJob::Base`, it gets overridden by the `active_job.logger` initializer defined [here](https://github.com/rails/rails/blob/2a4bb0bc8699688acccf78520c61acf24968c2ef/activejob/lib/active_job/railtie.rb#L18). This happens, for example, when a custom logger is set in the `config.before_initialize` hook of a different railtie or within the `ActiveSupport.on_load` hook that gets executed before the one defined in the AJ initializer.
Other Rails components [[1](https://github.com/rails/rails/blob/d316d690b9975fa00798187262c56fc0744cb74a/actionview/lib/action_view/railtie.rb#L87), [2](https://github.com/rails/rails/blob/37833debc669bd3435a0d70b1d294bda2eb14070/actionmailer/lib/action_mailer/railtie.rb#L19), [3](https://github.com/rails/rails/blob/37833debc669bd3435a0d70b1d294bda2eb14070/actionmailer/lib/action_mailer/railtie.rb#L19)] use conditional assignment when setting the logger.

### Detail

Change the `active_job.logger` initializer to use conditional assignment when setting a logger.

### Additional information

A simple test case for the AJ railtie was created which is similar in its structure to the [ActiveModel railtie test](https://github.com/rails/rails/blob/2ab10fac93899cd76b9c1fa538237c2bda027ccc/activemodel/test/cases/railtie_test.rb). After a quick skim I've not found any references for testing a framework's railtie other than the one mentioned, which seems pretty old, so let me know if there's another way to test this.

### Checklist

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50163,Improve interval overflow protection,EduardoGHdez,activerecord,2023-11-24T19:06:06Z,2023-12-11T22:21:29Z,2023-12-11T17:51:04Z,"> Sometimes, operations on Times returns just float numbers of seconds, so, we
need to handle that.
> Example: Time.current - (Time.current + 1.hour) # => -3600.000001776 (Float)

When this happens, it's possible to endup with a pretty large number of seconds, making the ISO 8601 formatted duration to trigger an `interval field value out range error`.

PostgreSQL 15 has already improved overflow detection when casting values to interval

However, to further reduce the likelihood of such issues and ensure better-formatted duration types, it now implements the construction of `ActiveSupport::Duration` during the serialization step.

How to reproduce (at least in versions prior to PG 15+):

``` ruby

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""pg""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Base.establish_connection(
  adapter: 'postgresql',
  database: 'postgres',
  username: 'postgres',
  host: 'localhost'
)

ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :projects, force: true do |t|
    t.interval :duration
  end
end

class Project < ActiveRecord::Base; end

class IntervalBugTest < Minitest::Test
  def test_duration
    project = Project.create(duration: 70.years)
    assert_equal 70.years, project.duration
  end

  def test_duration_error
    duration = 70.years.ago - Time.now()

    assert_raises ActiveRecord::StatementInvalid do
      Project.create(duration: duration)
    end
  end
end
```

<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50162,Allow `object_id` as a column name for ActiveRecord,misdoro,activerecord,2023-11-24T18:24:05Z,2023-11-28T17:18:31Z,2023-11-28T14:08:25Z,"Fixes #50160

### Motivation / Background

The `object_id` name may be used by polymorphic relations where `object` is the best name, like `notification.object`. In that case two columns are created: `object_id` and `object_type`.

This Pull Request has been created because we have a rails application that uses the `object` as the polymorphic relationship name, and it seems to be the best name. It was allowed until rails 7.1 and was not breaking anything.

Using the `object_id` as a column name [was explicitly allowed here](https://github.com/rails/rails/pull/38990) 

### Detail

This Pull Request removes the `object_id` from the list of not allowed column names. 
For the sake of consitency, the comments and tests are updated where relevant to use the `__id__` method instead.

### Additional information

The method `object_id` [was added to the dangerous method list here](https://github.com/rails/rails/pull/45883)

Using the `object_id` as a column name [was previously explicitly allowed here](https://github.com/rails/rails/pull/38990) 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50161,Remove duplicate  assignment from ActiveRecord's Rakefile,fatkodima,activerecord,2023-11-24T17:41:15Z,2023-11-24T21:15:29Z,2023-11-24T20:30:53Z,There is the same line below.
50160,ActiveRecord::DangerousAttributeError:        object_id is defined by Active Record,misdoro,"activerecord, attached PR",2023-11-24T17:03:16Z,2023-11-28T14:08:26Z,2023-11-28T14:08:26Z,"With ActiveRecord Before https://github.com/rails/rails/pull/45883/files
it was possible to have a polymorphic relation `object`, 
implicitly defining `object_type` and `object_id` columns.

### Expected behavior
Able to use `object` as a name for a polymorphic relationship

### Actual behavior
An exception 
```
ActiveRecord::DangerousAttributeError:
       object_id is defined by Active Record. Check to make sure that you don't have an attribute or method with the same name.
```
is raised 

### System configuration
**Rails version**:
updating from 7.0 to 7.1

Can the `object_id` column be removed from the dangerous attributes list?

Having the column with that name was not breaking anything for us for many years, and now we are blocked from upgrading to rails 7.1."
50159,Deprecate content for void elements in TagBuilder,skipkayhil,actionview,2023-11-24T16:46:08Z,2023-12-05T00:20:23Z,2023-12-01T14:34:30Z,"### Motivation / Background

According to the [HTML5 Spec][1]

> Void elements can't have any contents (since there's no end tag, no
> content can be put between the start tag and the end tag).

Up to this point, the only special handling of void elements has been to use "">"" to close them instead of ""/>"" (which is optional but valid according to the spec)

> Then, if the element is one of the void elements, ... , then there may
> be a single U+002F SOLIDUS character (/), ... . On void elements, it
> does not mark the start tag as self-closing but instead is unnecessary
> and has no effect of any kind.

### Detail

This commit deprecates the ability to pass content (either through the positional ""content"" parameter or a block) to a void element since it is not valid according to the Spec. This has the benefit of both encouraging more correct HTML generation, and also simplifying the method definition of void elements once the deprecation has been removed.

This commit additionally tweaks the signature of ""void_tag_string"" slightly with two changes. The first change is renaming it to be ""self_closing_tag_string"". This is more accurate than ""void_tag_string"" because the definition of ""void element"" is more specific and has more requirements than ""self closing element"". For example, tags in the SVG namespace _can_ be self closing but the ""/"" at the end of the start tag is _not_ optional because they are not void elements. The second change to this method is swapping from a boolean ""self_closing"" parameter to a string ""tag_suffix"" parameter. This enables the void element method definition to specialize the tag_suffix (to just "">"") without either void elements or self closing elements having to pay the runtime cost of the self_closing conditional since we know at method definition time which suffix each type of tag should use.

[1]: https://html.spec.whatwg.org/multipage/syntax.html#void-elements

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50158,Fix defining `alias_attribute` for STI classes with abstract class in the inheritance chain,fatkodima,activerecord,2023-11-24T12:22:57Z,2023-12-01T14:58:19Z,2023-12-01T14:31:26Z,"Fixes #50154.
"
50157,Update docs for `erb_trim_mode`,Earlopain,docs,2023-11-24T11:30:51Z,2023-12-06T22:46:54Z,2023-11-30T18:15:44Z,"### Motivation / Background

The link for erubis docs seems to be dead for a few years now http://www.kuwata-lab.com/erubis/users-guide.06.html#topics-trimspaces, see [Wayback Machine](http://web.archive.org/web/20230401000000*/http://www.kuwata-lab.com/erubis/users-guide.06.html). Even when reading it through a [working link](http://web.archive.org/web/20200218190015/http://www.kuwata-lab.com/erubis/users-guide.06.html) I'm not sure how it relates to Rails and this config value.

I updated docs to how I understand it currently works.

### Detail

Some context at #30149. To me it looks like this config value should be deprecated and replaced with a boolean since that is how it is excusivly used by rails. https://github.com/rails/rails/blob/a6099ed2b7a544d8fe67688e8a0f9237847404ee/actionview/lib/action_view/template/handlers/erb.rb#L81

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50156,Introduce ActiveRecord:Errors registry for error translations,edwinv,activerecord,2023-11-24T11:13:12Z,2023-12-19T12:00:46Z,,"### Motivation / Background

In our codebase, we heavily lean on PostgreSQL stored procedures. These procedures can raise errors through the `RAISE` statement. We've added custom error codes to these errors so we can throw custom exceptions in our Ruby code. Up until now this has always been a monkey patch to the `translate_exception` method in the PostgreSQL adapter. The upgrade to Rails 7.1 broke our monkey patch (again), this motivated us to work on a better solution in ActiveRecord.

### Detail

This PR introduces the `ActiveRecord:Errors` registry to manage translations of database specific exceptions to ActiveRecord exceptions. Initially I wanted to only introduce this for custom errors, but after seeing the result I figured we can also use this for all specific translations in the adapters. This cleans up a lot of code and makes it easier to understand the translation.

A translation for an error can be registered in the registry:

```ruby
ActiveRecord::Errors.register(""MY0001"", MyCustomException, adapter: ActiveRecord::ConnectionAdapters::PostgreSQL)
ActiveRecord::Errors.register(/connection lost/, CustomConnectionLostException, adapter: ActiveRecord::ConnectionAdapters::PostgreSQL)
ActiveRecord::Errors.register((e)-> { e.kind_of?(Exception) }, MyCustomException, adapter: ActiveRecord::ConnectionAdapters::PostgreSQL)
```

The `AbstractAdapter` does a lookup in the registry to find the appropriate ActiveRecord exception. By supporting strings, Regexp and Procs, almost all translation cases in the specific adapters can be replaced.

### Additional information

Changing error handling for all database adapters should not be taken lightly. I've checked the test coverage for all errors and found that all errors are covered with tests spread over different test cases. 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50155,ActiveSupport::TimeZone.all doesn't give all timezones.,safwansm1,,2023-11-24T09:59:05Z,2023-11-25T12:34:18Z,2023-11-25T12:34:18Z,"### Steps to reproduce
Use ActiveSupport::TimeZone.all in the rails app and it will only list 153 timezone 
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->
Use ActiveSupport::TimeZone.all in existing project
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
time_zones = ActiveSupport::TimeZone.all
```

### Expected behavior
<!-- Tell us what should happen -->
[TimeZones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) list is updated. 592 zones are there in the latest list. Both [Asia/Calcutta](https://en.wikipedia.org/wiki/Asia/Kolkata) and [Asia/Kolkata](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#KOLKATA) needs to be added in Timezone list.
### Actual behavior
<!-- Tell us what happens instead -->
if I Use `ActiveSupport::TimeZone.all`, This will only return 151 timezones.
Output:
`{ ""International Date Line West"" => ""Etc/GMT+12"", ""Midway Island"" => ""Pacific/Midway"", ""American Samoa"" => ""Pacific/Pago_Pago"", ""Hawaii"" => ""Pacific/Honolulu"", ""Alaska"" => ""America/Juneau"", ""Pacific Time (US & Canada)"" => ""America/Los_Angeles"", ""Tijuana"" => ""America/Tijuana"", ""Mountain Time (US & Canada)"" => ""America/Denver"", ""Arizona"" => ""America/Phoenix"", ""Chihuahua"" => ""America/Chihuahua"", ""Mazatlan"" => ""America/Mazatlan"", ""Central Time (US & Canada)"" => ""America/Chicago"", ""Saskatchewan"" => ""America/Regina"", ""Guadalajara"" => ""America/Mexico_City"", ""Mexico City"" => ""America/Mexico_City"", ""Monterrey"" => ""America/Monterrey"", ""Central America"" => ""America/Guatemala"", ""Eastern Time (US & Canada)"" => ""America/New_York"", ""Indiana (East)"" => ""America/Indiana/Indianapolis"", ""Bogota"" => ""America/Bogota"", ""Lima"" => ""America/Lima"", ""Quito"" => ""America/Lima"", ""Atlantic Time (Canada)"" => ""America/Halifax"", ""Caracas"" => ""America/Caracas"", ""La Paz"" => ""America/La_Paz"", ""Santiago"" => ""America/Santiago"", ""Newfoundland"" => ""America/St_Johns"", ""Brasilia"" => ""America/Sao_Paulo"", ""Buenos Aires"" => ""America/Argentina/Buenos_Aires"", ""Montevideo"" => ""America/Montevideo"", ""Georgetown"" => ""America/Guyana"", ""Puerto Rico"" => ""America/Puerto_Rico"", ""Greenland"" => ""America/Godthab"", ""Mid-Atlantic"" => ""Atlantic/South_Georgia"", ""Azores"" => ""Atlantic/Azores"", ""Cape Verde Is."" => ""Atlantic/Cape_Verde"", ""Dublin"" => ""Europe/Dublin"", ""Edinburgh"" => ""Europe/London"", ""Lisbon"" => ""Europe/Lisbon"", ""London"" => ""Europe/London"", ""Casablanca"" => ""Africa/Casablanca"", ""Monrovia"" => ""Africa/Monrovia"", ""UTC"" => ""Etc/UTC"", ""Belgrade"" => ""Europe/Belgrade"", ""Bratislava"" => ""Europe/Bratislava"", ""Budapest"" => ""Europe/Budapest"", ""Ljubljana"" => ""Europe/Ljubljana"", ""Prague"" => ""Europe/Prague"", ""Sarajevo"" => ""Europe/Sarajevo"", ""Skopje"" => ""Europe/Skopje"", ""Warsaw"" => ""Europe/Warsaw"", ""Zagreb"" => ""Europe/Zagreb"", ""Brussels"" => ""Europe/Brussels"", ""Copenhagen"" => ""Europe/Copenhagen"", ""Madrid"" => ""Europe/Madrid"", ""Paris"" => ""Europe/Paris"", ""Amsterdam"" => ""Europe/Amsterdam"", ""Berlin"" => ""Europe/Berlin"", ""Bern"" => ""Europe/Zurich"", ""Zurich"" => ""Europe/Zurich"", ""Rome"" => ""Europe/Rome"", ""Stockholm"" => ""Europe/Stockholm"", ""Vienna"" => ""Europe/Vienna"", ""West Central Africa"" => ""Africa/Algiers"", ""Bucharest"" => ""Europe/Bucharest"", ""Cairo"" => ""Africa/Cairo"", ""Helsinki"" => ""Europe/Helsinki"", ""Kyiv"" => ""Europe/Kiev"", ""Riga"" => ""Europe/Riga"", ""Sofia"" => ""Europe/Sofia"", ""Tallinn"" => ""Europe/Tallinn"", ""Vilnius"" => ""Europe/Vilnius"", ""Athens"" => ""Europe/Athens"", ""Istanbul"" => ""Europe/Istanbul"", ""Minsk"" => ""Europe/Minsk"", ""Jerusalem"" => ""Asia/Jerusalem"", ""Harare"" => ""Africa/Harare"", ""Pretoria"" => ""Africa/Johannesburg"", ""Kaliningrad"" => ""Europe/Kaliningrad"", ""Moscow"" => ""Europe/Moscow"", ""St. Petersburg"" => ""Europe/Moscow"", ""Volgograd"" => ""Europe/Volgograd"", ""Samara"" => ""Europe/Samara"", ""Kuwait"" => ""Asia/Kuwait"", ""Riyadh"" => ""Asia/Riyadh"", ""Nairobi"" => ""Africa/Nairobi"", ""Baghdad"" => ""Asia/Baghdad"", ""Tehran"" => ""Asia/Tehran"", ""Abu Dhabi"" => ""Asia/Muscat"", ""Muscat"" => ""Asia/Muscat"", ""Baku"" => ""Asia/Baku"", ""Tbilisi"" => ""Asia/Tbilisi"", ""Yerevan"" => ""Asia/Yerevan"", ""Kabul"" => ""Asia/Kabul"", ""Ekaterinburg"" => ""Asia/Yekaterinburg"", ""Islamabad"" => ""Asia/Karachi"", ""Karachi"" => ""Asia/Karachi"", ""Tashkent"" => ""Asia/Tashkent"", ""Chennai"" => ""Asia/Kolkata"", ""Kolkata"" => ""Asia/Kolkata"", ""Mumbai"" => ""Asia/Kolkata"", ""New Delhi"" => ""Asia/Kolkata"", ""Kathmandu"" => ""Asia/Kathmandu"", ""Astana"" => ""Asia/Dhaka"", ""Dhaka"" => ""Asia/Dhaka"", ""Sri Jayawardenepura"" => ""Asia/Colombo"", ""Almaty"" => ""Asia/Almaty"", ""Novosibirsk"" => ""Asia/Novosibirsk"", ""Rangoon"" => ""Asia/Rangoon"", ""Bangkok"" => ""Asia/Bangkok"", ""Hanoi"" => ""Asia/Bangkok"", ""Jakarta"" => ""Asia/Jakarta"", ""Krasnoyarsk"" => ""Asia/Krasnoyarsk"", ""Beijing"" => ""Asia/Shanghai"", ""Chongqing"" => ""Asia/Chongqing"", ""Hong Kong"" => ""Asia/Hong_Kong"", ""Urumqi"" => ""Asia/Urumqi"", ""Kuala Lumpur"" => ""Asia/Kuala_Lumpur"", ""Singapore"" => ""Asia/Singapore"", ""Taipei"" => ""Asia/Taipei"", ""Perth"" => ""Australia/Perth"", ""Irkutsk"" => ""Asia/Irkutsk"", ""Ulaanbaatar"" => ""Asia/Ulaanbaatar"", ""Seoul"" => ""Asia/Seoul"", ""Osaka"" => ""Asia/Tokyo"", ""Sapporo"" => ""Asia/Tokyo"", ""Tokyo"" => ""Asia/Tokyo"", ""Yakutsk"" => ""Asia/Yakutsk"", ""Darwin"" => ""Australia/Darwin"", ""Adelaide"" => ""Australia/Adelaide"", ""Canberra"" => ""Australia/Canberra"", ""Melbourne"" => ""Australia/Melbourne"", ""Sydney"" => ""Australia/Sydney"", ""Brisbane"" => ""Australia/Brisbane"", ""Hobart"" => ""Australia/Hobart"", ""Vladivostok"" => ""Asia/Vladivostok"", ""Guam"" => ""Pacific/Guam"", ""Port Moresby"" => ""Pacific/Port_Moresby"", ""Magadan"" => ""Asia/Magadan"", ""Srednekolymsk"" => ""Asia/Srednekolymsk"", ""Solomon Is."" => ""Pacific/Guadalcanal"", ""New Caledonia"" => ""Pacific/Noumea"", ""Fiji"" => ""Pacific/Fiji"", ""Kamchatka"" => ""Asia/Kamchatka"", ""Marshall Is."" => ""Pacific/Majuro"", ""Auckland"" => ""Pacific/Auckland"", ""Wellington"" => ""Pacific/Auckland"", ""Nuku'alofa"" => ""Pacific/Tongatapu"", ""Tokelau Is."" => ""Pacific/Fakaofo"", ""Chatham Is."" => ""Pacific/Chatham"", ""Samoa"" => ""Pacific/Apia"" }`

### System configuration
**Rails version**:

**Ruby version**:
"
50154,RuntimeError: can't add a new key into hash during iteration,vill,"activerecord, attached PR, With reproduction steps",2023-11-24T05:15:42Z,2023-12-01T14:31:27Z,2023-12-01T14:31:27Z,"The `alias_attribute` method does not work after upgrading `Rails` from version `7.0.8` to version `7.1.2`. Perhaps everything went bad after [this request](https://github.com/rails/rails/pull/48533).

### Steps to reproduce
**Rails 7.0.8 - This works**
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.0.8""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :balance_transactions, force: true do |t|
    t.string :type, null: false
    t.string :old_field
  end
end

class ApplicationRecord < ActiveRecord::Base
  self.abstract_class = true
end

class BalanceTransaction < ApplicationRecord
  alias_attribute :new_field, :old_field
end

class BalanceTransaction
  class TopUp < BalanceTransaction
    self.abstract_class = true

    # Common validations, etc.
  end
end

class BalanceTransaction
  module Type
    class CashTopUp < BalanceTransaction::TopUp
    end
  end
end

class BugTest < Minitest::Test
  def test_association_stuff
    balance_transaction = BalanceTransaction::Type::CashTopUp.create!

    assert_equal 1, BalanceTransaction::Type::CashTopUp.count
  end
end
```
**Rails 7.1.2 - This doesn't work**
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.2""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :balance_transactions, force: true do |t|
    t.string :type, null: false
    t.string :old_field
  end
end

class ApplicationRecord < ActiveRecord::Base
  self.abstract_class = true
end

class BalanceTransaction < ApplicationRecord
  alias_attribute :new_field, :old_field
end

class BalanceTransaction
  class TopUp < BalanceTransaction
    self.abstract_class = true

    # Common validations, etc.
  end
end

class BalanceTransaction
  module Type
    class CashTopUp < BalanceTransaction::TopUp
    end
  end
end

class BugTest < Minitest::Test
  def test_association_stuff
    balance_transaction = BalanceTransaction::Type::CashTopUp.create!

    assert_equal 1, BalanceTransaction::Type::CashTopUp.count
  end
end
```
**Rails 7.1.2 - This works**
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.2""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :balance_transactions, force: true do |t|
    t.string :type, null: false
    t.string :old_field
  end
end

class ApplicationRecord < ActiveRecord::Base
  self.abstract_class = true
end

class BalanceTransaction < ApplicationRecord
  alias_attribute :new_field, :old_field
end

class BalanceTransaction
  class TopUp < BalanceTransaction
    self.abstract_class = true

    # Common validations, etc.
  end
end

class BalanceTransaction
  module Type
    class CashTopUp < BalanceTransaction::TopUp
    end
  end
end

class BugTest < Minitest::Test
  def test_association_stuff
    BalanceTransaction.new # <---- After this everything starts working

    balance_transaction = BalanceTransaction::Type::CashTopUp.create!

    assert_equal 1, BalanceTransaction::Type::CashTopUp.count
  end
end
```
**Rails 7.1.2 - This works**
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.2""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :balance_transactions, force: true do |t|
    t.string :type, null: false
    t.string :old_field
  end
end

class ApplicationRecord < ActiveRecord::Base
  self.abstract_class = true
end

class BalanceTransaction < ApplicationRecord
end

class BalanceTransaction
  class TopUp < BalanceTransaction
    self.abstract_class = true

    alias_attribute :new_field, :old_field # <--- Alias declaration moved here

    # Common validations, etc.
  end
end

class BalanceTransaction
  module Type
    class CashTopUp < BalanceTransaction::TopUp
    end
  end
end

class BugTest < Minitest::Test
  def test_association_stuff
    balance_transaction = BalanceTransaction::Type::CashTopUp.create!

    assert_equal 1, BalanceTransaction::Type::CashTopUp.count
  end
end
```
### Expected behavior
The `alias_attribute` method should create aliases without errors.

### Actual behavior
```
RuntimeError: can't add a new key into hash during iteration
    /usr/local/bundle/gems/activemodel-7.1.2/lib/active_model/attribute_methods.rb:376:in `block in aliases_by_attribute_name'
```
### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50153,Improve documentation for excerpt text helper [skip ci],akhilgkrishnan,actionview,2023-11-24T04:16:05Z,2023-11-25T17:00:55Z,2023-11-25T06:52:54Z,"### Detail

This Pull Request updates the the `excerpt` text helper documentation. Separated the options and examples in different section as same as `simple_format`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50152,Nested associations with `touch: true` cause additional touch on next transaction,tf,activerecord,2023-11-23T19:43:08Z,2023-11-29T14:59:17Z,,"I'm running into an edge case where creating a hierarchy of nested records with associations of the form

```ruby
Comment belongs_to :post, touch: true
Post belongs_to :blog, touch: true
```

within an transaction results in a `blog` object that performs an extra `touch` call before the next commit, overriding a manually passed `updated_at` timestamp:

```ruby
   ActiveRecord::Base.transaction do
      blog = Blog.create
      post = blog.posts.create
      post.comments.create
    end

    blog.update(updated_at: 4.days.ago)
    blog.updated_at.to_date # => today 
```

In my case the transaction was created implicitly via an `after_create` callback on the root model (in this case `Blog`) that scaffolded some nested associations. It was, thus, all the more surprising to obtain a record which did not allow updating its timestamps.

### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :blogs, force: true do |t|
    t.timestamps
  end

  create_table :posts, force: true do |t|
    t.belongs_to :blog
    t.string :title
    t.timestamps
  end

  create_table :comments, force: true do |t|
    t.belongs_to :post
    t.text :body
    t.timestamps
  end
end

class Blog < ActiveRecord::Base
  has_many :posts

  # Uncommenting the following two lines also makes the test fail with Rails 6.0
  # before_commit do
  # end
end

class Post < ActiveRecord::Base
  belongs_to :blog, touch: true
  has_many :comments
end

class Comment < ActiveRecord::Base
  belongs_to :post, touch: true
end

class BugTest < Minitest::Test
  def test_touching
    blog  = nil

    ActiveRecord::Base.transaction do
      blog = Blog.create
      post = blog.posts.create(title: ""Some title"")
      post.comments.create(body: ""LGTM"")
    end

    timestamp = 4.days.ago
    blog.update(updated_at: timestamp)

    assert_equal timestamp.to_date, blog.updated_at.to_date
  end
end
```

### Expected behavior

Updating the `updated_at` attribute works. 

### Actual behavior

Right before the transaction to update timestamp is committed, `Blog#touch` is invoked again undoing the manual update. 

To me the situation looks as follows: Since #19324, parent touches are batched together at the end of the transaction. Before the transaction that creates the records is committed, `Post#touch` causes `Blog#touch_later` to be invoked (via the [`after_touch` callback defined in `Associations::Builder::BelongsTo`](https://github.com/rails/rails/blob/7-1-stable/activerecord/lib/active_record/associations/builder/belongs_to.rb#L99)). But since the `before_commit` callback is already in progress, this schedules `Blog#touch` for the commit of the next transaction. 

In Rails 6.0 (before #39101), the above test passes since the `before_commit_without_transaction_enrollment` callback is not triggered unless `add_to_transaction` is called. This causes the additional `touch` to be skipped. Once we add a `before_commit` callback to `Blog`, the test also fails for Rails 6.0 since we again enforce enrollment in the transaction on each save. 

I'm wondering whether one might skip propagating touches along `belongs_to` associations (via the `after_touch` callback) during the `before_commit` phase since `touch_later` itself already appears to [handle this explicitly](https://github.com/rails/rails/blob/7-1-stable/activerecord/lib/active_record/touch_later.rb#L27).

### System configuration
**Rails version**: 6.1 - 7.1

**Ruby version**: 3.2
"
50151,Improve `ActiveSupport::InheritableOptions` hash-like behaviour,kmcphillips,"actionpack, activesupport, railties",2023-11-23T17:55:54Z,2023-11-28T19:29:37Z,2023-11-28T17:24:26Z,"## Problem

Some behaviours for `ActiveSupport::InheritableOptions` are unintuitive because it implements hash lookup like so:

```ruby
def initialize
  super() { |h, k| parent[k] }
end
```

Because of this, lookups work because they fall through to the block which is stored in the closure. But if you try to do any hash-like behaviour it only operates on the keys added after inheritance, and ignores the parent hash. So when attempting to `to_h` and compare the results are silently wrong and confusing.

Specifically:
```ruby
> object = ActiveSupport::InheritableOptions.new(key: :value)
=> {}
> object.to_h
=> {}
> object[:key]
=> :value
```


## Solution

Override `to_h`, `inspect`, and `==` in order to merge the parent hash and self hash, and then behave like a hash.

cc @byroot "
50150,Add more specific exceptions to warn when an adapter is using legacy adapter format,kmcphillips,activerecord,2023-11-23T16:12:16Z,2023-11-30T14:40:21Z,2023-11-30T14:40:21Z,"## Problem

In #50064 and #50112 we have changed the way Active Record database adapters are expected to register themselves with the framework in order to be loaded.

Previously it was by convention, as Jean so eloquently defined it as ""byzantine"":
* They must be defined in `active_record/connection_adapters/<name>_adapter`
* They must define `ConnectionHandling.<name>_adapter_class`
* They must define `ConnectionHandling.<name>_connection`

Now they must explicitly call `ActiveRecord::ConnectionAdapters.register` and do not need to fit this convention.

Rails has updated its internal adapters, and we will attempt to notify known maintainers of adapters. But there are plenty of use cases for private adapters we do not know about or cannot know about.

The issue with that is the error message is pretty generic ""this adapter does not exist, be sure to add it to the gemfile"" which is correct for most _users_ but not correct for _maintainers_. We want to make **updating as clear and easy as possible**. The code change is pretty small, but knowing where and how to make that change is the hard part.

## Solution

Add a transitionary block of extra error handling and messaging to explain how to update the adapters.

When calling `resolve(""some_adapter"")` and it is not found, before raising the generic error first try to require that adapter in the legacy location. If it is found raise a better error explaining exactly how to update the adapter.

The tricky part is that just because a file with that name exists, does not necessarily mean that file is an adapter. So to be extra sure we check for the existence of an adapter method. If it's not there raise a slightly different error message.

Hopefully this makes the transition path easier.


## Questions

This code can all be deleted, especially the fake test classes, when we move beyond `7.2.x`. What is the desired way to flag this to be deleted when the next major or minor version is updated on `main`?

Paired with @adrianna-chang-shopify 
cc @matthewd @byroot "
50149,Fix flaky db warnings test,fatkodima,activerecord,2023-11-23T11:29:21Z,2023-11-23T17:40:18Z,2023-11-23T17:29:47Z,Fixes a flaky test from https://buildkite.com/rails/rails/builds/102185#018bf92f-d565-4801-9355-953b2132e421.
50148,Remove ActiveStorage backported changelogs [skip ci],akhilgkrishnan,activestorage,2023-11-23T11:07:14Z,2023-11-23T18:27:05Z,2023-11-23T18:03:27Z,"### Detail

This Pull Request removes the ActiveStorage backported changelogs. The removed changelogs are already in [7-1-stable CHANGELOG](https://github.com/rails/rails/blob/7-1-stable/activestorage/CHANGELOG.md).

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50147,Close fenced code block in AR Changelog [ci-skip],okuramasafumi,activerecord,2023-11-23T09:01:58Z,2023-11-23T09:32:19Z,2023-11-23T09:32:18Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This fixes wrong rendering of the author name.

### Detail

The fenced code block in CHANGELOG was not correct.
That caused the author name included in the code block.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50146,Rails 7.1 breaks loading plain text with yaml serializer,robbevp,"activerecord, With reproduction steps",2023-11-23T08:33:59Z,2023-11-25T10:26:30Z,2023-11-25T10:26:30Z,"While upgrading to rails 7.1+ I bumped into an issue with a column that was supposed to contained serialized yaml, but didn't. This only happens if the column's content starts with a special character like `%`.

I think this issue is caused by [these changes](https://github.com/rails/rails/commit/185f2d718d4f971ef4d45c252ec2db3db6fb0f89#diff-935494b14b54c907fc1d206871d2a4797c490b80f2c86d61a7264131dd492e42L49-L57) as this removed some early returns if the yaml doesn't appear to be serialized yaml.

### Steps to reproduce

**Rails 7.0 - this works**
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.0.0""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.text :content
  end
end

class Post < ActiveRecord::Base
  serialize :content
end

class BugTest < Minitest::Test
  def test_read_unserialized_value
    # Use raw sql to skip rails' serialization when inserting
    ActiveRecord::Base.connection.execute('INSERT INTO ""posts"" (""content"") VALUES (""%{count}"")')

    assert_equal '%{count}', Post.first.content_before_type_cast
    assert_equal '%{count}', Post.first.content
  end
end
```

**Rails 7.1 - This doesn't work**
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.text :content
  end
end

class Post < ActiveRecord::Base
  serialize :content, coder: YAML
end

class BugTest < Minitest::Test
  def test_read_unserialized_value
   # Use raw sql to skip rails' serialization when inserting
   ActiveRecord::Base.connection.execute('INSERT INTO ""posts"" (""content"") VALUES (""%{count}"")')

   assert_equal '%{count}', Post.first.content_before_type_cast
   
   # This will throw `Psych::SyntaxError: (<unknown>): could not find expected directive name while scanning a directive at line 1 column 1`
   assert_equal '%{count}', Post.first.content
  end
end
```

### Expected behavior
There should be no breaking behaviour here, since there was no deprecation notice. The upgrade guide to rails 7.1 also doesn't mention anything about changes around `serialize`: https://edgeguides.rubyonrails.org/7_1_release_notes.html

### Actual behavior
Trying to read the attribute will throw an error:
```
psych-5.1.1.1/lib/psych/parser.rb:62:in `_native_parse': (<unknown>): could not find expected directive name while scanning a directive at line 1 column 1 (Psych::SyntaxError)
```

### System configuration
**Rails version**: 7.0 -> 7.1

**Ruby version**: 3.2.2
"
50145,Include exception causes into log messages,fatkodima,actionpack,2023-11-23T00:02:56Z,2023-11-28T21:13:35Z,2023-11-28T19:45:13Z,"Fixes #50125.

#39723 changed bad connection related errors so that we now have some (useful for debugging) details from the original database exceptions lost. 

~This PR adds original database errors to these new exceptions classes, so we can get the exception details. It also prints these added exceptions messages by default as part of the new exceptions messages.~"
50144,Remove deprecations part 1,rafaelfranca,"actionmailer, actionpack, railties, docs, activejob",2023-11-22T22:17:20Z,2023-11-22T22:38:26Z,2023-11-22T22:38:25Z,"Part 1 of #49624

- [x] Remove Action Cable deprecations
- [x] Remove Action Mailbox deprecations
- [x] Remove Action Mailer deprecations
	- [x] Remove deprecated `config.action_mailer.preview_path`
	- [x] Remove deprecated params via `:args` for `assert_enqueued_email_with`
- [ ] Remove Action Pack deprecations
	- [x] Remove deprecated constant `ActionDispatch::IllegalStateError`
	- [x] Remove deprecated constant `AbstractController::Helpers::MissingHelperError`
	- [x] Remove deprecated comparison between `ActionController::Parameters` and `Hash`
	- [x] Deprecate `Rails.application.config.action_controller.allow_deprecated_parameters_hash_equality`
	- [x] Remove deprecated `Rails.application.config.action_dispatch.return_only_request_media_type_on_content_type`
	- [x] Remove deprecated `speaker`, `vibrate`, and `vr` permissions policy directives
	- [x] Remove deprecated support to set `Rails.application.config.action_dispatch.show_exceptions` to `true` and `false`
	- [ ] Remove deprecated support to using `:controller` and `:action` in routes
- [x] Remove Action Text deprecations
- [x] Remove Action View deprecations
- [x] Remove Active Job deprecations
	- [x] Remove deprecated primitive serializer for `BigDecimal` arguments
	- [x] Remove deprecated support to set numeric values to `scheduled_at` attribute
	- [x] Remove deprecated `:exponentially_longer` value for the `:wait` in `retry_on`
- [x] Remove Active Model deprecations"
50143,Fix ActiveModel::Dirty#*_was documentation [ci skip],danbernier,activemodel,2023-11-22T19:32:25Z,2023-11-22T22:13:37Z,2023-11-22T19:39:14Z,"The docs illustrated `*_change`, not `*_was`, leaving the reader to have to guess.

### Motivation / Background

This Pull Request has been created because I was reading the ActiveModel::Dirty docs, and was confused that the `*_was` code examples didn't use any `*_was` methods.

### Detail

This Pull Request changes the documentation to illustrate what the `*_was` methods return.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50142,After touch removes saved_changes,matiassalles99,activerecord,2023-11-22T18:37:05Z,2023-12-20T03:17:02Z,2023-12-20T03:17:01Z,"### Steps to reproduce

- When calling `record.touch` on any ActiveRecord model, you can access the saved_changes in a after_touch callback
- When calling `saved_changes` in an after_touch callback that runs after an association touches the related record saved_changes is an empty hash, I suspect that might be related to the `clear_attribute_change` in the TouchLater module

<img width=""793"" alt=""Screenshot 2023-11-22 at 15 33 48"" src=""https://github.com/rails/rails/assets/57004457/771a4c3a-d1c4-48e8-8367-2c823a5753a1"">

- To replicate create two ActiveRecord classes

```ruby
class A < ApplicationRecord
  belongs_to :b, touch: true
end

class B < ApplicationRecord
  after_touch :do_sth

  def do_sth
    puts saved_changes
  end
end
```

### Expected behavior
- We should see the updated_at attribute inside the saved_changes hash, which allows calling updated_at_before_last_save to expire cache keys based on the updated_at

### Actual behavior
- saved_changes returns an empty hash, which means there is no way to access the previous updated_at value

### System configuration
**Rails version**: 7.1.0

**Ruby version**: 3.2.2
"
50141,Reduce object allocations in AR connection handler,eiskrenkov,activerecord,2023-11-22T18:31:47Z,2023-11-23T11:29:44Z,2023-11-23T09:16:15Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because after moving to Rails 7.1 our team experienced performance degradation

### Detail

Our Rails application is establishing connections to multiple databases (primary/replica setup) with reading/writing roles. At the same time we're using [`identity_cache`](https://github.com/Shopify/identity_cache) gem for caching capabilities. Under the hood `identity_cache` uses ActiveRecord's `ActiveRecord::Base.connection_handler.connection_pool_list` ([here](https://github.com/Shopify/identity_cache/blob/main/lib/identity_cache.rb#L119)). After we moved to Rails 7.1.2 we noticed new deprecation warnings from Active Record:

> DEPRECATION WARNING: `connection_pool_list` currently only applies to connection pools in the current role (`writing`). In Rails 7.2, this method will apply to all known pools, regardless of role. To affect only those connections belonging to a specific role, pass the role name as an argument. To switch to the new behavior, pass `:all` as the role name.

So that I opened pull request into `identity_cache` repo to silence deprecation by passing `ActiveRecord::Base.current_role` to `ActiveRecord::ConnectionAdapters::ConnectionHandler#connection_pool_list` - https://github.com/Shopify/identity_cache/pull/544

We decided to deploy Rails upgrade to staging though, not waiting for new `identity_cache` version being released, while setting `Rails.application.config.active_support.deprecation = :silence`. After deployment we noticed RT degradation and started the investigation. One of things that stand out is the number of allocated objects (4 times more than before). After further investigation and profiling we noticed that the issue is probably caused by identity cache gem.

The issue is that `deprecation_for_pool_handling` method (`ActiveRecord::ConnectionAdapters::ConnectionHandler`) is allocating new string objects each time it's called while interpolating `ActiveRecord::Base.current_role`, which is not memoized in any way by itself, but also (combined with method name and HEREDOC's `squish`) causes the resulting string not to be frozen. As deprecated methods are heavily used by our application through the gem, this is enough to cause issues for us.

This Pull Request changes the way deprecation messages are built by removing dynamic part (interpolation + HEREDOC's squish). It causes those strings to be frozen because of `# frozen_string_literal: true`. This way was chosen mainly because `ActiveSupport::Deprecation` does not support lazy-like syntax (passing block to `#warn`) and it's not currently possible to add this capability without public interface changes because Deprecation may have custom behaviours configured. At the same time outputting current role in deprecation message seems to be not necessary and messages duplication in `activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb` seem to be alright as well, as they will be removed in 7.2 either way.

### Additional information

I also wrote the benchmark script to provide more visibility over this issue, you can find it [here](https://gist.github.com/eiskrenkov/8777eb4fad51a3cf821534e5c5fbac03). It's testing `ActiveRecord::ConnectionAdapters::ConnectionHandler#connection_pool_list` specifically, but results should be similar for all of the patched methods

Results:

```sh
ruby test-rails-patch.rb
```

```
Warming up --------------------------------------
       without patch     5.007k i/100ms
Calculating -------------------------------------
       without patch     50.594k (± 1.6%) i/s -    255.357k in   5.048483s
```

```sh
USING_PATCH=true ruby test-rails-patch.rb
```

```
Warming up --------------------------------------
          with patch    42.019k i/100ms
Calculating -------------------------------------
          with patch    419.994k (± 0.9%) i/s -      2.101M in   5.002782s
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50140,Add a `ActiveRecord.protocol_adapters` configuration to map `DATABASE_URL` protocols to adapters at an application level,kmcphillips,"activerecord, docs",2023-11-22T18:26:53Z,2023-11-29T16:42:39Z,2023-11-29T16:41:51Z,"This takes a completely different approach to what I attempted in #50112, cc @byroot @matthewd.


## Problem

When using a `DATABASE_URL` to define a database connection, the deployment env config needs to define the adapter used as part of the URL. The adapter is actually an application level concern, and what the env should care about is the DBMS/protocol (ie. ""this rails app connects to MySQL"" and not ""this rails app connects to MySQL and does it using a specific adapter class"")

The most obvious usecase here is toggling or transitioning between `mysql2` and `trilogy` as they are both first party DB adapters including in Rails to connect to MySQL, but the same concern holds true for custom adapters and likely any future adapters.

What the env should be able to do is say `DATABASE_URL=mysql://host/db?options=whatever` and then have the application decide that `mysql -> mysql2` or `mysql -> trilogy` without having to modify the environment.


## Solution

Add an Active Record config that provides a mapping from protocol to adapter in database URLs. Use that in the `ActiveRecord::DatabaseConfigurations::UrlConfig` (the `ActiveRecord::DatabaseConfigurations::ConnectionUrlResolver` class internally) to map from protocol to adapter.

```ruby
config.active_record.protocol_adapters.mysql = ""trilogy""
```

Build in some reasonable defaults, including removing a specific `postgres` -> `postgresql` hack that was already hardcoded in. In this case:

| Protocol  | Adapter |
| ------------- | ------------- |
| `mysql`    | `mysql2`     |
| `sqlite`   | `sqlite3`    |
| `postgres` | `postgresql` |


## What should reviewers focus on?

* Oh gosh writing good documentation is hard.
* I use `ActiveSupport::InheritableOptions` but it's not strictly necessary. It provides some indifferent access and reader conveniences, but a hash would work and just be less forgiving. 
* I added `sqlite` to `sqlite3` but I honestly have no idea if this is correct or reasonable."
50139,`counter_cache` not decrementing with has_many through association,zbokostya,activerecord,2023-11-22T17:56:40Z,2023-11-23T20:25:45Z,,"### Steps to reproduce
```ruby
begin
  require 'bundler/inline'
rescue LoadError => e
  $stderr.puts 'Bundler version 1.10 or later is required. Please update your Bundler'
  raise e
end

gemfile(true) do
  source 'https://rubygems.org'
  gem 'activerecord', '7.1.1'
  # gem 'activerecord', '6.1.7.6'
  # gem 'activerecord', '5.2.8.1'
  gem 'sqlite3'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :books, force: true do |t|
  end

  create_table :parts, force: true do |t|
    t.integer :book_id
    t.integer :series_id
  end

  create_table :series, force: true do |t|
    t.integer :books_count, default: 0
  end
end

class Book < ActiveRecord::Base
  has_many :parts
  has_many :series, through: :parts
end

class Part < ActiveRecord::Base
  belongs_to :book
  belongs_to :series, counter_cache: :books_count
end

class Series < ActiveRecord::Base
  has_many :parts
  has_many :books, through: :parts
end

class BugTest < Minitest::Test

  def test_counter_cache_after_assign_and_clear
    book = Book.create!
    series = Series.create!

    series.books = [book]
    series.books = []
    assert_equal 0, series.books_count
  end

  def test_counter_cache_after_assign_and_clear_with_reload
    book = Book.create!
    series = Series.create!

    series.books = [book]
    series.books = []
    assert_equal 0, series.reload.books_count
  end
end
```

### Expected behavior
`counter_cache` should become to eq 0 after assign has_many field with empty array

### Actual behavior
`counter_cache` not decrementing

### System configuration
**Rails version**:
7.1.1, 6.1.7.6, 5.2.8.1
**Ruby version**:
3.2.2, 2.7.5"
50138,Remove duplication between `alias_attribute_method_definition` and `define_proxy_call`,rafaelfranca,activemodel,2023-11-22T17:28:43Z,2023-11-22T17:54:17Z,2023-11-22T17:54:16Z,"Those two methods are doing almost the same thing, so let's remove the duplication."
50137,Tweak message for `NoDatabaseError`,jonathanhefner,activerecord,2023-11-22T17:19:18Z,2023-11-22T17:34:39Z,2023-11-22T17:34:39Z,"This tweaks various phrasing and puts the ""To create the database"" instructions next to the relevant bullet point instead of at the end of the message.
"
50136,Implement `Duration#negative?` without calling `public_send`,Morriar,activesupport,2023-11-22T16:55:13Z,2023-12-08T14:41:38Z,2023-12-08T14:41:38Z,"### Motivation / Background

Inspired by @casperisfine change in https://github.com/rails/rails/pull/49909.

For codebases using `ActiveSupport::Duration` extensively, checking if the duration is negative currently requires going through the `method_missing` mechanism and a `public_send`` call which can be quite slow.

Instead, we can implement the method natively and get the check executed almost 4x faster.

Here's some benchmark:

```
ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [arm64-darwin21]
Warming up --------------------------------------
           negative?   588.000  i/100ms
    negative_native?     2.544k i/100ms
Calculating -------------------------------------
           negative?      6.738k (± 1.9%) i/s -     34.104k in   5.063211s
    negative_native?     25.804k (± 1.3%) i/s -    129.744k in   5.028821s

Comparison:
           negative?:     6738.1 i/s
    negative_native?:    25804.4 i/s - 3.83x  (± 0.00) faster
```

```rb
require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'
  gem 'benchmark-ips'
  gem 'activesupport'
end

require 'active_support/all'

class ActiveSupport::Duration
  def negative_native?
    @value < 0
  end
end

values = 1000.times.map do |i|
  rand(-100..100).hours
end

puts RUBY_DESCRIPTION
Benchmark.ips do |x|
  x.report(""negative?"") do
    values.each do |v|
      v.negative?
    end
  end

  x.report(""negative_native?"") do
    values.each do |v|
      v.negative_native?
    end
  end

  x.compare!(order: :baseline)
end
```

### Detail

This pull request implements `ActiveSupport::Duration#negative?` without relying on `method_missing` and `public_send`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50135,Fix port not displayed on host connection errors,skipkayhil,activerecord,2023-11-22T14:56:51Z,2023-11-29T01:23:29Z,2023-11-29T01:23:24Z,"### Motivation / Background

Ref #50125

A [previous change][1] added a more specific interface for some database connection errors, with the goal to provide Actionable Errors for some of these issues in development. However, the errors concerning not being able to connect to a specified hostname ended up displaying less information than before. Now, they only display the hostname instead of also including the port, even though that information is also very necessary when debugging connection issues.

### Detail

This commit adds the port to the messages concerning hostname so that a more ""complete"" hostname is displayed to the user on connection issues.

[1]: https://github.com/rails/rails/commit/b28711ffa015217e2c24c87152a2f37d8aca1c83

### Additional Information

Since the referenced commit first appeared in 7.0, I would love for this to be backported to 7-1-stable and 7-0-stable.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50134,Fix preposition in fields_for doc [ci-skip],skipkayhil,actionview,2023-11-22T14:09:23Z,2023-11-22T14:12:50Z,2023-11-22T14:12:45Z,Followup to 2a5e9bc85b291b276d382f4a2f80c73f35c24b1a
50133,Warn if frameworks are loaded too early,runephilosof-abtion,"attached PR, With reproduction steps",2023-11-22T13:02:04Z,2023-11-25T10:04:37Z,,"If you use a gem that loads the Rails framework too early, you will get various problems.

Examples of issues that are caused by gems loading Rails incorrectly (from https://github.com/rails/rails/pull/46047#issuecomment-1380712992)
- https://github.com/rails/rails/issues/23589 
- https://github.com/rails/rails/issues/27844
- https://github.com/rails/rails/issues/33283
- https://github.com/rails/rails/issues/36322
- https://github.com/rails/rails/issues/37030

Fixes to gems that loaded Rails too early
- https://github.com/ViewComponent/view_component/issues/1507
- https://github.com/collectiveidea/delayed_job_active_record/issues/185

Pull requests that try to make Rails warn about this problem, when your Rails code has been loaded too early
- https://github.com/rails/rails/pull/38024
- https://github.com/rails/rails/pull/46047

This issue is here to track the efforts to fix this issue. It seems both above PRs are stalled.

### Steps to reproduce
```
  # config/initializers/000_some_initializer.rb
  ActiveRecord::Base.configurations # Make use of AR::Base which hasn't been loaded yet

  # config/initializers/new_framework_defaults.rb
  Rails.application.config.active_record.collection_cache_versioning = false
  # Setting this configuration won't do anything since ActiveRecord::Base is already
  # loaded and the `set_configs` initializer has already iterated over application
  # config (see https://github.com/rails/rails/blob/b67785a476cf346b09f5ebc71b4d61aae3ac27b3/activerecord/lib/active_record/railtie.rb#L192)

  puts ActiveRecord::Base.collection_cache_versioning # true
```

### Expected behavior
Rails would warn on stderr about this problem, or raise an error.
Extra points, if it could pinpoint (stacktrace?) what code is doing the wrong loading.

### Actual behavior
Initializer configuration from new_framework_defaults of ActiveRecord is ignored.

### System configuration
**Rails version**:
7.1.2
**Ruby version**:
2.7.7"
50132,Add `multiple_of` option to `ActiveModel::Validations::NumericalityValidator`,joshuay03,activemodel,2023-11-22T11:54:45Z,2023-11-23T22:37:58Z,2023-11-23T22:37:51Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Implements https://discuss.rubyonrails.org/t/add-multiple-of-option-to-activemodel-numericalityvalidator/84263

### Detail

This Pull Request adds a new `multiple_of` option to `ActiveModel::Validations::NumericalityValidator` which uses `Integer#multiple_of?` defined by `ActiveSupport` to validate that an attribute (integer only) is a multiple of another value (any numeric).

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

One gotcha of this implementation is that the attribute needs to be an integer. For example, this will raise an error:

```ruby
class MyModel
  validates_numericality_of :offset, multiple_of: 7
end

model = MyModel.new
model.offset = 7.0
model.valid? # => NoMethodError: undefined method `multiple_of?' for 0.7e1:BigDecimal
```

I wonder if it's worth updating `ActiveSupport`'s `#multiple_of` to be defined on `Numeric` instead? 🤔 But I'm guessing there's gonna be some issues with precision...

Alternatively, we could also validate that the attribute is an integer only for this specific case (i.e. force `integer_only: true`)?

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50131,Invalid SQL executing distinct.count on a model with a composite primary key,umbertopeserico,activerecord,2023-11-22T09:26:00Z,2023-11-22T16:02:52Z,,"The problem: when running a query `Model.distinct.count` on a model which as a composite primary key, the generated SQL is not valid.

### Steps to reproduce

To reproduce the bug with postgresql (which is the adapter l'm using)
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", ""= 7.1.2""
  gem ""pg""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""postgresql"", database: ""distinct_count_bug"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :composite_pks, primary_key: [:col1, :col2] do |t|
    t.string :col1
    t.string :col2

    t.timestamps
  end
end

class CompositePk < ActiveRecord::Base
end

class BugTest < Minitest::Test
  def test_distinct_count_invalid_sql_generated
    CompositePk.create(col1: 'example', col2: 'example')
    count = CompositePk.distinct.count

    assert_equal 1, count
  end
end
```

To reproduce the bug with sqlite3 (I tried to understand if this is a database adapter specific bug but sqlite3 generates the same query)
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", ""= 7.1.2""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :composite_pks, primary_key: [:col1, :col2] do |t|
    t.string :col1
    t.string :col2

    t.timestamps
  end
end

class CompositePk < ActiveRecord::Base
end

class BugTest < Minitest::Test
  def test_distinct_count_invalid_sql_generated
    CompositePk.create(col1: 'example', col2: 'example')
    count = CompositePk.distinct.count

    assert_equal 1, count
  end
end
```

### Expected behavior

Running Model.distinct.count:

No exception raised and valid SQL generated

Example of valid SQL
```SQL
SELECT COUNT(DISTINCT (""col1"", ""col2"")) FROM ""composite_pks""
```

### Actual behavior

Running Model.distinct.count:

An exception is raised (with postgresql):
`ActiveRecord::StatementInvalid: PG::SyntaxError: ERROR:  syntax error at or near ""[""
LINE 1: SELECT COUNT(DISTINCT [""col1"", ""col2""]) FROM ""composite_pks""`

An exception is raised (with sqlite):
`ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: ""col1"", ""col2""""`

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2

**PostgresSQL**: 15

**SQLite**: 3
"
50130,Error Message Degradation for Authentication Failure to MySQL,aeroastro,,2023-11-22T07:33:57Z,2023-11-22T15:09:46Z,2023-11-22T15:09:45Z,"### Steps to reproduce

Assume MySQL is running on port 3306 on Docker on local Mac.

Gemfile

```ruby
source ""https://rubygems.org""

gem ""rails"", github: ""rails/rails"", branch: ""main""
gem ""mysql2""
```

code

```ruby
require ""active_record""
require ""action_controller/railtie""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Base.establish_connection(adapter: ""mysql2"", host: ""127.0.0.1"", user: 'root', password: 'wrong-password', port: ""3306"")

class Post < ActiveRecord::Base
  has_many :comments
end

class TestApp < Rails::Application
  config.root = __dir__
  config.hosts << ""example.org""
  config.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger

  routes.draw do
    get ""/"" => ""test#index""
  end
end

class TestController < ActionController::Base
  include Rails.application.routes.url_helpers

  def index
    @post = Post.all.to_a
    render plain: ""Home""
  end
end

require ""minitest/autorun""
require ""rack/test""

class BugTest < Minitest::Test
  include Rack::Test::Methods

  def test_returns_success
    get ""/""
    assert last_response.ok?
  end

  private
    def app
      Rails.application
    end
end
```

### Expected behavior

The error message should provide detailed information for troubleshooting. The expected error message is:

```
ActiveRecord::ConnectionNotEstablished (Access denied for user 'root'@'172.18.0.1' (using password: YES)):
```

We can get all the following information to investigate the exact cause.

* Raw error message from MySQL
* Source IP (Host)
* Username
* Indication of whether a password was used or not.

At least, Rails 6 returns this detailed exception.

### Actual behavior

Currently, the error message lacks these details, which makes it difficult to identify the exact issue. The message is somewhat redundant and can be misleading, especially when the problem might be due to incorrectly-provisioned databases.

The issue with incorrectly-provisioned databases could happen when adding new databases to existing systems in a production environment or when setting up a local environment with multiple databases with complex settings.

The current error message is:

```
ActiveRecord::DatabaseConnectionError (There is an issue connecting to your database with your username/password, username: .

Please check your database configuration to ensure the username/password are valid.
):
```


### System configuration

**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50129,Fix: Preloader should no longer overwrites built records,MaxLap,activerecord,2023-11-22T02:54:25Z,2023-12-13T22:29:01Z,2023-12-07T22:21:27Z,"In short, this change makes it so that using ActiveRecord::Associations::Preloader doesn't overwrite / lose state.

Right now, here is how things are:

```ruby
post = Post.last
post.comments.build
ActiveRecord::Associations::Preloader.new(records: [post], associations: :comment)
post.comments.to_a
```

The last line would not return the comment that was built. This is unintuitive and was changed in Rails 6.0. In Rails 5.2, this code behave as one would expect and still contains the persisted comment.

Considering that the commit that introduced this behaviors was to fix a problem that, it turns out, was also fixed differently, this change is just a partial revert of said commit with no ill effects.

It would be nice to backport this to at least 7.1 since it's so new. The code hasn't changed since Rails 7.0 so that would be easy too. I'm willing to do it if there is openness to such a backport.

### Investigation

In effect, this PR undoes changes made in https://github.com/rails/rails/commit/5f9e05048d409b9c3fb35a3620fe361fb03dd4e1 which introduced this bug.

Here is the story:

Starting after Rails 5.2

(Bug1) If you have 2 distinct but equal records given to preload, only one of them will receive the preloaded records.

(BugfixA) https://github.com/rails/rails/commit/9897f50ae77d5880bac292ac35873490669fc107
This fixes Bug1. The #uniq was removing the extra distinct but equal records, so only one of them would receive sub-records in its associations.
But there is a new bug!

(Bug2) If you have a single instance twice in the records to preload on, it receives the sub-records multiple time.

(BugfixB): https://github.com/rails/rails/commit/5f9e05048d409b9c3fb35a3620fe361fb03dd4e1
This fixes Bug2. And is what I am reverting.
Instead of adding the preloaded data to what was already in the association, the received data overwrites the data that was already there.
But there is a new bug!

(Bug3) If you had unpersisted data in the association being preloaded (using #build for example), it will be gone!
This is the bug this PR wants to fix.

(BugfixC) https://github.com/rails/rails/commit/a4b20e4ffcdc9726f210c4e828927768497d7392
**This fix doesn't resolve Bug3.** 
But it also fixes Bug2, and does it more correctly. It does a better `#uniq` than the one that was removed by BugfixA due to Bug1.
Unlike BugfixB, BuugfixC doesn't introduce Bug3.

So at this point, it's safe to undo BugfixB, at least the part that causes Bug3:

* Bug2 doesn't get brought back because BugfixC also fixes it.

This is what this PR is doing, while also adding tests.

I'd like to thank `git bisect` for making this investigation so much simpler than it would have been otherwise xD"
50128,Removing not used fixtures from ActionPack test suite,thiagopradi,actionpack,2023-11-22T02:02:12Z,2023-11-25T09:34:53Z,,"### Motivation / Background

This Pull Request has been created because I was looking at the ActionPack test suite and found a few fixture files that are not used anymore.


### Checklist

Before submitting the PR make sure the following are checked:

* [ X ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ N/A ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ N/A ] Tests are added or updated if you fix a bug or add a feature.
* [ N/A ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50127,ActiveJob: removing redundant if statement on Arguments serialization of String,jarenas9539,activejob,2023-11-21T23:06:38Z,2023-11-22T11:36:25Z,2023-11-22T11:36:25Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

After changes from #50090 and #50122, a redundant if statement remains on Arguments#serialize on String related classes serialization. A comment related to this was added [here](https://github.com/rails/rails/pull/50122#issuecomment-1820901068).

### Detail

When the begin/rescue statement was added to the else clause the if clause began to be scoped on the rescue clause as StringSerializer is not defined and will throw SerializationError (same current behaviour as other String subclasses without defined serializers). As if clause and rescue clause share same result, the if clause started to be redundant.

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50126,Engine broken after upgrading from Rails 7.1.1 to Rails 7.1.2,jamesw,engines,2023-11-21T08:47:35Z,2023-12-14T17:47:01Z,2023-12-14T17:47:01Z,"### Expected behavior
The following engine works in all rails 7 versions up to and including rails 7.1.1 with Ruby 3.2.2 prior to the latest 7.1.2 release

Running my test suite causes the following error
```

[1] guard(main)> 
08:41:19 - INFO - Run all
08:41:19 - INFO - Running all specs

An error occurred while loading ./spec/models/ccs_cms/admin_dashboard/administrator_spec.rb.
Failure/Error: require File.expand_path('../test/dummy/config/environment', __dir__)

Zeitwerk::NameError:
  expected file /home/jamie/Development/rails/comtech/r7/ccs_cms/engines/admin_dashboard/app/overrides/add_admin_dashboard_link_to_core_header.rb to define constant AddAdminDashboardLinkToCoreHeader, but didn't
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/callbacks.rb:33:in `on_file_autoloaded'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:31:in `require'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/polyglot-0.3.5/lib/polyglot.rb:65:in `require'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/deface-1.9.0/lib/deface/environment.rb:91:in `block (2 levels) in enumerate_and_load'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/deface-1.9.0/lib/deface/environment.rb:90:in `block in enumerate_and_load'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/deface-1.9.0/lib/deface/environment.rb:85:in `each'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/deface-1.9.0/lib/deface/environment.rb:85:in `enumerate_and_load'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/deface-1.9.0/lib/deface/environment.rb:79:in `load_overrides'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/deface-1.9.0/lib/deface/environment.rb:62:in `block in load_all'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/deface-1.9.0/lib/deface/environment.rb:60:in `each'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/deface-1.9.0/lib/deface/environment.rb:60:in `load_all'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/deface-1.9.0/lib/deface/railtie.rb:12:in `activate'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:448:in `instance_exec'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:448:in `block in make_lambda'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:202:in `block (2 levels) in halting'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:707:in `block (2 levels) in default_terminator'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:706:in `catch'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:706:in `block in default_terminator'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:203:in `block in halting'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:598:in `block in invoke_before'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:598:in `each'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:598:in `invoke_before'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/callbacks.rb:109:in `run_callbacks'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/reloader.rb:96:in `prepare!'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/application/finisher.rb:74:in `block in <module:Finisher>'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:32:in `instance_exec'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:32:in `run'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:61:in `block in run_initializers'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:60:in `run_initializers'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/application.rb:423:in `initialize!'
# ./test/dummy/config/environment.rb:5:in `<top (required)>'
# ./spec/rails_helper.rb:4:in `<top (required)>'
# ./spec/models/ccs_cms/admin_dashboard/administrator_spec.rb:1:in `<top (required)>'`

```
```
An error occurred while loading ./spec/requests/ccs_cms/admin_dashboard/dashboard_spec.rb.
Failure/Error: require File.expand_path('../test/dummy/config/environment', __dir__)

FrozenError:
  can't modify frozen Array: [""/home/jamie/Development/rails/comtech/r7/ccs_cms/engines/admin_dashboard/test/dummy/test/mailers/previews""]
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/actionmailer-7.1.2/lib/action_mailer/railtie.rb:83:in `concat'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/actionmailer-7.1.2/lib/action_mailer/railtie.rb:83:in `block in <class:Railtie>'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:32:in `instance_exec'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:32:in `run'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:61:in `block in run_initializers'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `each'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `tsort_each_child'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `each'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `tsort_each_child'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `each'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `tsort_each_child'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:60:in `run_initializers'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/application.rb:423:in `initialize!'
# ./test/dummy/config/environment.rb:5:in `<top (required)>'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/polyglot-0.3.5/lib/polyglot.rb:65:in `require'
# ./spec/rails_helper.rb:4:in `<top (required)>'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/polyglot-0.3.5/lib/polyglot.rb:65:in `require'
# ./spec/requests/ccs_cms/admin_dashboard/dashboard_spec.rb:1:in `<top (required)>'

An error occurred while loading ./spec/system/ccs_cms/admin_dashboard/ccs_cms_admin_dashboard_administrators_spec.rb.
Failure/Error: require File.expand_path('../test/dummy/config/environment', __dir__)

FrozenError:
  can't modify frozen Array: [""/home/jamie/Development/rails/comtech/r7/ccs_cms/engines/admin_dashboard/test/dummy/test/mailers/previews""]
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/actionmailer-7.1.2/lib/action_mailer/railtie.rb:83:in `concat'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/actionmailer-7.1.2/lib/action_mailer/railtie.rb:83:in `block in <class:Railtie>'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:32:in `instance_exec'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:32:in `run'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:61:in `block in run_initializers'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `each'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `tsort_each_child'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `each'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `tsort_each_child'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `each'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:50:in `tsort_each_child'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/initializable.rb:60:in `run_initializers'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/application.rb:423:in `initialize!'
# ./test/dummy/config/environment.rb:5:in `<top (required)>'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/polyglot-0.3.5/lib/polyglot.rb:65:in `require'
# ./spec/rails_helper.rb:4:in `<top (required)>'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
# /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/polyglot-0.3.5/lib/polyglot.rb:65:in `require'
# ./spec/system/ccs_cms/admin_dashboard/ccs_cms_admin_dashboard_administrators_spec.rb:1:in `<top (required)>'
No examples found.
```
`
Also running the Rails Puma Server causes the following error

```
`rails s
/home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails.rb:51:in `configuration': undefined method `config' for nil:NilClass (NoMethodError)

      application.config
                 ^^^^^^^
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/factory_bot_rails-6.4.0/lib/factory_bot_rails/railtie.rb:25:in `block in <class:Railtie>'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/lazy_load_hooks.rb:97:in `class_eval'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/lazy_load_hooks.rb:97:in `block in execute_hook'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/lazy_load_hooks.rb:87:in `with_execution_control'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/lazy_load_hooks.rb:92:in `execute_hook'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/lazy_load_hooks.rb:78:in `block in run_load_hooks'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/lazy_load_hooks.rb:77:in `each'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activesupport-7.1.2/lib/active_support/lazy_load_hooks.rb:77:in `run_load_hooks'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activerecord-7.1.2/lib/active_record/base.rb:338:in `<module:ActiveRecord>'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/activerecord-7.1.2/lib/active_record/base.rb:15:in `<top (required)>'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/database_cleaner-active_record-2.1.0/lib/database_cleaner/active_record/truncation.rb:2:in `<top (required)>'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/database_cleaner-active_record-2.1.0/lib/database_cleaner/active_record.rb:4:in `<top (required)>'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/database_cleaner-active_record-2.1.0/lib/database_cleaner-active_record.rb:1:in `<top (required)>'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/bundler-2.4.19/lib/bundler/runtime.rb:60:in `block (2 levels) in require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/bundler-2.4.19/lib/bundler/runtime.rb:55:in `each'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/bundler-2.4.19/lib/bundler/runtime.rb:55:in `block in require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/bundler-2.4.19/lib/bundler/runtime.rb:44:in `each'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/bundler-2.4.19/lib/bundler/runtime.rb:44:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/bundler-2.4.19/lib/bundler.rb:187:in `require'
	from /home/jamie/Development/rails/comtech/r7/ccs_cms/engines/admin_dashboard/test/dummy/config/application.rb:7:in `<top (required)>'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/commands/server/server_command.rb:139:in `block in perform'
	from <internal:kernel>:90:in `tap'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/commands/server/server_command.rb:136:in `perform'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/thor-1.3.0/lib/thor/command.rb:28:in `run'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/thor-1.3.0/lib/thor/invocation.rb:127:in `invoke_command'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/command/base.rb:178:in `invoke_command'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/thor-1.3.0/lib/thor.rb:527:in `dispatch'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/command/base.rb:73:in `perform'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/command.rb:71:in `block in invoke'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/command.rb:149:in `with_argv'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/command.rb:69:in `invoke'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/commands.rb:18:in `<top (required)>'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/railties-7.1.2/lib/rails/engine/commands.rb:9:in `<top (required)>'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from <internal:/home/jamie/.rvm/rubies/ruby-3.2.2/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from /home/jamie/.rvm/gems/ruby-3.2.2@cms_admin_dashboard/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
	from bin/rails:14:in `<main>'
```
`
Please see Stackoverflow question https://stackoverflow.com/questions/77516314/how-to-tell-zeitwerk-to-ignore-overrides-folder-in-a-rails-engine?noredirect=1#comment136665688_77516314 in which Xavier @xfn is helping in comments

I will try generating a new engine from scratch to see what happens rather than updating and post back with steps taken or conclusions I come up with

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50125,Error Message Degradation for Connection-Related Error Especially for Production Environment,aeroastro,"activerecord, attached PR, With reproduction steps",2023-11-21T06:02:52Z,2023-11-29T10:26:17Z,2023-11-28T19:45:14Z,"### Steps to reproduce

#### Gemfile

```ruby
source ""https://rubygems.org""

git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

gem ""rails"", github: ""rails/rails"", branch: ""main""
gem ""mysql2""
```

#### Test Code

```ruby
require ""active_record""
require ""action_controller/railtie""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Base.establish_connection(adapter: ""mysql2"", host: ""127.0.0.1"", port: ""3306"")

class Post < ActiveRecord::Base
  has_many :comments
end

class TestApp < Rails::Application
  config.root = __dir__
  config.hosts << ""example.org""
  config.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger

  routes.draw do
    get ""/"" => ""test#index""
  end
end

class TestController < ActionController::Base
  include Rails.application.routes.url_helpers

  def index
    @post = Post.all.to_a
    render plain: ""Home""
  end
end

require ""minitest/autorun""
require ""rack/test""

class BugTest < Minitest::Test
  include Rack::Test::Methods

  def test_returns_success
    get ""/""
    assert last_response.ok?
  end

  private
    def app
      Rails.application
    end
end
```

### Expected behavior

There should be informative, accurate, and concise error message.

```
ActiveRecord::ConnectionNotEstablished (Can't connect to MySQL server on '127.0.0.1:3306' (61)):
```

### Actual behavior

The error message has been degraded.

```
ActiveRecord::DatabaseConnectionError (There is an issue connecting with your hostname: 127.0.0.1.

Please check your database configuration and ensure there is a valid connection to your database.
):
```

* `ActiveRecord::ConnectionNotEstablished` is more understandable than `ActiveRecord::DatabaseConnectionError` because the former implies when the connection issue happens.
* For a running production environment, almost all the causes of connection error are not the invalid database configuration, but due to the network error, disorder of a specific database instance (hardware or software), and other temporal failures. The error message of `Please check your database configuration` interferes with troubleshooting incidents on production environment.
* The message has lost port information, which makes it impossible to investigate which database is causing error when hosting multiple databases on different ports.
* The error code `61` has been lost.

### System configuration

**Rails version**: 7.2.0.alpha

**Ruby version**: 3.2.2
"
50124,Introduce `field_label` form helper,seanpdoyle,actionview,2023-11-21T03:58:55Z,2023-12-02T20:12:20Z,,"### Motivation / Background

Generate the text-only label contents for a field:

```ruby
  # Helper method
  field_label :article, :title    # => ""Title""

  # FormBuilder method
  form_with model: @article do |form|
    form.label :title             # => ""<label for=\""article_title\"">Title</label>""
    form.field_label :title       # => ""Title""
  end
```

This can be useful when utilizing `[aria-label]` in rare circumstances where rendering a `<label>` element for a form control isn't feasible.

Prior to this commit, invoking `label_tag` or `form.label` was the only way to automatically determine a form control's (internationalized!) label text without providing call-site specific content (via a String argument or a block). Even with that automatic determination, the text content is nested within a `<label>` element.

### Detail

With this change, views can separate the content text from the element for circumstances where they need to craft their own `[aria-label]` text based on the out-of-the-box translated label text:

```erb
<%= form_with model: @post do |form| %>
  <%# a typical <label> + <input> combination %>
  <%= form.label :title %>
  <%= form.text_field :title %>

  <%# an <input> with [aria-label] text %>
  <%= form.text_field :title, aria: { label: form.field_label(:title) } %>

  <%# a typical <label> + <input> combination with additional [aria-label] text %>
  <%= form.label :title %>
  <%= form.text_field :title, aria: {
        label: ""#{form.field_label(:title)}, and then some additional text to be announced""
      } %>
<% end %>
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50123,Add error connection tests for various db adapters,jenshenny,activerecord,2023-11-21T01:16:33Z,2023-11-21T13:11:37Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background
From https://github.com/rails/rails/pull/48111#issuecomment-1531952728, it was found that there is currently no test coverage for the types of errors when connecting to the db.
<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

### Detail
This was done by modifying the database configs with invalid host/user/database. As a result, this PR also fixes the error code of `ER_DBACCESS_DENIED_ERROR` to return a no database error instead of a username error.

**Looking into the CI error 👀 


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50122,Restore ActiveJob serialization for String subclasses without custom serializers,octokatherine,activejob,2023-11-20T23:38:26Z,2023-12-02T09:03:05Z,2023-11-20T23:56:44Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because https://github.com/rails/rails/pull/50090 broke serialization of String subclasses that don't have serializers, like ActiveSupport::SafeBuffer. 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50121,Create an :active_record_connection_adapters load hook,andrewn617,"activerecord, docs",2023-11-20T20:38:34Z,2023-11-20T23:07:16Z,2023-11-20T23:07:16Z,"### Motivation / Background

https://github.com/rails/rails/commit/009c7e74117690f0dbe200188a929b345c9306c1 introduced a new API for registering connection adapters. This week, I began implementing this in my app. We have some custom adapters. So my thought was to register than in an `:active_record` load hook. However, I realized that some load hooks might try to establish a connection (for example [here in Rails](https://github.com/rails/rails/blob/c00932949f4bb6e12847b957abdb920440cea325/activerecord/lib/active_record/railtie.rb#L309)), so that introduces an element of order dependence. If the hook registering my custom adapter is not executed first, then establishing a connection will raise an exception. Of course, you can make it work with a `before` but it seems brittle to me.

### Detail

This Pull Request introduces a new `active_record_connection_adapters` load hook that can be used to register adapters. I run the load hook immediately after `ConnectionAdapters` is defined and the default adapters are registered. That way they will always be registered by the time we begin running the `active_record` hooks, which are liable to establish connections.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50120,switch to dynamic database problem,zgid123,,2023-11-20T20:17:29Z,2023-11-25T09:16:57Z,2023-11-20T20:37:58Z,"### Steps to reproduce

Hi, I am using rails 7.1 and ruby 3.2.2. My business is multi-tenant: database per tenant. And also, the `db_config` must be fetched from other server, so I cannot use [this approach](https://guides.rubyonrails.org/active_record_multiple_databases.html#setting-up-your-application).

I created a class

```rb
class DatabaseService
  # rubocop:disable Style/ClassVars
  @@db_config = ActiveRecord::Base.connection_db_config.configuration_hash.deep_dup.freeze
  # rubocop:enable Style/ClassVars

  class << self
    def root_db_config
      @@db_config
    end

    def switch_database(db_config:)
      ActiveRecord::Base.establish_connection(db_config)

      return unless block_given?

      yield
    ensure
      # ActiveRecord::Base.close if block_given?
      # switch_root_database if block_given?
      ActiveRecord::Base.connection_pool.release_connection if block_given?
    end

    def switch_root_database
      ActiveRecord::Base.establish_connection(@@db_config)
    end
  end
end
```

Also, I created a middleware

```rb
# frozen_string_literal: true

class SwitchTenantDatabaseMiddleware
  def initialize(app)
    @app = app
  end

  def call(env)
    request = Rack::Request.new(env)

    domain = URI(request.referer).host
    tenant = get_tenant_by_domain(domain:)
    db_config = tenant['db_config'].symbolize_keys

    ActiveRecord::Base.connection_pool.with_connection do
      DatabaseService.switch_database(
        db_config: DatabaseService.root_db_config.merge(
          database: db_config[:database],
          username: db_config[:username],
          password: db_config[:password]
        )
      )
    end

    @app.call(env)
  ensure
    # DatabaseService.switch_root_database
    # ActiveRecord::Base.connection_pool.release_connection
    ActiveRecord::Base.connection.close
  end
end
```

### Expected behavior

Can connect to the database

### Actual behavior

Raise error `ActiveRecord::ConnectionNotEstablished: No connection pool for 'ActiveRecord::Base' found`

### System configuration
**Rails version**: 7.1.1

**Ruby version**: 3.2.2

### Debug

- The ensure block is for trying to remove the connection from the pool to fix the bug, but it seems useless

- I log the `ActiveRecord::Base.connection_pool.stat` result to terminal, the result from the request before the one that raises error above is `{:size=>15, :connections=>3, :busy=>0, :dead=>0, :idle=>3, :waiting=>0, :checkout_timeout=>5.0}`, the size is still greater than the `connections`, but I still not understand why it still raise the error.

- When error, I checked this file `active_record/connection_adapters/abstract/connection_handler.rb`, the result of `connection_name_to_pool_manager[connection_name]` is `#<ActiveRecord::ConnectionAdapters::PoolManager:0x0000000108a4c910 @role_to_shard_mapping={:writing=>{}}>`, while the success one, the `:writing` will be an object instead of empty object.

Here the full backtrace

```
# [
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activerecord/lib/active_record/connection_handling.rb:283:in `connection_pool'"",
#   ""app/services/database_service.rb:53:in `switch_database'"",
#   ""app/middlewares/switch_tenant_database_middleware.rb:22:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/etag.rb:29:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/conditional_get.rb:31:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/head.rb:15:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activerecord/lib/active_record/migration.rb:654:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/callbacks.rb:101:in `run_callbacks'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/callbacks.rb:28:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/executor.rb:14:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/actionable_exceptions.rb:16:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/sentry-rails-5.13.0/lib/sentry/rails/rescued_exception_interceptor.rb:9:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/debug_exceptions.rb:29:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/sentry-ruby-5.13.0/lib/sentry/rack/capture_exceptions.rb:13:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/railties/lib/rails/rack/logger.rb:37:in `call_app'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/railties/lib/rails/rack/logger.rb:24:in `block in call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/tagged_logging.rb:135:in `block in tagged'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/tagged_logging.rb:39:in `tagged'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/tagged_logging.rb:135:in `tagged'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/broadcast_logger.rb:240:in `method_missing'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/railties/lib/rails/rack/logger.rb:24:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/remote_ip.rb:92:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/request_id.rb:28:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/runtime.rb:24:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/activesupport/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/server_timing.rb:59:in `block in call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/server_timing.rb:24:in `collect_events'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/server_timing.rb:58:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/executor.rb:14:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/static.rb:25:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.8/lib/rack/sendfile.rb:114:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/actionpack/lib/action_dispatch/middleware/host_authorization.rb:141:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-cors-2.0.1/lib/rack/cors.rb:102:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/bundler/gems/rails-1fafbef7096e/railties/lib/rails/engine.rb:529:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/configuration.rb:272:in `call'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/request.rb:100:in `block in handle_request'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/thread_pool.rb:378:in `with_force_shutdown'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/request.rb:99:in `handle_request'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/server.rb:443:in `process_client'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/server.rb:241:in `block in run'"",
#   "".rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.0/lib/puma/thread_pool.rb:155:in `block in spawn_thread'""
# ]
```"
50119,Rebuild Action Text's JavaScript,jonathanhefner,actiontext,2023-11-20T18:23:41Z,2023-11-20T18:51:37Z,2023-11-20T18:51:36Z,"Follow-up to #48290.

This incorporates recent changes from Active Storage's JavaScript.

---

This fixes [Action Text's `JavascriptPackageTest`](https://github.com/rails/rails/blob/0ad26f789013f3e07d7dc453303a8240a4da0d38/actiontext/test/javascript_package_test.rb) when running locally:

```console
$ cd actiontext
$ bin/test test/javascript_package_test.rb

Failure:
JavascriptPackageTest#test_compiled_code_is_in_sync_with_source_code [rails/actiontext/test/javascript_package_test.rb:14]:
#<Proc:0x00007fcf3ebea0e0 rails/actiontext/test/javascript_package_test.rb:14 (lambda)> changed.
--- expected
+++ actual
@@ -753,9 +753,9 @@
     }
   }
   function didClick(event) {
-    const {target: target} = event;
-    if ((target.tagName == \""INPUT\"" || target.tagName == \""BUTTON\"") && target.type == \""submit\"" && target.form) {
-      submitButtonsByForm.set(target.form, target);
+    const submitButton = event.target.closest(\"":is(button, input)[type='submit']\"");
+    if (submitButton && submitButton.form) {
+      submitButtonsByForm.set(submitButton.form, submitButton);
     }
   }
   function didSubmitForm(event) {
@@ -1633,9 +1633,9 @@
 }

 function didClick(event) {
-  const {target: target} = event;
-  if ((target.tagName == \""INPUT\"" || target.tagName == \""BUTTON\"") && target.type == \""submit\"" && target.form) {
-    submitButtonsByForm.set(target.form, target);
+  const submitButton = event.target.closest(\"":is(button, input)[type='submit']\"");
+  if (submitButton && submitButton.form) {
+    submitButtonsByForm.set(submitButton.form, submitButton);
   }
 }
```

It's unclear why this test does not currently fail in CI for `main`, though [it did fail](https://buildkite.com/rails/rails/builds/102112#018bedd3-812b-4d84-a585-5c8311273f8c/1089-1220) for `7-1-stable` when #48290 was backported.
"
50118,prepend option is no longer supported for after_commit callbacks in Rails 7.1 defaults,jrochkind,"activerecord, With reproduction steps",2023-11-20T18:17:01Z,2023-11-20T22:49:17Z,,"As a result of #46992 (@tenderlove), with new Rails 7.1 default `run_after_transaction_callbacks_in_order_defined` true, `prepend` option is _no longer supported_ for any transactional callbacks.  (after_commit)

We can see how in the presence of this configugration `prepend:true` is hardcoded, and then passed to `set_options_for_callbacks!` method such that it will over-ride any `prepend` arg otherwise passed in, for all `after_commit` and `after_rollback` ""transactional"" callbacks. 

https://github.com/rails/rails/pull/46992/files#diff-8dd03b7fb9b72a3bd338955c1de75652d60453230c6544f3851c0d0b3746a675R270-R275

The effect of this is that prior to `run_after_transaction_callbacks_in_order_defined`, you could use `prepend:true` to alter callback order when definining new transactional callbacks. 

But after #46992, not only is the default order reversed, but **you can no longer use prepend:true to alter the order**. 

This is not mentioned in the #46992 or any related docs/changenotes.  `prepend: true` is still mentioned as an option for `before_destroy` in [guide](https://github.com/rails/rails/blob/0ad26f789013f3e07d7dc453303a8240a4da0d38/guides/source/active_record_callbacks.md#destroying-an-object) as well as [header docs on ActiveRecord::Callbacks](https://github.com/rails/rails/blob/0ad26f789013f3e07d7dc453303a8240a4da0d38/activerecord/lib/active_record/callbacks.rb#L198-L205)

`prepend:true` is mentioned in passing in the [docs for run_after_transaction_callbacks_in_order_defined](https://github.com/rails/rails/blob/0ad26f789013f3e07d7dc453303a8240a4da0d38/guides/source/configuring.md#configactive_recordrun_after_transaction_callbacks_in_order_defined), but I guess it's not clear if it's meant to apply to `after_commit` there?



1. If it is intended that `prepend` option is removed from after_commit and transactional callbacks when `run_after_transaction_callbacks_in_order_defined` is set,  i guess the docs should mention this?

2. If it is a bug that `prepend:true ` no longer works for after_commit callbacks in Rail 7.1 with default config, then we could fix it in a PR?
"
50117,Rails 7.0.5 and later: form_with no longer accepts single hash argument,ekortright-ewtn,"actionview, With reproduction steps",2023-11-20T17:47:18Z,2023-11-20T21:49:24Z,2023-11-20T21:49:12Z,"My application calls `form_with` by passing to it the hash returned by a method that figures out which parameters need to be set depending on the context.  This used to work until Rails 7.0.4 inclusive.  Starting with Rails 7.0.5, `form_with` accepts key-value pairs passed directly, but throws an error if a hash with the desired parameters is passed to it.

I don't see any mention of form_with changes in the 7.0.5 release notes, so I suspect this may be a bug.

### Steps to reproduce

In Rails console:

```ruby
include ActionView::Helpers::FormHelper
form_with({ url: 'foo' })
```

### Expected behavior
Should return a buffer with a `<form>` tag.  This is what happens if you use key-value pairs directly:
`form_with(url: 'foo')`

### Actual behavior
Throws an exception: `'form_with': wrong number of arguments (given 1, expected 0) (ArgumentError)`

### System configuration
**Rails version**: 7.0.5 and later (have not tested 7.1)

**Ruby version**: 3.2.1
"
50116,just changed the read me,STEMatHomeUK,,2023-11-20T16:12:19Z,2023-11-20T16:13:00Z,2023-11-20T16:13:00Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

This Pull Request changes [REPLACE ME]

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50115,Update interceptors and observers registering examples,bear-in-mind,docs,2023-11-20T16:03:13Z,2023-11-27T09:14:07Z,,"### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Using the current `Interceptor` and `Observer` registering examples trigger deprecation warnings. The ones I proposed instead are similar to what is recommended in the `ActionMailer` [configuration guide](https://guides.rubyonrails.org/configuring.html#config-action-mailer-observers).

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50114,Add `application/merge-patch+json` as subtype for `application/json`,kemuridama,actionpack,2023-11-20T15:07:53Z,2023-11-20T15:07:57Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

[RFC 7396 JSON Merge Patch](https://www.ietf.org/rfc/rfc7396.txt) defines the JSON merge patch format and processing rules and registers `application/merge-patch+json` as additional MIME media type. It expects the same encoding of `application/json`.

### Detail

This PR proposes adding `application/merge-patch+json` as an additional recognized MIME subtype for `application/json`.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50113,Removed Performance/UnfreezeString cop,akhilgkrishnan,,2023-11-20T15:06:53Z,2023-11-20T15:21:17Z,2023-11-20T15:09:40Z,"### Motivation / Background

As per the discussion in https://github.com/rails/rails/pull/50100#issuecomment-1818973562 , decided to disable the `Performance/UnfreezeString` cop, as it makes  some confusion in the code. 
After the change in https://github.com/ruby/ruby/pull/8952, `String#dup` also having the same performance of `String#+@`.

### Detail

This Pull Request disable the ` Performance/UnfreezeString` cop from rubocop.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc: @byroot 
"
50112,Allow the MySQL adapter implementation to be configured in an Active Record config,kmcphillips,"activerecord, railties",2023-11-20T12:29:19Z,2023-11-29T01:40:02Z,2023-11-29T01:40:02Z,"Continuation of #50064 and #50093 with @byroot 

This adds the `mysql://` or `adapter: mysql` alias to be put in DB config or deploy ENV, and then allows the application to be configured to either use `mysql2` or `trilogy` as the concrete adapter. This separates environment config (ie. ""this app uses MySQL and here are the credentials"") from adapter choice and implementation (ie. ""connect to the database from the app using trilogy or mysql2""). It also provides an easy test/upgrade path without changing the env.

It makes `mysql` the default adapter generated for new rails apps that use MySQL, but it keeps `mysql2` as the default adapter used. It's a different approach than #50110 but here it's easily swappable as to which generates by default.


### Is `alias` really necessary?

I proposed adding this once before and discussed it with Matthew and we decided to remove it. https://github.com/rails/rails/pull/50093#issuecomment-1817531767

I've added it back here for a couple reasons.

The `ActiveRecord::ConnectionAdapters` does not expose what the class name and path are for registered adapters. Since you cannot query that you cannot retrieve those two values to add an alias, so you'd need to be repeating those configuration strings in wherever you add the alias through `register()`. 

It would also mean we would need to somewhere (like in an initializer) define a switch statement like:

```ruby
case ActiveRecord.mysql_adapter
when :trilogy, ""trilogy""
  ActiveRecord::ConnectionAdapters.register(""mysql"", ""ActiveRecord::ConnectionAdapters::TrilogyAdapter"", ""active_record/connection_adapters/trilogy_adapter"")
when :mysql2, ""mysql2""
  ActiveRecord::ConnectionAdapters.register(""mysql2"", ""ActiveRecord::ConnectionAdapters::Mysql2Adapter"", ""active_record/connection_adapters/mysql2_adapter"")
when nil
  # noop
else
  raise ""uknown adapter etc.""
end
```

This reimplements some of the connection lookup validation and the location/class names of the adapters. It is very much not **DRY**.  It is also not **open/closed** as this is extremely not open for extension as we cannot easily add to the list. I could not write code that I was happy with without this.


### Why is the default `mysql_adapter` config `nil`?

I'm a little unsure on what the best behaviour is here. If we set `ActiveRecord.mysql_adapter = :trilogy` or whatever as default, the initializer attempts to alias to it no matter what. So if the app is using Postgres or SQLite it will reference the MySQL adapter(s) that are not loaded and raise.

But because the aliasing must be done before the adapters are loaded, _we do not know if we are using MySQL in the app or not_. So, the default is `nil` and it does nothing, but the _default generated app adds the config_. That makes it easy to update later.


### Should the default be `:trilogy`?

I don't know! That's a Rails vision/direction question. Easy to change that here (or soon after)."
50111,ActiveRecord is not cleaning duplicated values on `where(foo: my_array)`,mrcasals,"activerecord, With reproduction steps",2023-11-20T10:21:02Z,2023-11-20T13:48:33Z,2023-11-20T12:25:50Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem 'activerecord', '~> 7.1.0'
  gem 'sqlite3'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
  end
end

class Post < ActiveRecord::Base
end

class BugTest < Minitest::Test
  def test_association_stuff
    post = Post.create!
    post2 = Post.create!
    collection = Post.where(id: ([post.id, post2.id] * 10))

    sql = collection.to_sql
    sql_ids = sql.split(' IN ').last

    assert_equal 2, collection.count
    assert_equal 2, actual_sql_ids
  end
end
```

### Expected behavior
When calling `Post.where(id: my_ids)`, it's not cleaning up repeated values. Asking for the same value multiple times has not effect to the DB, but we can avoid sending extra bytes and parsing that extra information.

### Actual behavior
ActiveRecord is sending the values as they are, without cleaning duplicated values.

### System configuration
**Rails version**: Can confirm this happens at least since Rails 7.0.6

**Ruby version**: Ruby 3.2.2
"
50110,Make Trilogy the default MySQL adapter,casperisfine,"activerecord, railties",2023-11-20T09:34:12Z,2023-11-20T20:10:07Z,2023-11-20T14:34:32Z,"Trilogy has been production tested on very large Rails applications in the wild, is much easier to install than `mysql2` as it doesn't depend on `libmysqlclient`, and generally is better maintained and performs better.

Addtionally it has always bothered me that you need to pass a `mysql2://` or `trilogy://` `DATABASE_URL` as it's a leaky abstraction, the `DATABASE_URL` should specify the protocol, not the client used.

`rails new --database=mysql` will now generate an application using Trilogy.

`DATABASE_URL=mysql://host` will now use the trilogy adapter.

This has no impact on existing applications.

FYI: @kmcphillips @adrianna-chang-shopify "
50109,Restore detailed error message for excessive password length,cabgfx,activemodel,2023-11-20T00:33:04Z,2023-11-21T08:24:05Z,,"### Motivation / Background

This Pull Request addresses a regression introduced in PR #47708, where the error message for an excessively long password was changed to a less informative ""is too long"". Previously, the error message included a dynamic count of the maximum allowed characters (e.g., ""is too long (maximum is %{count} characters)""). This regression affects the user experience by providing less guidance on how to correct the input. Restoring the informative error message helps developers and users understand the validation constraints.

### Detail

This Pull Request makes the following changes:
- It restores the `count` parameter in the error message for a password exceeding the maximum length, ensuring users receive a detailed response (""is too long (maximum is %{count} characters)"").
- It reverts the validation error symbol from `:password_too_long` back to `:too_long` within `activemodel/lib/active_model/secure_password.rb`.
- It removes the `:password_too_long` key from `activemodel/lib/active_model/locale/en.yml` to align with the use of the `:too_long` symbol.

### Additional information

The change is straightforward and restores functionality to its previous state as of v7.1.0.beta1, ensuring that the error message for password length validation is both informative and accurate.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why.
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

---

This PR was co-authored by ChatGPT."
50108,Change disjunction to conjunction in suggestion,jonathanhefner,activerecord,2023-11-19T21:51:06Z,2023-11-19T22:02:57Z,2023-11-19T22:02:57Z,"Follow-up to #50104.

The error conditions are that the adapter is spelled incorrectly __or__ the necessary gem isn't in the `Gemfile`.  Therefore, to fix the error, the user must ensure that the adapter is spelled correctly __and__ the gem is in the `Gemfile`.

This commit also adds `require ""active_support/core_ext/string/filters""`, which technically should be included for `String#squish`.
"
50107,[ActiveStorage] Fix Non tracked variants not working with `ActiveStorage::Representations::ProxyController`,chaadow,activestorage,2023-11-19T19:08:39Z,2023-11-20T21:38:36Z,2023-11-20T20:46:00Z,"cc @jonathanhefner 





<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because `ActiveStorage::Variant`, the class used to handle untracked variants, is lacking some methods to make it compliant with
`ActiveStorage::Representations::ProxyController#send_blob_stream`.

### Detail

This commit fixes the proxying of untracked variants by adding the missing methods to `ActiveStorage::Preview` by extracting a new module `ActiveStorage::Blob::Servable`  from `ActiveStorage::Blob` containing all the necessary methods used for serving/proxying blobs, then including this module inside `ActiveStorage::Variant`

### Additional information

Related to #50098 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50106,Removing not used fixtures from ActionMailer test suite,thiagopradi,actionmailer,2023-11-19T18:21:23Z,2023-11-20T12:24:27Z,2023-11-20T12:24:27Z,"### Motivation / Background

This Pull Request has been created because I was looking at the ActionMailer test suite and found a few fixture files that are not used anymore. 

### Checklist

Before submitting the PR make sure the following are checked:

* [ X ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ N/A ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ N/A ] Tests are added or updated if you fix a bug or add a feature.
* [ N/A ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50105,Fix `run_generator` to work for generators calling other generators,fatkodima,railties,2023-11-19T16:46:25Z,2023-11-19T17:59:42Z,,"Fixes #50099 (see there for the description).

Tested locally - works as expected, but I am struggling to write a test for this."
50104,Improve `AdapterNotFound` error message,joshuay03,"activerecord, railties",2023-11-19T10:32:37Z,2023-11-19T23:45:00Z,2023-11-19T15:05:28Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Actions https://github.com/rails/rails/pull/50064#discussion_r1395563932

### Detail

1. Updates the error message when `AdapterNotFound` is raised (in the case where either the configured adapter name is incorrect or a custom adapter gem has not been included in the gemfile) to include a list of available (currently registered) adapters. It also rewords the message a bit to make it very clear that the issue could only be one of these two things.
2. Updates the first case when `LoadError` is raised (when the path registered by a custom adapter gem is incorrect) to make it clear that the issue is an implementation error, rather than incorrect app-level configuration.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

I originally considered adding a `#corrections` to `AdapterNotFound` which utilises `DidYouMean::SpellChecker`. But I think it's much better to simply list all the available adapters for the user.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50103,Fix `run_generator` to work for generators calling other generators,fatkodima,railties,2023-11-19T09:45:33Z,2023-11-19T16:44:01Z,2023-11-19T10:49:01Z,"Fixes #50099 (see there for the description).

Tested locally - works as expected. I am struggling to write a test for this. But since this change already was caught by existing tests and the change to the test code was needed, maybe it is not even necessary."
50102,Flash.now is not working while rendering !!!,gupt-mudit,,2023-11-19T06:43:17Z,2023-11-19T07:39:54Z,2023-11-19T07:39:54Z,"### Steps to reproduce
Go to
https://guides.rubyonrails.org/action_controller_overview.html#the-flash
there if you see in 5.2.1 ,its about flash. now ,For example, if the create action fails to save a resource, and you render the new template directly, that's not going to result in a new request, but you may still want to display a message using the flash. To do this, you can use flash.now in the same way you use the normal flash:
![image](https://github.com/rails/rails/assets/100841274/0d74c66e-1cd9-4572-947e-fd44eb962e51)


### Expected behavior
lets take in seesion_controller.rb
i made 
 def create
        user = User.find_by(email: params[:session][:email].downcase)
        if user && user.authenticate(params[:session][:password])
          session[:user_id] = user.id
          flash[:notice] = ""Logged in successfully""
          redirect_to user
        else
          flash.now[:alert] = ""There was something wrong with your login details""
           render :new, status: :unprocessable_entity 
        end
    end
    and in _messages.html.erb
    i made
    <% flash.each do |name, msg| %>
    <div class="" mb-0 alert alert-<%= name == ""notice"" ? ""success"" : ""danger"" %> alert-dismissible fade show"" role=""alert"">
      <%= msg %>
      <button type=""button"" class=""close"" data-bs-dismiss=""alert"" aria-label=""Close"">
        <span aria-hidden=""true"">&times;</span>
      </button>
    </div>
  <% end %> 
<!-- Tell us what should happen -->
so output should be while rendering 
![image](https://github.com/rails/rails/assets/100841274/c5f246c1-52f5-4c00-b4f7-69c414620228)

but in actually alert message is not coming


### System configuration
**Rails version>=7

"
50101,Document docker related files in app folder structure [ci skip],akhilgkrishnan,docs,2023-11-19T05:02:31Z,2023-11-19T16:54:40Z,2023-11-19T16:16:52Z,"### Detail

This Pull Request adds the docker related file documentation in the rails app folder structure guide.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50100,Updated String#dup with Performance::UnfreezeString,akhilgkrishnan,"actionpack, activerecord, activesupport",2023-11-19T03:51:32Z,2023-11-20T15:08:59Z,2023-11-20T15:08:54Z,"### Motivation / Background
Ref: https://www.rubydoc.info/gems/rubocop/0.61.1/RuboCop/Cop/Performance/UnfreezeString
Follow up: https://github.com/rails/rails/pull/32971

### Detail

This Pull Request used unary plus operator to unfreeze a string literal instead of `String#dup`

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50099,Rails Generator Tests do not work with `generate` commands,tcannonfodder,"railties, attached PR, With reproduction steps",2023-11-18T23:43:39Z,2023-11-20T09:58:56Z,,"### Steps to reproduce

_Example repository here: https://github.com/practical-computer/generator-test-failure_. Relevant files:
* https://github.com/practical-computer/generator-test-failure/blob/main/lib/generators/example/example_generator.rb
* https://github.com/practical-computer/generator-test-failure/blob/main/test/lib/generators/example_generator_test.rb

When creating a new Generator from a fresh Rails install, the generated test case does not run. Instead, the following error is returned:

```
$ bundle exec rails test                                              
Running 1 tests in a single process (parallelization threshold is 50)
Run options: --seed 42824

# Running:

/.../.rbenv/versions/3.0.2/bin/ruby: No such file or directory -- bin/rails (LoadError)
```

Command run to generate the generator:
```shell
 bundle exec rails generate generator example
      create  lib/generators/example
      create  lib/generators/example/example_generator.rb
      create  lib/generators/example/USAGE
      create  lib/generators/example/templates
      invoke  test_unit
      create    test/lib/generators/example_generator_test.rb
```

The generator body:
```ruby
class ExampleGenerator < Rails::Generators::NamedBase
  source_root File.expand_path(""templates"", __dir__)

  def run_test_generator
    generate ""generator"", ""test""
  end
end
```

### Expected behavior
The generator tests should work

### Actual behavior
The tests error out

### System configuration
**Rails version**: Rails 7.1.2


**Ruby version**: `ruby 3.0.2p107 (2021-07-07 revision 0db68f0233) [arm64-darwin21]`

### Research

@garrettdimon has been extremely helpful with debugging this and pulled the following links together:
* The test suites worked back in Rails 6.1.7.6: https://github.com/rails/rails/commit/ad0f0e69800db62a9bb198d427bb531fbd07e027
* https://github.com/rails/rails/commit/ad0f0e69800db62a9bb198d427bb531fbd07e027#diff-a8b5ef8dfdaadc4ed11dae1c4e6762bb26a76f90e53e9fec87c9e92f14a83e0fL343-R343"
50098,[ActiveStorage] Fix `ActiveStorage:Representations::ProxyController` returning the wrong preview,chaadow,activestorage,2023-11-18T22:02:31Z,2023-11-25T11:52:51Z,2023-11-21T22:23:38Z,"Fixes #47071
<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added) behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->
When a blob is a representable of kind `previewable`, the preview
image that's being proxied is always the original preview image,
discarding completely the `variation_key` param passed in the request.



As all 3 classes are now 100% interchangeable, we can deprecate the use
of `Representable#image`. Users of this class won't need to call this
method as it's become obsolete. and in case of `Preview#image`
erroneous.

### Detail

This PR fixes this by editing `Preview` and `VariantWithRecord` to
have full synchronized API with `Variant`. this will then allow the
ProxyController to not call `representable#image` but `representable`
instead.

 As all 3 classes are now 100% interchangeable, we can deprecate the use
    of `Representable#image`. Users of this class won't need to call this
    method as it's become obsolete. and in case of `Preview#image`
    erroneous.


### Additional information
I've added missing failing tests that would have caught this issue.

It wasn't straightforward to fix. Because of some mismatches between `AS::Variant` / `AS::VariantWithRecord` / `AS::Preview` 
For example `AS::Variant` adds a lot of redundant methods like `#filename`simply because `AS::Variant#image` returns `self` ( and **not** a AS blob). and any methods that are used with `send_blob_stream`

Here are the the lines that call `@representation.image`
https://github.com/rails/rails/blob/438cad462638b02210fc48b700c29dcd0428a8b7/activestorage/app/controllers/active_storage/representations/proxy_controller.rb#L14-L16

which I changed to call `send_blob_stream @representation` getting rid of `#image` and we can deprecate it in a future PR

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50097,Skip activesupport event processing tests on platforms w/o highres clock,matoro,activesupport,2023-11-18T17:52:57Z,2023-11-26T02:33:31Z,,"On platforms without a high-resolution (nanosecond) clock, it is likely that the processing of an event will take less time than one complete clock resolution cycle, which means that the start and end times will be equal and the duration zero, failing these tests.  Usually these issues are fixed by adding a sleep of equal to one clock resolution cycle, but that is not applicable here since the duration measurement occurs in the actual library code rather than the test code, so just skip these tests on such platforms.  Also tested and confirmed that the tests are not skipped under normal platforms with a highres clock.
"
50096,[Active Record] Using as_json with include giving undesirable results,maniSHarma7575,"activerecord, With reproduction steps",2023-11-18T15:41:12Z,2023-11-18T17:31:15Z,2023-11-18T17:06:24Z,"### Steps to reproduce
In the script below, I am filtering out the post IDs along with comment IDs.

```
Post.joins(:comments).where(comments: { id: [1, 2] }).as_json(only: :id, include: { comments: { only: :id } })
```
And here, we are filtering out the comments with IDs 1 and 2. So, in the final output, it should only include the comments with IDs 1 and 2. However, post 1 also has comments with IDs 4 and 6, and post 2 also has a comment with ID 5. 

So all the comments are getting include no matter whether there is filtering in comment or not?

Is this the desired behavior?

### Reproduce script

```ruby
# frozen_string_literal: true

require ""bundler/inline""
require ""pry""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.integer :title
    t.text :description
  end

  create_table :comments, force: true do |t|
    t.text :description
    t.integer :post_id
  end
end

class Post < ActiveRecord::Base
  has_many :comments
end

class Comment < ActiveRecord::Base
  belongs_to :post
end

class BugTest < Minitest::Test
  def test_association_stuff
    post1 = Post.create!(title: 'Post1', description: 'Post description 1')
    post2 = Post.create!(title: 'Post2', description: 'Post description 2')
    post3 = Post.create!(title: 'Post3', description: 'Post description 3')
    post1.comments << Comment.create!(description: 'Comment 1')
    post2.comments << Comment.create!(description: 'Comment 2')
    post3.comments << Comment.create!(description: 'Comment 3')
    post1.comments << Comment.create!(description: 'Comment 1.1')
    post2.comments << Comment.create!(description: 'Comment 2.1')
    post1.comments << Comment.create!(description: 'Comment 1.2')

    posts = Post.joins(:comments).where(comments: { id: [1, 2] }).as_json(only: :id, include: { comments: { only: :id } })
    assert_equal posts, [{""id""=>1, ""comments""=>[{""id""=>1}]}, {""id""=>2, ""comments""=>[{""id""=>2}]}]
  end
end

```


### Expected behavior
Below test case should pass

### Actual behavior
```
F

Failure:
BugTest#test_association_stuff [as_json.rb:56]:
--- expected
+++ actual
@@ -1 +1 @@
-[{""id""=>1, ""comments""=>[{""id""=>1}, {""id""=>4}, {""id""=>6}]}, {""id""=>2, ""comments""=>[{""id""=>2}, {""id""=>5}]}]
+[{""id""=>1, ""comments""=>[{""id""=>1}]}, {""id""=>2, ""comments""=>[{""id""=>2}]}]



bin/rails test as_json.rb:44



Finished in 0.035173s, 28.4309 runs/s, 28.4309 assertions/s.
1 runs, 1 assertions, 1 failures, 0 errors, 0 skips
```

### System configuration
**Rails version**: 7.2.0.alpha

**Ruby version**: 3.2.2
"
50095,"Proposal - Output the migration code, after the generate has run.",alterisian,,2023-11-18T14:35:59Z,2023-11-18T15:24:03Z,2023-11-18T14:40:38Z,"### Motivation
So that we help developers even more, when writing migrations, output the migration code after it has been run.
Since the migration code is typically small, we could output it straight after the migration has run, and save you going to open that file, if it has successfully added the field (in this instance). 

### Steps to reproduce

```ruby
rails g migration AddCodeToCountries code:string
```

### Expected behavior
      invoke  active_record
      create    db/migrate/20231118142828_add_code_to_countries.rb
      code     
class AddCodeToCountries < ActiveRecord::Migration[7.0]
  def change
    add_column :countries, :code, :string
  end
end

### Actual behavior
      invoke  active_record
      create    db/migrate/20231118142828_add_code_to_countries.rb

more db/migrate/20231118142828_add_code_to_countries.rb

class AddCodeToCountries < ActiveRecord::Migration[7.0]
  def change
    add_column :countries, :code, :string
  end
end

### System configuration
**Rails version**: 7

**Ruby version**: 3.1
"
50094,normalizer accepts symbols that the normalized object responds to,rockwellll,activerecord,2023-11-18T14:34:53Z,2023-11-19T13:24:57Z,2023-11-19T13:24:56Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

The newly introduced `ActiveRecord::Normalization` module allows to normalize attributes, it can receive any callable object that responds to `call`. While we were using it, we found that we were calling a method that already _exists_ on the normalized object, and hence can simply be ""forwarded"" to the object. 

To our surprise, it threw errors when we tried to supply the normalization to do as a symbol to be forwarded to the normalized object using `Object#send`. 

I found it not Rails-y to do something like the following,

```ruby
class Post
  normalizes :body, with: -> body { body.squish }
end
```

When you can simply supply the `squish` as a symbol that then gets send to the object. With this proposed change, we can slim the code above into a more Ruby-ish and subsequently, Rails-ish way. 

```ruby
class Post
  normalizes :body, with: :squish
end
```

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because the current implementation of the `normalizes` method does not support a Symbol as an argument that gets forwarded to the object to normalize. 

### Detail

This Pull Request changes the `ActiveRecord::Normalization::NormalizedValueType`'s `normalizer:` argument to accept a Symbol that sends to the normalized object via `Object#public_send`. 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50093,Delay validation of registered Active Record adapters and allow aliasing of adapters,kmcphillips,"activerecord, railties",2023-11-18T13:32:01Z,2023-11-19T15:42:50Z,2023-11-19T15:42:50Z,"Next step in https://github.com/rails/rails/pull/50064 by @byroot.

## Problem

We want to allow aliasing of DB adapters by name. The end state here is to allow `mysql` to be mapped to either `trilogy` or `mysql2` at an application level. And allow others to do the same.

The main refactor here is moving the adapter validation out of `DatabaseConfig.new` and into a `#validate` method that is called later.

The reason for this refactor is that currently database configs are loaded by the framework so early that there isn't really a way to hook into registering/aliasing adapters before the configs are loaded and validated with `.new`:

https://github.com/rails/rails/blob/438cad462638b02210fc48b700c29dcd0428a8b7/activerecord/lib/active_record/railtie.rb#L305-L307

The adapter needs to be registered with Active Record after it is loaded, but before configs are loaded, and because `on_load(:active_record)` hooks are executed in order the above one is always executed before anything in the rails app, including the initializers. I even tried adding a `:active_record_register_adapters` hook, but again the app initializers aren't run before this fires.


## Solution

As @matthewd suggested, extract validation into a method on `DatabaseConfig`. This has the added bonus of allowing the config subclasses further specialize validation.

Also adds a method which I will use in the next step to `alias(""trilogy"", as: ""mysql"")`.


### Reproduction steps

I have validated this in a new rails app, by naming the ""sqlite3"" adapter ""potato"", and the app will run with the following steps:

```
$ ../rails/railties/exe/rails new example --dev --skip-asset-pipeline --skip-javascript --skip-hotwire --skip-test
```
```
$ sed -i 's/adapter: sqlite3/adapter: potato/' config/database.yml
```
```
$ bin/rails environment
bin/rails aborted!
ActiveRecord::AdapterNotFound: database configuration specifies nonexistent 'potato' adapter. Ensure that the adapter is spelled correctly in config/database.yml and that you've added the necessary adapter gem to your Gemfile. (ActiveRecord::AdapterNotFound)
```
```
$ echo 'ActiveSupport.on_load(:active_record) { ActiveRecord::ConnectionAdapters.register(""potato"", ""ActiveRecord::ConnectionAdapters::SQLite3Adapter"", ""active_record/connection_adapters/sqlite3_adapter"") }' > config/initializers/active_record_adapters.rb
```
```
$ bin/rails environment
$ bin/rails runner 'puts ""#{ ActiveRecord::Base.connection.pool.db_config.adapter } / #{ ActiveRecord::Base.connection.adapter_name }""'
potato / SQLite
```"
50092,ActiveStorage only checks public schema to load files instead of tenant schema,hrithvik123,,2023-11-18T00:26:03Z,2023-11-18T09:24:49Z,2023-11-18T09:24:49Z,"I am trying to setup multi-tenancy in my Spree commerce app (ruby 3.2.0, rails 7) using Apartment (ros-apartment fork to be specific). 

When I upload files, they get added to the correct tenant schema and I can see it in ActiveStorage::Blob . But when I try to access the images, it only looks at ActiveStorage::Blob in public schema instead of tenant schema and ends up throwing 404 error ->

`ActiveRecord::RecordNotFound in ActiveStorage::Representations::ProxyController#show
Couldn't find ActiveStorage::Blob with 'id'=1`

Do I need to setup something else for it to work correctly ?

I have added the `config.middleware.use Apartment::Elevators::Subdomain` to my application.rb .

Any help is appreciated, thanks."
50091,Add `query_cache_clearing_strategy` to customize how the query cache clears,jcalvert,"activerecord, docs",2023-11-18T00:18:15Z,2023-11-28T10:33:44Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

I work on a rather large, robust Rails application that has some custom multi-database code. The default behavior of `ActiveRecord::Base.clear_query_caches_for_current_thread` for cache clearing can result in a substantial number of cache misses between unrelated shards, (noted in #40622) - similarly as the methods passed to `dirties_query_cache` in `ActiveRecord::ConnectionAdapters::QueryCache` has changed (such as in #48061) this again changes the number of query cache hits, which can result in performance regressions. In both cases, the default behavior absolutely makes sense, however it is difficult to carve out an exception. In order to do so this requires making `clear_query_caches_for_current_thread` a noop and then overwriting the target methods on the adapter classes.

Rather than being prescriptive, this pull request maintains the current behavior and gives a more straightforward way for applications to modify the existing cache clearing behavior instead of monkey patching core Active Record classes. 

### Detail

- Add `ActiveRecord#query_cache_clearing_strategy` as a singleton accessor that defaults to a `Proc` that just calls `ActiveRecord::Base.clear_query_caches_for_current_thread` 
- Replace the call to `ActiveRecord::Base.clear_query_caches_for_current_thread` in the inline method definition in `ActiveRecord::ConnectionAdapters::QueryCache` to call the new `Proc` with the arguments of `self`, the `method_name` and args. 
- Update the configuration guide to document this.

### Additional information

Since there is no change to the behavior as is, I have no additional tests added.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50090,Fix ActiveJob arguments serialization to correctly serialize String subclasses having custom serializers,fatkodima,activejob,2023-11-17T23:50:07Z,2023-12-02T09:02:59Z,2023-11-18T00:09:28Z,"Fixes #50076 (look there for a lengthy discussion).

Should we also raise a deprecation warning for String subclasses without custom serializers? It worked before this change.

cc @byroot "
50089,Fix rails console to work with `DATABASE_URL` for PostgreSQL,fatkodima,"activerecord, railties",2023-11-17T22:56:23Z,2023-11-17T23:41:31Z,2023-11-17T23:25:18Z,"Fixes #50085.

The regression was introduced via https://github.com/rails/rails/pull/50064 (cc @byroot).

Previously, `ActiveRecord::Base` was loaded before any specific database adapters, see https://github.com/rails/rails/pull/50064/files#diff-d1e52309089a1c9135a7d1bb82bdfdf7410d7d7a294013e16e71f0171154eefbL324-L334 so everything worked fine. 
But with the refactoring, this is no longer the case and adapters are loaded first, see https://github.com/rails/rails/pull/50064/files#diff-4c1143afc3627a3ced3bd6f78f37888b98424844732e771c3cb323ef50415bb0R24-R37"
50088,Fix small typographical errors in `#find_or_create_by` docs [ci skip],conradbeach,activerecord,2023-11-17T20:52:40Z,2023-11-17T23:05:05Z,2023-11-17T21:00:07Z,
50087,No error messages in development after update from 7.0 to 7.1,joshfester,third party issue,2023-11-17T18:45:47Z,2023-11-25T02:40:41Z,2023-11-17T20:32:17Z,"### Steps to reproduce
I was on rails 7.0.8 and updated to 7.1.2. After the update, I no longer see errors in the console. It will just say ""Completed 500 Internal Server Error"" and render the error page you'd normally see in production. 

### Expected behavior
See errors with a stack trace in the console and on the rendered page

### Actual behavior
No errors, looks like it's in production

### System configuration
**Rails version**: 7.1.2

**Ruby version**:

Puma version: 6.4.0
web-console version: 4.2.1

When I start up the dev server, it says ""Rails 7.1.2 application starting in development"", and running Rails.env outputs ""development"". Puma and web-console are both the latest version, same as before the update to 7.1.

I ran `rails app:update` and even tried letting it overwrite my application.rb and development.rb. With the fresh development.rb, I get an error telling me to add my domain to config.hosts. The error shows in the console and I see the development error page. After I add `config.hosts << ""my-domain.com:3000""`, then I stop seeing console errors and start seeing the production error page.

When I revert back to 7.0.8 the issue is gone. I tried a fresh project with `rails new` and added the config.hosts line, and that works as it should on rails 7.1.2. So this must be an issue specific to my codebase.

I can confirm `config.consider_all_requests_local = true`. When I run `request.local?` it always returns false. But it returned false even before this issue started. 

Maybe the wrong place to ask, but what else could cause this? Where else could I look?

Update: I tried curl'ing from localhost. `request.local?` returns true, but the issue persists. I tried removing the config.hosts line and curl'ing, same issue. Also tried: 
- changing the config to `config.hosts.clear`
- explicitly setting `config.log_level = :debug` 
- running `rails db:reset`
- changing to `config.load_defaults 7.0`
"
50086,Remove top level keys in `database.yml` that do not map to valid Rails environments,kmcphillips,railties,2023-11-17T18:05:38Z,2023-11-18T13:15:40Z,2023-11-18T11:02:11Z,"**(This is a work in progress)**

## Problem

As described in #50075 (related to https://github.com/rails/rails/pull/50064), `#database_configuration` in the rails config, in in cases where it reads from `database.yml`, loads _all top level_ keys in the file and treats each one like an env:
https://github.com/rails/rails/blob/e5d3d782b6c89d382688b7e580a563e96bb874a4/railties/lib/rails/application/configuration.rb#L429-L434

The problem with this can even be seen with the default `database.yml` generated with `rails new`:

```yaml
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch(""RAILS_MAX_THREADS"") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: storage/development.sqlite3

test:
  <<: *default
  database: storage/test.sqlite3

production:
  <<: *default
  database: storage/production.sqlite3
```
Generates:
```ruby
{""default""=>{""adapter""=>""sqlite3"", ""pool""=>5, ""timeout""=>5000},
 ""development""=>{""adapter""=>""sqlite3"", ""pool""=>5, ""timeout""=>5000, ""database""=>""storage/development.sqlite3""},
 ""test""=>{""adapter""=>""sqlite3"", ""pool""=>5, ""timeout""=>5000, ""database""=>""storage/test.sqlite3""},
 ""production""=>{""adapter""=>""sqlite3"", ""pool""=>5, ""timeout""=>5000, ""database""=>""storage/production.sqlite3""}}
```

Here we see the `default:` key using YAML node anchors to reduce duplication and compose the env values. This puts all kinds of useless and incorrect fragments into the database config that should really be just a YAML implementation concern. We have some large `database.yml` files at Shopify that compose many YAML keys into env configs and so this method returns a dozen or more useless key fragments and labels them all as envs.

It also causes issues with the fact that each key is parsed into a `ActiveRecord::DatabaseConfigurations::HashConfig` object in which there is logic and validation that should not be applied to these fragments.


## Solution

Ideally we remove anything that isn't a valid env, and do essentially:

```ruby
database_config = YAML.load(database_yaml_file).select { |k,v| [""production"", ""test"", ""development""].include?(k) }.to_h
```

Unfortunately we don't really have a concept of what envs are configured and exist.

The **first commit** here proposed an implementation of that. It looks in `config/environments/*.rb` and uses that as the list of envs. Which is probably pretty correct, and would allow for people to add envs like `staging` or whatever, even if it's not super supported by rails. I'm not sure about edge cases this won't cover or engine compatibility or whatever.

The **second commit is incomplete** but proposes how to filter out any top level keys that are invalid. This works, but I'm not sure if it's too aggressive an approach. It breaks a ton of tests, and I think that's just a function of generating skeleton rails apps for fast testing, but maybe not. I'm not going to get the build green till we're confident with the approach.


### Questions

_1) What is the usecase for exposing all database envs in `Rails::Application::Configuration#database_configuration`?_ 

I don't assume it's common to connect to production manually from in dev or whatever. Versus just exposing the current env. I'm not sure if it's useful and why it exists.

_2) Can we change `Rails::Application::Configuration#database_configuration` to expose just the current env?_

Another approach we could do entirely is essentially doing:

```ruby
database_config = YAML.load(database_yaml_file).select { |k,v| k == Rails.env }.to_h
```

Then we don't have to allow-list and know what all envs are, when we just know to pick _only the current env_ and ignore the rest. Then we also don't need `configured_environments` at all and just the current `Rails.env`. But again, I'm not sure who is using this and why.

They're assigned to `configurations` and are available to lookup by env [here](https://github.com/rails/rails/blob/e5d3d782b6c89d382688b7e580a563e96bb874a4/activerecord/lib/active_record/database_configurations.rb#L26), so this would be a limiting and breaking change.

cc @byroot "
50085,Passing DATABASE_URL env var breaks loading,andrewyoo,"activerecord, With reproduction steps",2023-11-17T17:45:01Z,2023-11-17T23:51:31Z,2023-11-17T23:25:19Z,"Current rails main doesn't like when DATABASE_URL env is passed in.

### Steps to reproduce
```
rails new test_rails_edge --edge --database=postgresql
rails db:create
# update Gemfile to point to 'main' with `gem 'rails', github: 'rails/rails', branch: 'main'`
bundle
DATABASE_URL=postgres://localhost/test_rails_edge_development bin/rails c
```

results in:
```
.../activerecord/lib/active_record/dynamic_matchers.rb:22:in `method_missing': undefined method `time_zone_aware_types' for ActiveRecord::Base:Class (NoMethodError)
```

### Expected behavior
Should load rails console using DATABASE_URL env for database

### Actual behavior
receives error `undefined method 'time_zone_aware_types' for ActiveRecord::Base:Class (NoMethodError)`

### System configuration
**Rails version**:
rails main b7d9654f981120b3f525533c3e35f544d3d3171e

**Ruby version**:
3.2.2"
50084,Fixed the dependencies of actiontext according to current actionstora…,adityapandit17,actiontext,2023-11-17T17:32:37Z,2023-11-18T21:19:38Z,,"This PR update the actiontext dependency to match with the latest dependent active storage version 
"
50083,`find_by` and `where` should cache association,yoshiyoshiharu,activerecord,2023-11-17T11:27:37Z,2023-11-18T02:51:35Z,2023-11-18T02:38:57Z,"I think fetched model using `find_by` or `where` by associated model should cache their associations.
If there are reasons why they does not cache, please let me know.

### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
class User < ApplicationRecord
  has_one :user_profile
end

class UserProfile < ApplicationRecord
  belongs_to :user
end
```

```ruby
user = User.first # Run SQL
user_profile = UserProfile.find_by(user: user) # Run SQL
user_profile.user # Run SQL, but I think this SQL should not run.
```

### Expected behavior
<!-- Tell us what should happen -->
`user_profile = UserProfile.find_by(user: user)` should cache `user` association.
`user_profile.user` should not run SQL.
### Actual behavior
<!-- Tell us what happens instead -->
`user_profile = UserProfile.find_by(user: user)` does not cache `user` association.
`user_profile.user` run SQL.

### System configuration
**Rails version**: 3.2.2

**Ruby version**: 7.1.1
"
50082,[ActiveStorage] Discard unrepresentable blobs while preprocessing,chaadow,activestorage,2023-11-17T09:26:51Z,2023-11-17T22:44:33Z,2023-11-17T22:33:45Z,"cc @jonathanhefner 
<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Preprocessing ""unrepresentable"" blobs (neither variabe, nor previewable) will result in a `ActiveStorage::UnrepresentableError`, which will retry following `ActiveJob::Base` default retry logic.

### Detail

This PR discards any blob that's not representable to cleanup the job adapter queue.
![image](https://github.com/rails/rails/assets/1371733/34e40f60-d2ad-462f-ad58-e75de6550d34)



### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50081,fix typo in production initializer generator,maxnotarangelo,"railties, activestorage, actionmailbox, actiontext",2023-11-16T22:29:21Z,2023-11-16T23:12:28Z,2023-11-16T23:10:53Z,"Fixes a small typo in the `production.rb` generator, as well as in a few test files.
"
50080,`credentials:edit` with no explicit environment set now defaults to `development`,rspeicher,,2023-11-16T21:31:15Z,2023-11-16T21:56:06Z,2023-11-16T21:53:37Z,"### Steps to reproduce

Prior to Rails 7.1, if I were to run `rails credentials:edit` with no environment argument, it would edit the ""global"" `config/credentials.yml.enc` file.

I had a case where I wanted to override some of those credentials _only in the `development` environment_, so I would run `rails credentials:edit -e development`, and that all worked fine.

Now on Rails 7.1.2, omitting the environment argument seems to use the environment of whatever's running the command, which defaults to `development`, and now edits the environment-specific configuration rather than the ""global"" one.

From what I can tell, there is no longer a way to edit the non-specific environment credentials.

Now, the argument could be made that I'm doing this backwards and that local environments should have sane default values and only `production` should override them, and while I don't disagree, this was already in place and working prior to 7.1.

### Expected behavior

`credentials:edit` with no environment argument should edit the `config/credentials.yml.enc` file, as was the previous behavior.

### Actual behavior

`credentials:edit` with no environment argument edits the `config/credentials/development.yml.enc` file.

### System configuration

**Rails version**: `7.1.2`

**Ruby version**: `ruby 3.2.1 (2023-02-08 revision 31819e82c8) [arm64-darwin22]`
"
50079,Arel nulls first/last implementation Mysql ,tttffff,activerecord,2023-11-16T21:13:53Z,2023-12-08T23:44:03Z,2023-12-08T23:44:02Z,"### Motivation / Background

Fixes #50078 

This Pull Request has been created because I needed to sort a column ASC with nulls last with a MySQL database and wanted to avoid using an SQL fragment to achieve this. I discovered that Arel supports this for all databases apart from MySQL. When investigating the MySQL implementation, I noticed inconsistencies with how it is implemented.

Originally, I was just aiming to make the functionality consistent, but then had a go at implementing the missing functionality.

### Detail

This Pull Request changes the implementation of `.nulls_first()` and `.nulls_last()` for MySQL databases. These methods now work as designed.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]` 
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50078,Arel - MySQL has inconsistent behavour when attempting to use ordering with nulls_first/nulls_last,tttffff,attached PR,2023-11-16T20:52:16Z,2023-12-08T23:44:04Z,2023-12-08T23:44:04Z,"#42245 introduces `.nulls_first()` and `.nulls_last()` for all databases apart from MySQL. The PR states that `.nulls_first()` has been implemented for MySQL and that it works as designed, this is not entirely correct.

Currently:
- When using `.asc.nulls_first()` it does work as designed (due to the rules of the engine)
- When using `.desc.nulls_first()` it orders nulls last without any indication of this.
- When using `.asc.nulls_last()` it raises `StatementInvalid` error.
- When using `.desc.nulls_last()` it raises `StatementInvalid` error.

Suggestions:
1. `.desc.nulls_last()` should also be no-op and work as designed (due to the rules of the engine) but `.desc.nulls_first()` and `.asc.nulls_last()` should both raise either `StatementInvalid` or another error.
2. All four should raise an error, this could be `StatementInvalid`, but something like `NotImplementedError` might be better.
3. Some sort of a fix where we can order nulls first/last for MySQL.

### Steps to reproduce
```sh
rails new anything --database=mysql --minimal && cd anything && \
bin/rails g model something name && bin/rails db:prepare && bin/rails c
```

```ruby
[nil, ""ZZZ"", ""AAA"", nil].each { |name| Something.create(name:) }
name_attribute = Something.arel_table[:name]
Something.order(name_attribute.asc.nulls_first).map(&:name) # => [nil, nil, ""AAA"", ""ZZZ""]
Something.order(name_attribute.desc.nulls_first).map(&:name) # => [""ZZZ"", ""AAA"", nil, nil]
Something.order(name_attribute.asc.nulls_last).map(&:name) # => raises ActiveRecord::StatementInvalid
Something.order(name_attribute.desc.nulls_last).map(&:name) # => raises ActiveRecord::StatementInvalid
```

### Expected behavior
- `Something.order(name_attribute.desc.nulls_first).map(&:name)` should either order nulls first or raise an error
- `Something.order(name_attribute.desc.nulls_last).map(&:name)` should provide no-op nulls_last + desc ordering, this would be consistent with `Something.order(name_attribute.asc.nulls_first).map(&:name)`

### Actual behavior
- `Something.order(name_attribute.desc.nulls_first).map(&:name)` orders nulls last desc
- `Something.order(name_attribute.desc.nulls_last).map(&:name)` raises an error

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.1.3
"
50077,after_commit callbacks order is not consistent with after_save for autosaved records,4ndv,,2023-11-16T20:31:21Z,2023-11-16T20:37:38Z,,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.string :title
  end

  create_table :comments, force: true do |t|
    t.integer :post_id
  end
end

class Post < ActiveRecord::Base
  has_many :comments

  after_commit do
    puts ""Post #{id} after_commit""
  end

  after_save do
    puts ""Post #{id} after_save""
  end
end

class Comment < ActiveRecord::Base
  belongs_to :post

  after_commit do
    puts ""Comment #{id} after_commit""
  end

  after_save do
    puts ""Comment #{id} after_save""
  end
end

Post.create(comments: [Comment.new, Comment.new])
```

Output:

```
Comment 1 after_save
Comment 2 after_save
Post 1 after_save
D, [2023-11-17T03:19:49.216443 #68692] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
Post 1 after_commit
Comment 1 after_commit
Comment 2 after_commit
```

### Expected behavior
`after_commit` callbacks are executed in the same order as `after_save`: related records first, then the saved record itself.

### Actual behavior
`after_commit` callbacks are first executed on the main object, then on the autosaved ones.

In our application we perform some work in both autosaved object's `after_commit` callbacks that requires them to be already persisted, and in the main object. The current order of callbacks can lead to unintentional hard to debug race conditions, if user is not aware of that behavior.

Not sure if it's a bug, but at least a clarification in the docs would be nice, like in #49831

### System configuration
**Rails version**: Rails 6.1.7.5, Rails 7.1.2, main branch as of time of submitting (949b4d1)

**Ruby version**: 3.1.2p20
"
50076,Incorrect serialization of `ActiveSupport::StringInquirer` instances ,viralpraxis,"activejob, With reproduction steps",2023-11-16T20:11:03Z,2023-11-18T00:09:29Z,2023-11-18T00:09:29Z,"### Steps to reproduce

Consider the following MRE:

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activejob"", ""~> 7.1.0""
  gem ""sidekiq"", ""~> 7.2.0""
end

require ""minitest/autorun""
require ""active_job""
require ""active_support/core_ext/string/inquiry""

class BuggyJob < ActiveJob::Base
  self.queue_adapter = :sidekiq

  def perform(argument)
    p argument
  end
end

class BuggyJobTest < ActiveJob::TestCase
  def test_stuff
    BuggyJob.perform_later(""paid"".inquiry)
    perform_enqueued_jobs
  end

  def queue_adapter_for_test
    ActiveJob::QueueAdapters::SidekiqAdapter.new
  end
end
```

Basically we pass an instance of `ActiveSupport::StringInquirer` to `.perform_later` (note that queue adapter is set to `sidekiq`), and I expect it to be serialized correctly. In fact, an exception occurs (I believe that's because of [this](https://github.com/sidekiq/sidekiq/issues/5246) sidekiq change.)

It happenes because here

https://github.com/rails/rails/blob/6b93fff8af32ef5e91f4ec3cfffb081d0553faf0/activejob/lib/active_job/arguments.rb#L74-L76

first comparsion (with `PERMITTED_TYPES`) passes because that's equivalent with

```ruby
[String].any? { ""foo"".inquiry.is_a? _1 }
true
```

Unfortunately, it cannot be bypassed ""in place"" (without monkeypatching) with custom AJ serializer (via `Rails.application.config.active_job.custom_serializers << ` API) because checking against String subclass passes, so fallback for custom serializer doesn't happen.


### Expected behavior
I expect an instance of `ActiveSupport::StringInquirer` to be serialized and serialized correctly.

Serialization should be as easy as

```ruby
class StringInquirerSerializer < ObjectSerializer # :nodoc:
  def serialize(argument)
    super(""value"" => argument.to_s)
  end

  def deserialize(argument)
    argument[""value""].inquiry
  end

  private
    def klass
      ActiveSupport::StringInquirer
    end
end
```

so I don't see why this custom serializer (with taking into account the issue I mentioned above) wouldn't work. 

### Actual behavior
```
  1) Error:
BuggyJobTest#test_stuff:
ArgumentError: Job arguments to BuggyJob must be native JSON types, but ""paid"" is a ActiveSupport::StringInquirer.
See https://github.com/sidekiq/sidekiq/wiki/Best-Practices
To disable this error, add `Sidekiq.strict_args!(false)` to your initializer.


.../sidekiq-7.2.0/lib/sidekiq/job_util.rb:33:in `verify_json'
.../sidekiq-7.2.0/lib/sidekiq/client.rb:92:in `push'
.../sidekiq-7.2.0/lib/sidekiq/job.rb:361:in `client_push'
...
```


### System configuration
**Rails version**: 7.0.8, 7.1.2
**Ruby version**: 3.2.2
**Sidekiq version**: 7.2.0
"
50075,Do not attempt to resolve an `adapter_class` if no `adapter` is present,kmcphillips,activerecord,2023-11-16T20:03:51Z,2023-11-17T12:35:40Z,2023-11-17T12:35:40Z,"## Problem

In https://github.com/rails/rails/pull/50064 connection adapter initialization was moved into `register()` and adapters are resolved by name when instantiated.

When `ActiveRecord` is loaded in Rails it hits this hook:
https://github.com/rails/rails/blob/949b4d1482e41d2d8cfe1b7ed3a69df40a825225/activerecord/lib/active_record/railtie.rb#L304-L305

I believe this is an existing bug, or maybe just a quirk, but it loads the entire `database.yml` file and treats **every root level key as an env name**. You can see it by calling:
```ruby
Rails.application.config.database_configuration
=>
{""default""=>{""adapter""=>""sqlite3"", ""pool""=>5, ""timeout""=>5000},
 ""development""=>{""adapter""=>""sqlite3"", ""pool""=>5, ""timeout""=>5000, ""database""=>""storage/development.sqlite3""},
 ""test""=>{""adapter""=>""sqlite3"", ""pool""=>5, ""timeout""=>5000, ""database""=>""storage/test.sqlite3""},
 ""production""=>{""adapter""=>""sqlite3"", ""pool""=>5, ""timeout""=>5000, ""database""=>""storage/production.sqlite3""}}
```

This is the `database.yml` generated with `rails new` and the default settings. The file looks like this (comments removed):
```yaml
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch(""RAILS_MAX_THREADS"") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: storage/development.sqlite3

test:
  <<: *default
  database: storage/test.sqlite3

production:
  <<: *default
  database: storage/production.sqlite3
```

It's a common pattern, and indeed in the default, to use `<<` and named node anchors to remove duplication. But rails views all top level keys as configs, so as above `""default""` is now considered a database environment.

This doesn't seem right, but wasn't a problem before. Now though as rails walks these configs and each is instantiated into a `HashConfig` instance here:
https://github.com/rails/rails/blob/949b4d1482e41d2d8cfe1b7ed3a69df40a825225/activerecord/lib/active_record/database_configurations.rb#L278-L281

It attempts to resolve the adapter name to a class in this new `self.new` line:
https://github.com/rails/rails/blob/949b4d1482e41d2d8cfe1b7ed3a69df40a825225/activerecord/lib/active_record/database_configurations/database_config.rb#L13

In cases where a fragment or invalid key is encountered that does not define `adapter:`, the value is nil and then `ActiveRecord::ConnectionAdapters.resolve(nil)` is called and raises:

```
/rails/activerecord/lib/active_record/connection_adapters.rb:31:in `resolve': database configuration specifies nonexistent '' adapter. Ensure that the adapter is spelled correctly in config/database.yml and that you've added the necessary adapter gem to your Gemfile. (ActiveRecord::AdapterNotFound)
	from /rails/activerecord/lib/active_record/database_configurations/database_config.rb:24:in `adapter_class'
	from /rails/activerecord/lib/active_record/database_configurations/database_config.rb:13:in `new'
	from /rails/activerecord/lib/active_record/database_configurations.rb:69:in `block in <class:DatabaseConfigurations>'
	from /rails/activerecord/lib/active_record/database_configurations.rb:279:in `block in build_db_config_from_hash'
	from /rails/activerecord/lib/active_record/database_configurations.rb:278:in `reverse_each'
	from /rails/activerecord/lib/active_record/database_configurations.rb:278:in `build_db_config_from_hash'
	from /rails/activerecord/lib/active_record/database_configurations.rb:257:in `build_db_config_from_raw_config'
	from /rails/activerecord/lib/active_record/database_configurations.rb:208:in `block in build_configs'
	from /rails/activerecord/lib/active_record/database_configurations.rb:204:in `each'
	from /rails/activerecord/lib/active_record/database_configurations.rb:204:in `flat_map'
	from /rails/activerecord/lib/active_record/database_configurations.rb:204:in `build_configs'
	from /rails/activerecord/lib/active_record/database_configurations.rb:74:in `initialize'
	from /rails/activerecord/lib/active_record/core.rb:72:in `new'
	from /rails/activerecord/lib/active_record/core.rb:72:in `configurations='
	from /rails/activerecord/lib/active_record/railtie.rb:305:in `block (2 levels) in <class:Railtie>'
```

## Reproduction

* Generate a new app from on `main` `rails/railties/exe/rails new test1 --dev`.
* Edit `database.yml` to move the `adapter: sqlite3` key out of `default:` and into the environment entries like:
```
default: &default
  pool: <%= ENV.fetch(""RAILS_MAX_THREADS"") { 5 } %>
  timeout: 5000

development:
  <<: *default
  adapter: sqlite3
  database: storage/development.sqlite3
```
* Load any environment.

The configs now look like:
```
irb(main):001> Rails.application.config.database_configuration
=>
{""default""=>{""pool""=>5, ""timeout""=>5000},
 ""development""=>{""pool""=>5, ""timeout""=>5000, ""adapter""=>""sqlite3"", ""database""=>""storage/development.sqlite3""},
 ""test""=>{""pool""=>5, ""timeout""=>5000, ""adapter""=>""sqlite3"", ""database""=>""storage/test.sqlite3""},
 ""production""=>{""pool""=>5, ""timeout""=>5000, ""adapter""=>""sqlite3"", ""database""=>""storage/production.sqlite3""}}
```

And the `""default""` env has no adapter.


## Solution

This for now at least prevents validating adapters which are `nil` or blank. I don't think it's the permanent fix, but it prevents pretty bad breakages for anyone testing against head, whose `database.yml` files now cause errors.

The real solution is to maybe validate this `adapter_class` a bit later, as was suggested in the original PR.

I think it's worth considering how DB configs are parsed and loaded. I do not believe it is accurate to treat any top level key as an environment. Any key that does not match a configured rails env can maybe be skipped?

cc @byroot @matthewd @adrianna-chang-shopify "
50074,Please create an official Ruby on Rails Mastodon account,mlcohen,,2023-11-16T18:07:51Z,2023-11-17T18:53:42Z,2023-11-16T22:04:35Z,"This is a very humble request for someone on the Ruby on Rails team to please setup an official Ruby on Rails [Mastodon](https://joinmastodon.org/) account. Currently the Ruby on Rails team only has a [Twitter/X account](https://twitter.com/rails). There are many developers that use Ruby on Rails who would prefer to follow updates on Mastodon. This would be very easy to do. Just setup an account on [mastodon.social](https://mastodon.social/) or [fosstodon.org](https://fosstodon.org) (e.g. rubyonrails@mastodon.social, rubyonrails@fosstodon.org), get the account [verified](https://joinmastodon.org/verification), and add a prominent link to the account on the [RoR website](https://rubyonrails.org).

<img width=""1259"" alt=""Screenshot 2023-11-16 at 10 01 44 AM"" src=""https://github.com/rails/rails/assets/100445/470bff3b-e598-40f4-887b-c5c36e8be1ee"">

"
50073,Add base62 method to SecureRandom,valenciaj,activesupport,2023-11-16T16:00:20Z,2023-12-01T13:36:33Z,2023-12-01T13:36:33Z,Add base62 method to SecureRandom
50072,association with `query_constraints: []` always returns empty collection when included,doits,activerecord,2023-11-16T12:59:11Z,2023-11-17T14:40:12Z,,"### Steps to reproduce

With `query_constraints: []` one can create a custom query for an association, for example:

```ruby
class BodyPart < ActiveRecord::Base
end

class Human < ActiveRecord::Base
  has_many :body_parts, -> { where(for: 'human') }, query_constraints: []
end
```

This results in the following correct sql:

```ruby
Human.last.body_parts.to_sql
# => SELECT ""body_parts"".* FROM ""body_parts"" WHERE ""body_parts"".""for"" = 'human'
```

So far so good, but it always returns an empty collection when adding an `includes(:body_parts)`:

```ruby
Human.create!
BodyPart.create!(for: 'human')

Human.last.body_parts
# => [<instance of BodyPart>]
# correct

Human.includes(:body_parts).last.body_parts
# => []
# wrong
```

Is this a misuse of `query_constraints`? Should it break on `query_constraints: []`?

Or is this a bug including/eager_loading associations in case there are no query_constraints?

### Background

The idea is to have custom associations *that can be preloaded*. The example above is very simple and doesn't depend on the the attributes at all (so the result is the same for every human), but it could be more complicated with a custom `where` query string etc. that takes into account the attributes of the model.

### Test template

<details><summary>Template</summary>

```ruby
# frozen_string_literal: true

require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem 'rails', github: 'rails/rails', branch: 'main'
  gem 'sqlite3'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')
ActiveRecord::Base.logger = Logger.new($stdout)

ActiveRecord::Schema.define do
  create_table :humen, id: :uuid, force: true do |t|
  end

  create_table :body_parts, id: :uuid, force: true do |t|
    t.string :for
  end
end

class BodyPart < ActiveRecord::Base
end

class Human < ActiveRecord::Base
  has_many :body_parts, -> { where(for: 'human') }, query_constraints: []
end

class BugTest < Minitest::Test
  def test_without_include
    Human.delete_all
    BodyPart.delete_all

    body_part_for_human = BodyPart.create!(id: SecureRandom.uuid, for: :human)
    BodyPart.create!(id: SecureRandom.uuid, for: :dog)

    Human.create!(id: SecureRandom.uuid)

    assert Human.all.first.body_parts == [body_part_for_human]
  end

  def test_with_include
    Human.delete_all
    BodyPart.delete_all

    body_part_for_human = BodyPart.create!(id: SecureRandom.uuid, for: :human)
    BodyPart.create!(id: SecureRandom.uuid, for: :dog)

    Human.create!(id: SecureRandom.uuid)

    assert Human.all.includes(:body_parts).first.body_parts == [body_part_for_human]
  end
end
```
</details>

### References

might ref #50068

### System configuration
**Rails version**: main

**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) +YJIT [arm64-darwin22]
"
50071,Adjust instr. for Cache::Store#fetch_multi so writes are after reads,tgwizard,activesupport,2023-11-16T09:32:13Z,2023-11-17T17:37:40Z,2023-11-17T17:37:40Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

Before this PR, subscribing to `cache_*.active_support` notifications and performing Rails.cache#fetch_multi calls, it would seem as if the resulting write_multi operations happens _before_ the read_multi operations. That's not true, it's just a side-effect of the write_multi call being nested inside the instrumentation block for read_multi.

### Detail

This moves the write_multi out of the read_multi instrumentation block, to make the order of operations make sense.

### Additional information

I found this when writing a test helper to check what cache operations are performed in a test.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50070,link to internet archive for valgrind blog link in debugging_rails_ap…,p8,docs,2023-11-16T08:46:57Z,2023-11-16T08:55:42Z,2023-11-16T08:55:36Z,"…plications.md (#50042)

The linked URL to a blog post by Evan Weaver is not available anymore. This change uses an archived version from the internet archive."
50069,Fix `word_wrap` with empty string,jonathanhefner,actionview,2023-11-15T22:22:36Z,2023-11-15T22:36:02Z,2023-11-15T22:36:02Z,"Follow-up to #45948.

This fixes `word_wrap` to return an empty string instead of `nil` when given an empty string.

Fixes #50067.
"
50068,Inconsistency on preload and eager_load of relation with query_constraints or json column type,brunodccarvalho,"activerecord, With reproduction steps",2023-11-15T22:21:50Z,2023-11-18T19:38:40Z,,"### Steps to reproduce
```ruby
# frozen_string_literal: true
require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :authors, force: true do; end

  create_table :books, force: true do |t|
    # t.string :ref # (S)
    t.json :ref # (J)
  end
end

class Author < ActiveRecord::Base; end

class Book < ActiveRecord::Base
  # foreign key version (F)
  # has_one :author, foreign_key: :id, primary_key: :ref, dependent: nil, inverse_of: false

  # query constraints version (Q)
  has_one :author, query_constraints: %i[id], primary_key: %i[ref], dependent: nil, inverse_of: false
end

class BugTest < Minitest::Test
  def test_pre_eager_lazy_loads
    author = Author.create!(id: 2)
    book1 = Book.create!(id: 1, ref: ""1"")
    book2 = Book.create!(id: 2, ref: ""2"")

    assert_nil book1.author
    assert_equal author, book2.author
    assert_equal [nil, author], Book.eager_load(:author).order(:id).map(&:author) # 3
    assert_equal [nil, author], Book.preload(:author).order(:id).map(&:author) # 4
  end
end
```

### Expected behavior
There are four setups: _FS_, _FJ_, _QS_, _QJ_, with _FS_ being the simplest. I expect the test to yield the same result for all setups. Also assertions 2 and 4 should probably either both fail or both succeed.

### Actual behavior
_FS_ passes, _FJ_ fails assertion 3, _QS_ fails assertion 4, _QJ_ fails assertions 3 and 4.
In all cases because the `.author` association on the second book is loaded but set to nil.

The queries look alright and don't depend on the setup, and the refs are sent unquoted on the preload.

### System configuration
**Ruby version**: 3.2.1 31819e82c8 arm64-darwin22"
50067,`ActionView::Helpers::TextHelper#word_wrap` Now Returns `nil` on Empty String ,sshaw,,2023-11-15T21:55:28Z,2023-11-15T22:38:10Z,2023-11-15T22:36:03Z,"### Steps to reproduce
After #45948(?) `word_wrap` returns `nil` for an empty string. Prior to 7.1 it returned an empty string


```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_view/helpers/text_helper""
require ""minitest/autorun""

class BugTest < Minitest::Test
  include ActionView::Helpers::TextHelper

  def test_stuff
    assert_equal word_wrap(""""), """"
  end
end
```

### Expected behavior
`word_wrap` should return an empty string 

### Actual behavior
It returns `nil`

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.1
"
50066,How to scope a directory in Rails starting from Rails 7.1.2?,kalsan,,2023-11-15T19:39:58Z,2023-11-22T21:51:29Z,2023-11-22T16:14:56Z,"I have a directory `app/components` that should contain classes within a module `Components`. For instance:

```ruby
# app/components/users/show.rb

class Components::Users::Show
end
```

Up and including Rails 7.1.1, this could be achieved by using:

```ruby
Rails.application.config.eager_load_paths.delete(Rails.root.join('app', 'components').to_s)
Rails.application.config.eager_load_paths.unshift(Rails.root.join('app').to_s)
```

However, in Rails 7.1.2, despite this being a patch release, this is broken and Rails expects me to have the class named `Users::Show` instead of `Components::Users::Show`.

I found that 7.1.2 also significantly alters `Rails.application.config.eager_load_paths`:

In Rails 7.1.1 (situation WITHOUT modifying `eager_load_paths`):

```
Rails.application.config.eager_load_paths
=> 
[""/home/me/git/myrailsapp/app/channels"",
 ""/home/me/git/myrailsapp/app/components"",
 ""/home/me/git/myrailsapp/app/controllers"",
 ""/home/me/git/myrailsapp/app/controllers/concerns"",
 ""/home/me/git/myrailsapp/app/helpers"",
 ""/home/me/git/myrailsapp/app/jobs"",
 ""/home/me/git/myrailsapp/app/mailers"",
 ""/home/me/git/myrailsapp/app/models"",
 ""/home/me/git/myrailsapp/app/models/concerns""]
```

In Rails 7.1.2:

```
Rails.application.config.eager_load_paths
=> [""/home/me/git/myrailsapp/app"", ""/home/me/git/myrailsapp/lib""]
```

By intuition, I'd see this smells like a bug, because it appeared in a patch version. But perhaps it's intended and fixes the bug of it not having changed in 7.1.1. So if it is a bug, this shall be my bug report. Otherwise, I'd like to ask:

How to scope a directory in Rails starting from Rails 7.1.2, such that I can have a class  `Components::Users::Show` in `app/components/users/show.rb`?

Best,
Kalsan"
50065,Add BOOTSNAP_READONLY to Dockerfile template for production,technicalpickles,railties,2023-11-15T19:19:44Z,2023-11-16T17:27:05Z,,"

<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This was added in back in bootsnap 1.15.0 (https://github.com/Shopify/bootsnap/pull/428). This can save extra work and IO when the cache won't be changed, like is the case for docker containers

### Detail

This Pull Request changes the Dockerfile template used when creating a new application to add `BOOTSNAP_READONLY=1`

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50064,Refactor lookup of connection adapters,casperisfine,"activerecord, railties",2023-11-15T10:41:03Z,2023-11-19T11:35:16Z,2023-11-16T12:08:30Z,"Right now adapters have to expose a rather byzantine API:

  - They must be defined in `active_record/connection_adapters/<name>_adapter`
  - They must define `ConnectionHandling.<name>_adapter_class`
  - They must define `ConnectionHandling.<name>_connection`

All this is not very DRY and a bit annoying. Additionally it makes it very hard to define aliases (e.g. `mysql` => `trilogy`), or to substitute a default adapter for a specialized one.

This refactor aims at making all this easier by exposing a simple `register` method, that third party adapters can call from a Railtie.
"
50063,Add documentation for delegated methods on Metal,skipkayhil,actionpack,2023-11-15T04:36:15Z,2023-11-15T04:42:26Z,,"Some of these were specifically mentioned earlier in the Metal docs (response_body=, content_type=, status=) but were not linked because the methods were not documented (due to being part of a delegation).

This commit separates all of the delegated methods so that they can be documented, adds links for the mentioned methods, and additionally documents two methods on Response that are mentioned in the new Metal documentation, but were not previously documented."
50062,Use `api.rubyonrails.org` URLs in `README.rdoc` [ci-skip],jonathanhefner,"activemodel, activerecord",2023-11-14T22:36:46Z,2023-11-14T22:44:38Z,2023-11-14T22:44:37Z,"Follow-up to #49995.

Prior to this commit, `link:classes/...` URLs were used in `README.rdoc` files so that the URLs would be versioned when rendered at api.rubyonrails.org.  However, outside of api.rubyonrails.org, such URLs aren't properly resolved.

Since rails/sdoc#345, `https://api.rubyonrails.org/classes/...` URLs will also be versioned when rendered at api.rubyonrails.org, and such URLs are properly resolved everywhere.  Therefore, this commit converts `link:classes/...` URLs to that form.
"
50061,DatabaseConfigurations#configs_for can accept a symbol in the name param,andrewn617,activerecord,2023-11-14T22:28:43Z,2023-11-15T19:35:51Z,2023-11-15T19:35:51Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because I am changing usages of `find_db_config` to `configs_for` in my app. I noticed that while you can pass a symbol to `find_db_config` you cannot for `configs_for`, meaning I have to add `.to_s` at call sites where I might be passing a symbol in. I think it would be nice if `configs_for`'s `name` parameter worked with a symbol or a string.

### Detail

This Pull Request changes the `ActiveRecord::DatabaseConfigurations#configs_for` method to accept a symbol for the `name` parameter. The `name` parameter is used for comparison in one place, so I just call `to_s` on it there.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50060,Fix permitting arrays in numbered parameters for `StrongParameters`,fatkodima,actionpack,2023-11-14T18:00:21Z,2023-11-14T19:19:34Z,,"Fixes #50051.

The test case is a preceding test case, adapted for this change."
50059,Document `#in?` can perform queries for Active Record relations,p8,activesupport,2023-11-14T17:27:09Z,2023-11-15T20:03:43Z,,"As Active Record relations respond to `include?`, calling `in?` will perform a query if the relation hasn't been loaded yet:

```ruby
mary = Person.create(name: ""Mary"")
# => #<Person id: 654, name: ""Mary"">
mary.in?(Person.where(name: ""Alice""))
# SELECT 1 AS one FROM ""people"" WHERE ""people"".""name"" =""Alice"" ...
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50058,ActionView::Template fix computation of strict locals,casperisfine,actionview,2023-11-14T12:07:07Z,2023-11-14T16:05:10Z,2023-11-14T12:54:44Z,"Fix: https://github.com/rails/rails/pull/49782

There was a bug in how we computed the list of required keys which wasn't caught by the test.
"
50057,Routing::Mapper: Use Thread.each_caller_location if available,casperisfine,"actionpack, railties",2023-11-14T11:44:48Z,2023-11-16T08:36:00Z,2023-11-16T08:35:59Z,"Saves a lot of allocations. It's development only though.
"
50056,Lack of specifics regarding fixture error: RuntimeError: Foreign key violations found in your fixture data. Ensure you aren't referring to labels that don't exist on associations,Juksefantomet,"activerecord, more-information-needed",2023-11-14T11:38:17Z,2023-12-02T22:01:57Z,2023-12-02T22:01:57Z,"### Steps to reproduce

```
bundle exec rails g scaffold company
bundle exec rails g scaffold company_relation
```

edit migrations
```
create_table :companies do |t|
      t.string :name

      t.timestamps
end

create_table :company_relations do |t|
  t.boolean :parent
  t.boolean :child
  t.integer :parent_company_id

  t.references :company, null: true, foreign_key: true
  t.timestamps
end
```

company.rb
```
has_many :company_relations
```
company_relation.rb
```
belongs_to :company
```

create fixtures:



## omit the id specification in companies.yml fixture on purpose
companies.yml
```
company:
  name: 'Lumi Services AS'
```

company_relations.yml
```
company_relation:
  id: 1
  company_id: 1
```

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
bundle exec rails rake:test
```

regardless of any other fixture working as intended ALL tests fail miserably due to the omitted id with:

```
E

Error:
ModelInQuestionControllerTest#test_name:
RuntimeError: Foreign key violations found in your fixture data. Ensure you aren't referring to labels that don't exist on associations.

```

### Expected behavior
A more specific detail regarding what fixture and/or relation is causing the issue.

### Actual behavior
ALL tests fail and has the same general error stating there is something wrong with your fixtures, resulting in a ton of troubleshooting if a third party was setting up new relations and forgot to update unit tests in accordance with new relations.

In this case i had to comment out and load each fixture individually to troubleshoot what was causing it, and everything was seemingly ok but the `id` was missing.

ref: [the-low-down-on-fixtures](https://guides.rubyonrails.org/testing.html#the-low-down-on-fixtures)

in the examples for fixtures, id is not covered, if those fixture tests was executed with relations in place they would never produce a success result.

### System configuration
**Rails version**: (~> 7.0.3, >= 7.0.3.1)

**Ruby version**: 3.2.2
"
50055,Fix `rails db:create:all` to not touch databases before they are created,fatkodima,activerecord,2023-11-14T10:23:06Z,2023-11-14T16:58:21Z,2023-11-14T16:24:26Z,Fixes #50038.
50054,Formally deprecate passing `caller` to `Deprecation#warn`,casperisfine,activesupport,2023-11-14T09:34:37Z,2023-11-14T12:21:47Z,2023-11-14T09:57:11Z,"This emitted a warning since 2015, but it's likely most offenders never saw it.

Ref: https://github.com/rails/rails/commit/211f55d4fdb5b962ef25037b035e69791915d4de
"
50053,ActiveSupport::Deprecation handle blaming generated code,casperisfine,activesupport,2023-11-14T08:54:14Z,2023-11-14T09:10:58Z,2023-11-14T09:07:21Z,"Fix: #50047

`Backtrace::Location` instance for code generated with eval always have their `absolute_path` set to `nil`. So if absolute path is nil we should fallback to checking `#path`.

Co-Authored-By: @fatkodima 

cc @jagthedrummer @gazayas. 

I'll backport this to 7.1 and 7.0."
50052,Fix grammar in Generators guide to aid readibility [ci skip],sid-707,docs,2023-11-14T03:57:18Z,2023-11-14T04:00:43Z,2023-11-14T04:00:40Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

I had trouble reading the Generators guide at one point so I fixed the grammar."
50051,Strong Parameters permit Array value in Hash,khoan,"actionpack, attached PR",2023-11-14T01:49:10Z,2023-12-08T01:17:47Z,,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_controller/railtie""
require ""minitest/autorun""

class BugTest < Minitest::Test
  def test_strong_parameters
    hash = {
      'a' => {
        # '0' key can be any integer
        '0' => [{ 'id' => 1, 'body' => [1] }],
        '1' => [{ 'id' => 2, 'body' => [2] }]
      }
    }

    # passes but keys, '0' & '1', needs to be specified, which may not be possible if they're variable, e.g. integer id of some sort
    assert hash.eql?(ActionController::Parameters.new(hash).permit(a: {'0': [:id, body: []], '1': [:id, body: []]}).to_h)

    # fails
    assert hash.eql?(ActionController::Parameters.new(hash).permit(a: [:id, body: []]).to_h)
  end
end
```

### Expected behavior
<!-- Tell us what should happen -->

Expected to get a permitted hash of:

```ruby
    {
      'a' => {
        '0' => [{ 'id' => 1, 'body' => [1]}],
        '1' => [{ 'id' => 2, 'body' => [2]}]
      }
    }
```

### Actual behavior
<!-- Tell us what happens instead -->

Got:

```ruby
    {
      'a' => { }
    }
```


### System configuration
**Rails version**: 7.0.6

**Ruby version**: 3.0.4p208
"
50050,Raise `ArgumentError` when reading from `config.x` with arguments,seanpdoyle,railties,2023-11-14T00:27:01Z,2023-11-14T20:11:05Z,,"### Motivation / Background

The flexibility provided by `config.x` supports arbitrarily defining new configuration objects on-the-fly. Each new intermediate configuration object is constructed during chaining from its ancestor through a method invocation made without arguments.

Conversely, writing to leaf configuration values occurs when the invoked method's name ends with `=`, and the new configuration value is assigned to whatever that method's arguments are.

There are no cases when reading from a `config.x` value or building the intermediate values 
involves arguments.

### Detail

Prior to this commit, a read invoked with a method arguments would ignore those arguments. While this is robust and error-free, it's possible to obscure misuse.

For example, consider a line like:

```ruby
config.x.my_config.enabled = true
config.x.my_config.enabled #=> true
```

Now consider that first line with a typo that omits the `=`:

```ruby
config.x.my_config.enabled true
config.x.my_config.enabled #=> nil
```

This commit aims to provide more direct feedback for scenarios like the one above. There aren't legitimate use cases for invoking `#enabled` with arguments, so raise a `ArgumentError` when encountering a read with arguments.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50049,Handle case in MySQL where the `ActiveRecord.db_warnings_action` is not called even when a DB query has warnings,kmcphillips,activerecord,2023-11-13T21:31:47Z,2023-11-22T22:02:07Z,2023-11-22T22:02:07Z,"## Problem

When [`ActiveRecord.db_warnings_action`](https://github.com/rails/rails/blob/757f4896417f86b58303e416f4040a2b434abdd6/activerecord/lib/active_record.rb#L208-L213) is set to anything other than `:ignore`, I would expect that it would _always be called_ when there are warnings.

In MySQL this is not necessarily the case though. In the `AbstractMysqlAdapter` the warnings are handled in two statements:
https://github.com/rails/rails/blob/757f4896417f86b58303e416f4040a2b434abdd6/activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb#L750-L754

Simplified, but the logic is:
```ruby
query_result = raw_connection.query(sql)
if raw_connection.warning_count != 0
  warning_result = raw_connection.query(""SHOW WARNINGS"")
  warning_result.each do |warning|
    ActiveRecord.db_warnings_action(warning)
  end
end
```

So the query returns `warning_count` as metadata from the result. A second `""SHOW WARNINGS""` query is executed to get the warnings, and is assumed to always be correct. I know of two instances where this will return `[]` despite `warning_count` being greater than 0:

* If MySQL `max_error_count` is set to 0, warnings are counted but never persisted, so `SHOW WARNINGS` is always empty. [(source)](https://dev.mysql.com/doc/refman/8.0/en/show-warnings.html)
* If you are using ProxySQL it does not appear to propagate warnings at all. (see https://github.com/sysown/proxysql/issues/1751)

There may be others.

So the behaviour to the user is that even when `db_warnings_action` is set to something like `:raise` or a proc, **it is never executed and no warning is ever surfaced**.


## Solution

In the case where `warning_count` is non-zero, but `SHOW WARNINGS` returns `[]`, add a single warning with an error message. This isn't a super helpful message, but it is better than silently hiding that any warnings were encountered. This allows the user to update their DB config, or add a custom proc to report on or track warnings as is appropriate for their use case. 

I also found that `trilogy` did not test the warning behaviour at all, so I first added tests for warnings that are essentially copies of what is done in the `mysql2` tests.


### Questions

* How is the voice and tone of the error message? I'm not tied to it, but it's the best I could come up with.
* Should I include documentation around `db_warnings_action` with hints on how to tune the DB to prevent this state from occurring? I don't feel like it's the right place and I'm not sure if we give hints on infra in other places in the docs. Seems too specific and like it would get out of date.


### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc @rafaelfranca @adrianna-chang-shopify "
50048,`alias_attribute` no longer overrides reader method defined in concern,tf,"activerecord, With reproduction steps",2023-11-13T21:17:12Z,2023-11-15T15:38:02Z,,"I realize this is an edge case. Mainly posting the issue to document the change for others. Took me an hour today to understand a failure in our app caused by this change.

### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.string :title
  end
end

module Displayable
  # This is the a default implementation for classes that do not wish to implement display_name themselves
  def display_name
    ""Default name""
  end
end

class Post < ActiveRecord::Base
  include Displayable

  alias_attribute :display_name, :title
end

class BugTest < Minitest::Test
  def test_association_stuff
    post = Post.create!(title: ""Some title"")

    assert_equal ""Some title"", post.display_name
  end
end
```

### Expected behavior

`alias_attribute` in Post overrides `display_name` reader method defined in `Displayable` module. Test passes.

### Actual behavior

I assume since https://github.com/rails/rails/pull/48533, `alias_attribute` no longer defines the `display_name` reader method on `Post` itself, but on `Post::GeneratedAttributeMethods` which comes after `Displayable` in the ancestor chain:

```
Post.ancestors
# => [Post(id: integer, title: string), Displayable, Post::GeneratedAssociationMethods, Post::GeneratedAttributeMethods, ActiveRecord::Base, ...]
```

Test fails:

```
1) Failure:
BugTest#test_association_stuff [alias_attribute_bug.rb:46]:
Expected: ""Some title""
  Actual: ""Default name""
```

Changing `activerecord` version to 7.0.0 fixes the test.

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50047,Not possible to issue a deprecation warning from a template?,jagthedrummer,"activesupport, With reproduction steps",2023-11-13T20:46:24Z,2023-11-14T14:36:22Z,2023-11-14T09:07:22Z,"### Steps to reproduce

I'm working on a gem that provides some partials that apps can use and I'm trying to figure out how to warn users about deprecations in the options they should pass to a partial.

For instance an app might have a template at `app/views/home/index.html.erb` that does this:

```erb
<%= render 'my_gem/a_partial', some_option: true %>
```

Then in the gem partial I'm trying to do this:

```erb
<%
if defined?(some_option)
  ActiveSupport::Deprecation.warn(
    ""`some_option` is deprecated."" +
    ""Please use `new_option` instead.""
  )
  new_option = some_option
end
%>
```

Detecting the deprecated option and reassigning it to the new option works as expected but the deprecation message points to the wrong place.

Here's an app that illustrates the issue: https://github.com/jagthedrummer/rails_deprecation_test

### Expected behavior

I would expect the deprecation warning to point to the template that called the partial that's raising the deprecation.

```
DEPRECATION WARNING: `deprecated_option` is deprecated. Please use `new_option` instead.
  (called from app/views/home/index.html.erb:1)
```

### Actual behavior

Instead it points deep into rail internals:

```
DEPRECATION WARNING: `deprecated_option` is deprecated. Please use `new_option` instead.
  (called from public_send at .../actionview-7.0.8/lib/action_view/base.rb:244)
```

If I inspect `caller` inside the gem partial I can see that the calling template is in the callstack and is one frame ahead of the line in `action_view/base.rb` that ends up being reported.

```
# snip
./app/views/home/index.html.erb:4:in `_app_views_home_index_html_erb___914303725008310334_29160'
.../actionview-7.0.8/lib/action_view/base.rb:244:in `public_send'
# snip
```

It just seems like the template is somehow filtered from the ""deprecation stack"". I've tried calling `Rails.backtrace_cleaner.remove_silencers!` immediately before calling the partial but that doesn't seem to have any effect. It's like the deprecation system just doesn't see `.erb` files.

### System configuration

**Rails version**: 7.0.8

**Ruby version**: 3.2.1"
50046,[ActiveStorage] Prevent `AS::Preview#processed` to generate a variant for an empty transformation,chaadow,activestorage,2023-11-13T19:24:53Z,2023-11-16T09:26:44Z,2023-11-15T23:16:00Z,"Followup #50044 cc @jonathanhefner 


<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->


if an empty hash is passed to a preview call (`blob.preview({})`) We go through the original preview instead of regenerating a variation based on the original preview image which would result in a performance penalty.

### Detail

Calls to `#url` or `#key` would now use the original `blob.preview_image` instead of generating a variant that has an empty transformation.

==> Resulting in saving both a `MiniMagic/vips` call. + a network/IO call to the storage service

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50045,the method gem_group duplicate the information into the Gemfile,cprodhomme,,2023-11-13T17:30:06Z,2023-11-15T18:31:02Z,2023-11-15T18:31:02Z,"### Steps to reproduce
Use the method [gem_group](https://github.com/rails/rails/blob/89e48cf27eef272c6c2a2e7e0e13f2abe321e957/railties/lib/rails/generators/actions.rb#L111) and write it multiple times.

The method will not check if the Gemfile have already this group

When i want to write a Rails Application Template who add a specific gem for an existing app, i can add 2 times the gem group

```ruby
# your script

gem_group :development, :test do
  gem ""rspec-rails""
end

gem_group :development, :test do
  gem ""rspec-rails""
end
```

```ruby
# Gemfile

group :development, :test do
  gem ""rspec-rails""
end

group :development, :test do
  gem ""rspec-rails""
end
```

### Expected behavior
i want to have only one group : 

example of generation :
```ruby
# Gemfile

group :development, :test do
  gem ""rspec-rails""
end
```

### Actual behavior
<!-- Tell us what happens instead -->
```ruby
# Gemfile

group :development, :test do
  gem ""rspec-rails""
end

group :development, :test do
  gem ""rspec-rails""
end
```

### System configuration


**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50044,Process preview variant when processing preview,jonathanhefner,activestorage,2023-11-13T17:17:51Z,2023-11-13T18:55:42Z,2023-11-13T18:38:38Z,"Prior to this commit, `ActiveStorage::Preview#processed` would only process the preview image, not the specified variant of the preview image.  For example, `thumb = attached_pdf.preview(:thumb).processed` would only generate the full-sized preview image, not the `:thumb` variant of it, until e.g. `thumb.url` was called.

This commit updates `ActiveStorage::Preview#processed` to generate both the full-sized preview image and the requested variant.

Closes #50026.
"
50043,Fix strict loading for Active Storage previews,jonathanhefner,activestorage,2023-11-13T17:04:48Z,2023-11-13T17:17:05Z,2023-11-13T17:17:05Z,"`ActiveStorage::Preview#url` delegates to the preview image's variant, which in turn delegates to the variant's blob.  Thus when the variant has already been processed and strict loading is enabled, the association chain of `preview_image_attachment` => `blob` => `variant_records` => `image_attachment` => `blob` must be fully pre-loaded; otherwise, `ActiveStorage::Preview#url` will raise an `ActiveRecord::StrictLoadingViolationError`.
"
50042,minor: fixes a link to an old blog post about Valgrind in the docs [ci skip],MichaelWhi,docs,2023-11-13T16:59:07Z,2023-11-14T18:07:45Z,2023-11-14T18:07:44Z,"In the debugging_rails_applications.md in the docs, a link to a post about Valgrind and Ruby by Evan Weaver isn't available anymore. 

This minor change simply links to an archived version of the post.

Btw: I checked all other external links on that specific page about debugging rails apps (and many more ext. links for the current docs), and they still work."
50041,Ensure globals reset after Active Storage tests,jonathanhefner,activestorage,2023-11-13T16:54:08Z,2023-11-13T17:04:03Z,2023-11-13T17:04:03Z,"This ensures `ActiveRecord::Base.strict_loading_by_default` and `ActiveStorage.track_variants` are reset to their original values even when an error (e.g. an assertion failure) is raised inside `with_strict_loading_by_default` and `without_variant_tracking` blocks.
"
50040,Nested Delegated Types with `accepts_nested_attributes_for` not updating as expected,mic-kul,activerecord,2023-11-13T16:15:07Z,2023-12-08T03:27:26Z,,"### Steps to reproduce

```ruby
require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails"", ""~> 7""
  gem ""sqlite3"", platform: :mri
end

require ""active_record""
require ""minitest/autorun""

ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table ""transformation_pipeline_transformations"", force: :cascade do |t|
    t.bigint ""transformation_pipeline_id"", null: false
    t.bigint ""transformation_id"", null: false

    t.datetime ""created_at"", null: false
    t.datetime ""updated_at"", null: false
  end

  create_table ""transformation_pipelines"", force: :cascade do |t|
    t.datetime ""created_at"", null: false
    t.datetime ""updated_at"", null: false
    t.string ""name""
  end

  create_table ""transformations"", force: :cascade do |t|
    t.string ""name""
    t.string ""transformable_type"", null: false
    t.bigint ""transformable_id"", null: false
    t.datetime ""created_at"", null: false
    t.datetime ""updated_at"", null: false
    t.index %w[transformable_type transformable_id], name: ""index_transformations_on_transformable""
  end

  create_table ""transformations_tests"", force: :cascade do |t|
    t.string ""args""
    t.datetime ""created_at"", null: false
    t.datetime ""updated_at"", null: false
  end
end

class ApplicationRecord < ActiveRecord::Base
  self.abstract_class = true
end

class Transformation < ApplicationRecord
  delegated_type :transformable, types: %w[Transformations::Test]
  belongs_to :transformable, polymorphic: true
  delegate :transform!, to: :transformable
  accepts_nested_attributes_for :transformable
end

module Transformations
  def self.table_name_prefix
    ""transformations_""
  end
end

class TransformationPipeline < ApplicationRecord
  has_many :transformation_pipeline_transformations
  has_many :transformations, through: :transformation_pipeline_transformations
  accepts_nested_attributes_for :transformations
end

class TransformationPipelineTransformation < ApplicationRecord
  belongs_to :transformation_pipeline
  belongs_to :transformation
end

class Transformations::Test < ApplicationRecord
  has_one :transformation, as: :transformable, touch: true
end

class BugTest < Minitest::Test
  def test_delegated_type_assignment
    transformation = Transformation.create!(transformable: Transformations::Test.create(args: ""@""), name: ""test"")
    transformation_pipeline = TransformationPipeline.create!(name: ""test pipeline"")
    transformation_pipeline_transformations =
      TransformationPipelineTransformation.create!(
        transformation_pipeline: transformation_pipeline,
        transformation: transformation
      )

    pipeline = TransformationPipeline.first
    new_transformable_args = ""New Args""
    new_transformation_name = ""New Transformation Name""
    pipeline.update(
      name: ""New TransformationPipeline Name"",
      transformations_attributes: [
        {
          id: transformation.id,
          name: new_transformation_name,
          transformable_attributes: {
            id: transformation.transformable.id,
            args: new_transformable_args
          }
        }
      ]
    )
    assert_equal new_transformable_args, Transformation.find(transformation.id).transformable.args
  end
end
``` 

### Expected behavior

Update field args to be new_transformable_args or emit warning or error if it isn't possible. I've checked the [implementation PR](https://github.com/rails/rails/pull/41717/files) and couldn't spot anything I'm doing wrong.

### Actual behavior

All fields except args are updated, transaction is committed, no error is returned:

```
 TRANSACTION (0.0ms)  begin transaction
 Transformation Load (0.1ms)  SELECT ""transformations"".* FROM ""transformations"" INNER JOIN ""transformation_pipeline_transformations"" ON ""transformations"".""id"" = ""transformation_pipeline_transformations"".""transformation_id"" WHERE ""transformation_pipeline_transformations"".""transformation_pipeline_id"" = ? AND ""transformations"".""id"" = ?  [[""transformation_pipeline_id"", 1], [""id"", 1]]
 Transformations::Test Load (0.0ms)  SELECT ""transformations_tests"".* FROM ""transformations_tests"" WHERE ""transformations_tests"".""id"" = ? LIMIT ?  [[""id"", 1], [""LIMIT"", 1]]
 TransformationPipeline Update (0.0ms)  UPDATE ""transformation_pipelines"" SET ""updated_at"" = ?, ""name"" = ? WHERE ""transformation_pipelines"".""id"" = ?  [[""updated_at"", ""2023-11-13 16:02:38.941072""], [""name"", ""New TransformationPipeline Name""], [""id"", 1]]
 Transformation Update (0.0ms)  UPDATE ""transformations"" SET ""name"" = ?, ""updated_at"" = ? WHERE ""transformations"".""id"" = ?  [[""name"", ""New Transformation Name""], [""updated_at"", ""2023-11-13 16:02:38.941457""], [""id"", 1]]
 TRANSACTION (0.0ms)  commit transaction
```

### System configuration
**Rails version**: Rails 7.1.2

**Ruby version**: ruby 3.2.1 (2023-02-08 revision 31819e82c8) [arm64-darwin22]

### Edit

From what I found so far it looks like it's correctly assigning attributes to the model.
It's calling ActiveModel::AttributeAssignment#assign_attributes with the updated value:
(It calls `args=` with `New Args` on `Transformations::Test`)

 But delegated type is not marked as one to be saved when transaction finishes. I will keep digging...

It works as expected when I change the hash to not have id under transformable_attributes:

```ruby
pipeline1.update(
      name: ""New TransformationPipeline Name"",
      transformations_attributes: [
        {
          id: transformation.id,
          name: new_transformation_name,
          transformable_type: transformation.transformable_type,
          transformable_id: transformation.transformable_id,
          transformable_attributes: {
            # id: transformation.transformable.id, # Commenting out it here, makes it work
            args: new_transformable_args
          }
        }
      ]
    )
```
"
50039,Add ability to detect a half-open connection,monorkin,actioncable,2023-11-13T14:54:58Z,2023-12-08T16:52:55Z,,"### Motivation / Background

I have IoT devices connecting to my Rails app via ActionCable, and I want to log when a device connects or disconnects.

This is already doable via `Cahnnel#subscribed` and `Channel#unsubscribed`; and it works pretty well when a device properly connects, subscribes, and disconnects.

But when a device improperly disconnects - e.g. if it gets unplugged from the network - its ActionCable connection doesn't close and can linger in the system for up to half an hour.

This means that the server is using up resources to manage this connection, and send messages to it, when there isn't a client to receive them (since a client will reconnect if it misses 2 heartbeats which is about 6 sec). Some of these issues have been commented on in #45112 and #24908

Currently, ActionCable doesn't have a mechanism to detect if its connection is half-open (if there is a client listening on the other end). 

This PR changes the protocol so that a client has to respond to a PING message with a PONG message. If it doesn't do so within 2 heartbeats (6 sec) the connection is assumed to be half-open and is closed.

Fixes #45112
Fixes #24908
Fixes #29307
Fixes #32828

### Detail

#### Why not client-initiated heartbeats?

I've considered implementing client-initiated heartbeats ([and did a proof of concept for it](https://github.com/monorkin/actioncable-presence-detection-demo/commit/82a851f0de0f8db414e3c8055fa28be4031ffd90)) as was suggested in #45112 and in #24908, but opted for PONG responses because [Chrome recently added a feature that throttles setTimeout and setInterval to run at most once a minute if a tab isn't in focus](https://developer.chrome.com/blog/timer-throttling-in-chrome-88/). 

This throttling would cause clients to reconnect loop if the half-open threshold is set to below 1 min. And heartbeats with intervals greater than 1 min aren't always desirable, like in my case where I want to know that a device went offline within seconds. Chrome's throttling also [prompted socket.io to change it's heartbeat to be server-initated](https://github.com/socketio/socket.io/issues/2769#issuecomment-639300952).

#### Backwards and forwards compatibility

To ensure that clients that *don't* know about PONG messages can still work with servers that *do*, and for clients that *do* know about PONG messages to work with servers that *don't*; I've created a minor revision of the protocol - `actioncable-v1.1-json`.

If a client sends that in a `Sec-WebSocket-Protocol` header to the server and the server responds with `actioncable-v1.1-json` both the client and server know that they should send and expect PONG messages.

If the client doesn't send `Sec-WebSocket-Protocol: actioncable-v1.1-json` or the server doesn't respond with `Sec-WebSocket-Protocol: actioncable-v1.1-json` then the behavior from `actioncable-v1-json` is used.

#### Why is this logic on the connection object instead of the stream object?

In #45112 there was a suggestion to implement this as a timeout in the event-loop / select-loop.
From my understanding implementing it that way wouldn't be that much different from the implementation in this PR.
There would be some kind of last_message_read_at timestamp that's checked in each iteration, and if a threshold is exceeded the socket would be closed.

I implemented everything on the connection object because doimainwise it makes sense to me that a connection keeps the heartbeat and responds to it. 

Though I can see the benefits of having everything in the event loop. I have no strong opinion on this.

#### What about dropped message detection from #24908?

I've opted not to tackle that in this PR as that seems like it could become a mini-framework within ActionCable.

#### What about client-side latency measurements from #24908?

I've opted not to include that in this PR. But this could probably be done by adding an `echo` type message (or repurposing `ping`) that just echos back what the client sends to the server.

#### What about client-set heartbeat frequency from #24908?

I've opted not to include that in this PR as it's an unrelated feature to this one.

#### Why not native WebSocket PING and PONG messages like #32828?

It currently isn't possible to process native PING and PONG messages in browsers, so an additional sub-protocol level heartbeat would be needed for JS clients in browsers to be able to detect that they have been disconnected. Therefore it makes more sense to have just the one sub-protocol level heartbeat for everything.

#### What about the changelog?

~The CHANGELOG file contains a link to the changes in Rails 7.1. I'm not sure what to do.~

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50038,db:create:all task fails for new app with mysql adapter,tf,"activerecord, With reproduction steps",2023-11-13T13:05:04Z,2023-11-14T16:58:43Z,2023-11-14T16:58:43Z,"### Steps to reproduce

```
rails new foo -d mysql
cd ./foo
edit config/database.yml # Enter root password
bin/rails db:create:all
```

### Expected behavior
Databases are being created.

### Actual behavior
Error:

```
ActiveRecord::NoDatabaseError: We could not find your database: foo_development. Available database configurations can be found in config/database.yml file. (ActiveRecord::NoDatabaseError)

To resolve this error:

- Did you create the database for this app, or delete it? You may need to create your database.
- Has the database name changed? Check your database.yml config has the correct database name.

To create your database, run:

        bin/rails db:create
```

After calling `bin/rails db:create`, `bin/rails db:create:all` works as expected.

I am aware that `db:create` now also creates the test database in the development env. I'm using the `db:create:all` task, though, to automatically create databases for a dummy application of a Rails engine, where `db:create` still only creates the test database when running in CI.

### System configuration
**Rails version**: 7.1.2

**Ruby version**: 3.2.2
"
50037,Debug CI flaky test,fatkodima,"actionmailer, actionpack, activemodel, activerecord, activesupport, railties, docs, actionview, activejob, actioncable, activestorage, actionmailbox, actiontext",2023-11-13T00:22:44Z,2023-12-01T09:37:59Z,2023-12-01T09:37:56Z,Trying to debug https://github.com/rails/rails/issues/49841.
50036,active_record.rb,overtube,,2023-11-12T19:23:21Z,2023-11-12T19:27:07Z,2023-11-12T19:27:07Z,"### Steps to reproduce
`gem install rails`

```
Couldn't find file to include 'activerecord/README.rdoc' from lib/active_record.rb
```

### Actual behavior
**running command** 
`gem install rails` 

### System configuration
**Rails version**:
`Rails 7.1.2`

**Ruby version**:
`ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]`

**Gem version**:
`3.4.22`"
50035,active_job.rb,overtube,,2023-11-12T19:22:18Z,2023-11-12T19:24:07Z,2023-11-12T19:24:06Z,"### Steps to reproduce
`gem install rails`

```
Couldn't find file to include 'activejob/README.md' from lib/active_job.rb
```

### Actual behavior
**running command** 
`gem install rails` 

### System configuration
**Rails version**:
`Rails 7.1.2`

**Ruby version**:
`ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]`

**Gem version**:
`3.4.22`"
50034,active_storage.rb,overtube,,2023-11-12T19:21:16Z,2023-11-12T19:23:55Z,2023-11-12T19:23:55Z,"### Steps to reproduce
`gem install rails`

```
Couldn't find file to include 'activestorage/README.md' from lib/active_storage.rb
```

### Actual behavior
**running command** 
`gem install rails` 

### System configuration
**Rails version**:
`Rails 7.1.2`

**Ruby version**:
`ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]`

**Gem version**:
`3.4.22`"
50033,action_text.rb,overtube,,2023-11-12T19:19:58Z,2023-11-12T19:23:38Z,2023-11-12T19:23:38Z,"### Steps to reproduce
`gem install rails`

```
Couldn't find file to include 'actiontext/README.md' from lib/action_text.rb
```

### Actual behavior
**running command** 
`gem install rails` 

### System configuration
**Rails version**:
`Rails 7.1.2`

**Ruby version**:
`ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]`

**Gem version**:
`3.4.22`"
50032,action_mailer.rb,overtube,,2023-11-12T19:19:01Z,2023-11-12T19:23:26Z,2023-11-12T19:23:26Z,"### Steps to reproduce
`gem install rails`

```
Couldn't find file to include 'actionmailer/README.rdoc' from lib/action_mailer.rb
```

### Actual behavior
**running command** 
`gem install rails` 

### System configuration
**Rails version**:
`Rails 7.1.2`

**Ruby version**:
`ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]`

**Gem version**:
`3.4.22`"
50031,Improve `set_load_path` documentation,skipkayhil,docs,2023-11-12T19:18:51Z,2023-11-12T19:32:10Z,2023-11-12T19:32:04Z,"Closes #48756 

The new documentation explicitly lists all ""autoload paths"" for the reader, and mentions the `add_autoload_paths_to_load_path` config toggle

Rebase of #48756 with a small tweak to the wording
"
50030,action_mailbox.rb,overtube,,2023-11-12T19:18:12Z,2023-11-12T19:23:15Z,2023-11-12T19:23:15Z,"### Steps to reproduce
`gem install rails`

```
ouldn't find file to include 'actionmailbox/README.md' from lib/action_mailbox.rb
```

### Actual behavior
**running command** 
`gem install rails` 

### System configuration
**Rails version**:
`Rails 7.1.2`

**Ruby version**:
`ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]`

**Gem version**:
`3.4.22`"
50029,action_cable.rb,overtube,,2023-11-12T19:15:38Z,2023-11-12T19:23:05Z,2023-11-12T19:23:05Z,"### Steps to reproduce
`gem install rails`

```
Couldn't find file to include 'actioncable/README.md' from lib/action_cable.rb
```

### Actual behavior
**running command** 
`gem install rails` 

### System configuration
**Rails version**:
`Rails 7.1.2`

**Ruby version**:
`ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]`

**Gem version**:
`3.4.22`"
50028,active_model.rb,overtube,,2023-11-12T19:11:22Z,2023-11-12T19:22:49Z,2023-11-12T19:22:49Z,"### Steps to reproduce
`gem install rails`

```
Couldn't find file to include 'activemodel/README.rdoc' from lib/active_model.rb
```

### Actual behavior
**running command** 
`gem install rails` 

### System configuration
**Rails version**:
`Rails 7.1.2`

**Ruby version**:
`ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]`

**Gem version**:
`3.4.22`"
50027,edgeapi.rubyonrails.org not on latest commit,northeastprince,docs,2023-11-12T18:08:48Z,2023-11-22T14:10:51Z,2023-11-22T14:10:50Z,"#49989 fixes a typo in a comment, and was merged 3 days ago, but the [Edge API Docs](https://edgeapi.rubyonrails.org) don't show the fix. It seems to be hosted on a DigitalOcean server, and I assume it gets manually updated given the problem. Maybe [a script that continuously pulls this repo](https://github.com/basecamp/kamal-skiff/blob/main/lib/skiff/templates/serve) or some other solution to keep it up-to-date would be beneficial?"
50026,[ActiveStorage] Fix TransformJob to preprocess preview image variant,chaadow,activestorage,2023-11-12T12:30:41Z,2023-11-13T18:48:07Z,2023-11-13T18:38:39Z,"Followup #50006 cc @jonathanhefner @nicowenterodt 


<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because `TransformJob` for previewable files only preprocess the preview image, but not the associated preview_image variant.


### Detail

This Pull Request changes `ActiveStorage::TransformJob` to also trigger the preprocessing of the variant. It is also compatible with both previewable and variable records, as they both implement the `#key` method

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->
Every `ActiveStorage::Blob` has a `has_one_attached :preview_image` which is technically another AS blob.

Right now `ActiveStorage::Preview#processed` only generates the `preview_image` blob, but not the variant that's associated with it (with transformations available in the `@variation` instance variable)

One way to solve this is to force the `ActiveStorage::TransformJob` to preprocess the variant as well by calling `ActiveStorage::Preview#key` ( or `ActiveStorage::Variant#key` but it just calculates a key here)  this would return the key value that's inside the variant, which can be safely discarded in the context of `ActiveStorage::TransformJob`

The `ActiveStorage::Preview#processed` method can be subject to a refactor to handle multiple transformations depending on the `@variation` instance variable ( which might require refactoring the `#processed?` method )

the `ActiveStorage::Preview#key`, as well as `ActiveStorage::Preview#url`, also can be refactored, because right now they perform two things: 
1. Generate a variant ( System and network calls )
2. return the key or url

Compared to the `ActiveStorage::Variant#key` that simply calculates a key

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50025,[Fix #50024] Correctly cast boolean values for mysql to handle boolean filtering in JSON queries,the-spectator,activerecord,2023-11-12T10:49:26Z,2023-11-15T19:11:48Z,2023-11-15T19:01:24Z,"Fixes #50024

<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

Correctly cast boolean values for mysql to handle boolean filtering in JSON queries.
Mysql doesn't treat '0' or '1' as a boolean in the context of the JSON field. Reference: https://bugs.mysql.com/bug.php?id=90469

Previously, rails used to cast boolean values as 'TRUE' or 'FALSE' but after change introduced in https://github.com/rails/rails/commit/1dc69cab761fbfd46142f70d8ea58a41c6a12c12, this behavior has changed, and boolean casted values are converted into '1' or '0'.

This Pull Request has been created because [REPLACE ME]

### Detail

After the PR, if the bound value is boolean it will be casted to 'TRUE' or 'FALSE'.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50024,Incorrect casting for mysql boolean bound value for JSON queries,the-spectator,"activerecord, attached PR",2023-11-12T10:41:58Z,2023-11-15T19:13:28Z,2023-11-15T19:00:46Z,"Incorrect casting for MySQL boolean bound value for JSON queries. Mysql doesn't treat '0' or '1' as a boolean in the context of the JSON field. Reference: https://bugs.mysql.com/bug.php?id=90469

Previously, rails used to cast boolean values as 'TRUE' or 'FALSE' but after change introduced in 1dc69cab761fbfd46142f70d8ea58a41c6a12c12, this behavior has changed, and boolean casted values are converted into '1' or '0'.

### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""
  ruby ""3.2.2""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # working version
  # gem ""rails"", ""~> 6.1""
  # not working, broken in 1dc69cab761fbfd46142f70d8ea58a41c6a12c12
  gem ""rails"", git: ""https://github.com/rails/rails"", branch: ""main""
  gem ""trilogy""
  gem ""mysql2""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
# ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.establish_connection(
  adapter: ""mysql2"",
  database: ""rails_dev"",
  username: ""root"",
  password: ""root""
)
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :rails_bugs, force: true do |t|
    t.json :metadata
  end
end

class RailsBug < ActiveRecord::Base
  store_accessor :metadata, :is_bug

  scope :by_bug_value, ->(value) { where(""JSON_EXTRACT(metadata, '$.is_bug') = ?"", value) }
end

class BugTest < Minitest::Test
  def test_casting_boolean
    RailsBug.create(is_bug: true)
    RailsBug.create(is_bug: false)
    RailsBug.create(is_bug: true)
    RailsBug.create(is_bug: true)

    assert_equal 3, RailsBug.by_bug_value(true).count
  end
end

```

### Expected behavior
<!-- Tell us what should happen -->
Generated SQL
```sql
SELECT COUNT(*) FROM `rails_bugs` WHERE (JSON_EXTRACT(metadata, '$.is_bug') = '1')
```

### Actual behavior
<!-- Tell us what happens instead -->
```
F

Failure:
BugTest#test_casting_boolean [mysql_json_bool_bug.rb:52]:
Expected: 3
  Actual: 0
```

Generated SQL
```sql
SELECT COUNT(*) FROM `rails_bugs` WHERE (JSON_EXTRACT(metadata, '$.is_bug') = TRUE)
```

### System configuration
**Rails version**:
main

**Ruby version**:
3.2.2"
50023,Remove uglifier from guide [skip ci],akhilgkrishnan,"railties, docs",2023-11-12T07:12:22Z,2023-11-23T19:07:19Z,2023-11-23T19:00:02Z,"`uglifier` is an outdated and not used in modernjs application instead of that it recommends to use `terser`.
ref: https://github.com/rails/rails/pull/43623

### Detail

This Pull Request removes `uglifier` from the guide.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50022,Updated rails about guide content with latest data [skip ci],akhilgkrishnan,docs,2023-11-12T06:08:23Z,2023-11-13T05:13:52Z,2023-11-12T19:57:30Z,"### Detail

This Pull Request updates the command line guide with latest data of rails about.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50021,BuildKite -> GitHub Actions?,northeastprince,,2023-11-12T03:52:54Z,2023-11-13T12:26:35Z,2023-11-12T04:00:29Z,"We're already using GHA for some CI steps, but I'm wondering if there's a specific reason why we haven't moved the rest over or if someone just hasn't gotten around to that, in which case I'd be happy to work on a PR."
50020,Fix schema dumper to account for `ActiveRecord.dump_schemas` when dumping in `:ruby` format,fatkodima,activerecord,2023-11-11T19:51:48Z,2023-11-13T21:39:15Z,,"Fixes #49926.

Currently, `ActiveRecord.dump_schemas` (introduced in #19347) is only considered when dumping schema in a `:sql` format. This PR fixes that by considering it also when dumping in a `:ruby` format."
50019,Add column_comment method to model_schema.rb,Tambiebarango,activerecord,2023-11-11T18:53:23Z,2023-11-16T14:58:58Z,2023-11-16T14:58:58Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created to add a helper method to get a column's comment, instead of reading from `columns_hash`.

### Detail

This pull request adds a new method `column_comment(column_name)` to the `model_schema.rb` that helps to fetch a column's comment text from the `columns_hash`. The `column_name` provided to this method must exist on the table. If it does not exist, an error gets raised.

Currently, to get a column's comment, you'd need to do

```ruby
Model.columns_hash['column_name'].comment
```

With the changes from this PR, you can now do

```ruby
Model.column_comment('column_name')
```


### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50018,test: update karma npm from 3.1.4 to 6.4.2,tnir,"actionview, actioncable, ready",2023-11-11T14:53:27Z,2023-12-22T09:29:42Z,,"### Motivation / Background

[karma](https://www.npmjs.com/package/karma) npm package, used in actioncable and actionview, has been stale.

karma 3.x was stable in 2018, but 6.x is now the latest.

This Pull Request has been created because Rails developers are to use the latest karma and latest Node.js (20 LTS or 21).

### Detail

This Pull Request updates karma package from 3.1.4 to 6.4.2, which prevents from using `chokidar@2` (or `fsevents@1`).

### Additional information

The package was introduced in #34440 and #46206. Also this change follows up #49901 (Node.js 20).

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [n/a] Tests are added or updated if you fix a bug or add a feature.
* [n/a] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50017,`uninitialized constant ActionCable` after upgrading,luizkowalski,third party issue,2023-11-11T11:55:59Z,2023-11-24T10:19:30Z,2023-11-11T12:00:36Z,"Hey 👋🏻 

I have an app running on 7.1.1. I'm using Turbo but I'm not using ActionCable. After upgrading 7.1.2, I'm seeing this issue:


```shell
❯ bin/rails zeitwerk:check --trace
** Invoke zeitwerk:check (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute zeitwerk:check
Hold on, I am eager loading the application.
bin/rails aborted!
NameError: uninitialized constant ActionCable (NameError)

class Turbo::StreamsChannel < ActionCable::Channel::Base
                                                  ^^^^^^
Did you mean?  Rational
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/turbo-rails-1.5.0/app/channels/turbo/streams_channel.rb:34:in `<top (required)>'
<internal:/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:38:in `require'
<internal:/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:38:in `require'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:30:in `require'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/helpers.rb:135:in `const_get'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/helpers.rb:135:in `cget'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/eager_load.rb:175:in `block in actual_eager_load_dir'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/helpers.rb:40:in `block in ls'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/helpers.rb:25:in `each'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/helpers.rb:25:in `ls'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/eager_load.rb:170:in `actual_eager_load_dir'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/eager_load.rb:17:in `block (2 levels) in eager_load'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/eager_load.rb:16:in `each'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/eager_load.rb:16:in `block in eager_load'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/eager_load.rb:10:in `synchronize'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader/eager_load.rb:10:in `eager_load'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader.rb:379:in `block in eager_load_all'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader.rb:377:in `each'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/loader.rb:377:in `eager_load_all'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/railties-7.1.2/lib/rails/zeitwerk_checker.rb:6:in `check'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/railties-7.1.2/lib/rails/tasks/zeitwerk.rake:29:in `block (2 levels) in <top (required)>'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rake-13.1.0/lib/rake/task.rb:281:in `block in execute'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rake-13.1.0/lib/rake/task.rb:281:in `each'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rake-13.1.0/lib/rake/task.rb:281:in `execute'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rake-13.1.0/lib/rake/task.rb:219:in `block in invoke_with_call_chain'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rake-13.1.0/lib/rake/task.rb:199:in `synchronize'
/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rake-13.1.0/lib/rake/task.rb:199:in `invoke_with_call_chain'
...
<internal:/Users/luiz/.rbenv/versions/3.2.2/lib/ruby/site_ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:38:in `require'
```

My `application.rb` file is as follows:


```ruby
require_relative ""boot""

require ""rails""
# Pick the frameworks you want:
require ""active_model/railtie""
require ""active_job/railtie""
require ""active_record/railtie""
# require ""active_storage/engine""
require ""action_controller/railtie""
# require ""action_mailer/railtie""
# require ""action_mailbox/engine""
# require ""action_text/engine""
require ""action_view/railtie""
# require ""action_cable/engine""
require ""rails/test_unit/railtie""
```

If I require `action_cable/engine` it works. 

I thought it could be something with Turbo but I did not upgrade Turbo (I'm using turbo-rails 1.5.0).

Uncommenting the `require` or downgrading to `7.1.1` will fix the problem, so I think it is Rails-related


### System configuration
**Rails version**: 7.1.2 (Upgraded from 7.1.1)

**Ruby version**: 3.2.2
"
50016,Add missing closing backtick,akhilgkrishnan,railties,2023-11-11T07:02:11Z,2023-11-11T09:43:11Z,2023-11-11T09:42:40Z,"Added missing closing backtick. 
ref: https://github.com/rails/rails/pull/49839
cc: @skipkayhil 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50015,Remove config.load_paths reference from guide [ci skip],akhilgkrishnan,docs,2023-11-11T06:09:28Z,2023-11-11T18:19:23Z,2023-11-11T12:06:10Z,"`config.load_paths` was deprecated in rails 3.0 and we are using `config.paths.load_paths` instead.
ref:
https://github.com/rails/rails/blob/bdc043b9f0f6379fb4d420f4ccb70011a5cb099e/railties/lib/rails/engine.rb#L722


### Detail

This Pull Request updates the reference of `config.load_paths` to `config.paths.load_paths` in configuration guide.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50014,Fix order of scope- vs user-derived attribute assignments,ezekg,activerecord,2023-11-10T23:09:28Z,2023-12-05T01:14:33Z,,"### Motivation / Background

Fixes #26295. It was closed due to the issue becoming stale, not because it was fixed. It never had a satisfactory fix.

### Detail

This Pull Request modifies the order of attribute assignments for associations, e.g. `collection.build` and `build_foo`. Previously, if you were to build a record from an association, the attributes derived from the scope would be applied last. This is problematic when a setter on the model expects those scope values to be present, since they were technically defined first. This has bitten me a few times in a multi-tenant application, requiring a workaround where you supply the scope attributes again in `#build`.

I've tried to make this backwards compatible, by first applying the attributes from the scope via `#scope_for_create`, then applying the provided attributes to `#build` minus foreign keys from `#scope_for_create`, and then finally initializing the record normally.

Here's a small reproduction script of the problem: https://gist.github.com/ezekg/5722f5af2b79061a4f945d49f3ce734b (modified from @heaven's original reproduction script: https://github.com/rails/rails/issues/26295#issuecomment-246189123)

I've written tests that fail without the changes to the `#build_record` method.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50013,Move PG-specific tests to `PostgresqlRenameTableTest`,jonathanhefner,activerecord,2023-11-10T22:43:54Z,2023-11-10T22:58:17Z,2023-11-10T22:58:16Z,"This moves PostgreSQL-specific `rename_table` tests from `activerecord/test/cases/migration/rename_table_test.rb` to `activerecord/test/cases/adapters/postgresql/rename_table_test.rb`. Note that `test_renaming_table_renames_primary_key` was added after `test_renaming_table_doesnt_attempt_to_rename_non_existent_sequences` and made the latter redundant, and that both are already covered by the ""renaming a table with uuid primary key and uuid_generate_v4() default also renames the primary key index"" test.
"
50012,Fix using `self.inherited` removing filter_attributes & GeneratedAssociationMethods generated multiple times,Adrian-Hirt,activerecord,2023-11-10T22:02:40Z,2023-11-10T23:04:11Z,2023-11-10T23:04:04Z,"This PR fixes issue #50003 where using `super` after adding relations to the subclass or defining filter attributes in the subclass in the method `self.inherited` lead to warnings and removed previously defined filter_attributes.

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fixes #50003.

### Detail

I only added the `||=` to `@filter_attributes` and `@generated_association_methods`, the other 3 variables in this code should not be affected. That way, only two additional `OR` operations are introduced.

### Additional information

I added some tests as well, if the tests are run in an environment with [strict warnings enabled](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#warnings) it also verifies that the constant mentioned in #50003 is not redefined.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50011,Aggregate saved changes for all updates inside of a transaction,bdurand,activerecord,2023-11-10T20:21:35Z,2023-11-10T22:07:55Z,,"### Motivation / Background

This Pull Request has been created because there is inconsistent behavior with dirty attributes in transaction callbacks when a record is updated multiple times inside of a transaction.

Consider this case:

```ruby
class User < ApplicationRecord
  after_commit :notify_email_changes, if: :email_changed?

  def notify_email_changes
    NotifyEmailChangesJob.perform_later(id)
  end
end
```

This breaks if a record is saved twice in a single transaction.

```ruby
user.transaction do
  user.update!(email: params[:email])
  if user.last_visited_at < 1.day.ago
    user.update!(last_visited_at: Time.now)
  end
end
```

In the case where we update the `last_visited_at` field, the `email_changed?` method will return false since the email address was not changed in the last save operation and `notify_email_changes` method will not be called.

Fixes #49898, #48077

### Detail

This Pull Request changes how `saved_changes` is calculated in transactions when a record is updated multiple times.

After each save operation, the list of saved changes is pushed onto a list. `saved_changes` in an `after_save` callback is unaffected and will show only the changes for that save operation.

Before a transaction is committed, the list of saved changes for all saves in the transaction are merged by reapplying them to the original attributes. Checking `saved_changes` in an `after_commit` callback will use the merged mutation tracker which includes all changes. Checking `saved_changes` outside the transaction after it is committed will also include all changes.

### Checklist

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50010,Add `actiontext` bug report template,seanpdoyle,docs,2023-11-10T19:28:54Z,2023-12-16T15:22:07Z,,"### Motivation / Background

Introduce Action Text bug report templates for contributors to reproduce issues with failing `ActionDispatch::SystemTestCase` instances.

### Additional information

**Currently, the template test case fails**

```
Error:
BugTest#test_Action_Text:
NameError: undefined local variable or method `new_articles_path' for #<BugTest:0x0000000135db1e48>
    /Users/seanpdoyle/.asdf/installs/ruby/3.2.0/lib/ruby/gems/3.2.0/bundler/gems/rails-fd20970d6539/actionpack/lib/action_dispatch/system_test_case.rb:185:in `method_missing'
    guides/bug_report_templates/action_text_main.rb:96:in `block in <class:BugTest>'
```

I'm not sure why, but the routing helpers are unavailable to the test case.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
"
50009,Active Model: Call `Object#dup` on `default:` values,seanpdoyle,activemodel,2023-11-10T18:47:38Z,2023-11-11T15:27:05Z,2023-11-11T15:27:05Z,"### Motivation / Background

Prior to this commit, defining a `default:` Object value for an Active Model attribute meant that particular Object instance was shared across all model instances.

For example, given the following model:

```ruby
class Model
  include ActiveModel::Model
  include ActiveModel::Attributes

  attribute :array, default: []
  attribute :hash, default: {}
end
```

Each time an instance wrote to a default value, all others that relied on that default value had that value changed:

```ruby
a, b = Model.new, Model.new

a.array << 1
a.hash[:a] = 1

 # expected
a.array # => [1]
a.hash # => { a: 1 }

 # unexpected
b.array # => [1]
b.hash # => { b: 1 }
```

Equipped with the knowledge of this quirk, one common work around was to define the `default:` in a callable:

```ruby
class Model
  include ActiveModel::Model
  include ActiveModel::Attributes

  attribute :array, default: -> { [] }
  attribute :hash, default: -> { {} }
end

a, b = Model.new, Model.new

a.array << 1
a.hash[:a] = 1

a.array # => [1]
a.hash # => { a: 1 }

b.array # => []
b.hash # => {}
```

### Detail

When defining a `default:` that isn't callable, call `Object#dup`.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50008,Fix logged cache key normalization,skipkayhil,activesupport,2023-11-10T18:17:18Z,2023-11-11T19:14:21Z,2023-11-11T19:12:49Z,"### Motivation / Background

Previously, the `Cache::Store` instrumentation would call `normalize_key` when adding a key to the log. However, this resulted in the logged key not always matching the actual key written/read from the cache:

```irb
irb(main):004> cache.write(""foo"", ""bar"", namespace: ""baz"")
D, [2023-11-10T12:44:59.286362 #169586] DEBUG -- : Cache write: baz:foo ({:compress=>false, :compress_threshold=>1024, :namespace=>""baz""})
=> true
irb(main):005> cache.delete(""foo"", namespace: ""baz"")
D, [2023-11-10T12:45:03.071300 #169586] DEBUG -- : Cache delete: foo
=> true
```

In this example, `#write` would correctly log that the key written to was `baz:foo` because the `namespace` option would be passed to the `instrument` method. However, other methods like `#delete` would log that the `foo` key was deleted because the `namespace` option was _not_ passed to `instrument`.

### Detail

This commit fixes the issue by making the caller responsible for passing the correct key to `#instrument`. This allows `normalize_key` to be removed from the log generation which both prevents the key from being normalized a second time and removes the need to pass the full options hash into `#instrument`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50007,Implement a `:force` option to delete cookies not present in the request,zavan,actionpack,2023-11-10T18:09:30Z,2023-11-10T22:30:37Z,,"Implement a :force option to delete cookies not present in the request.

### Motivation / Background

This can be useful if you're trying to delete a cookie that has a path, from a different path, in which case it won't be present in the request and won't be deleted if the option is not passed.

Fixes #49746 

### Detail

This Pull Request adds a `:force` option to `cookies.delete` that skips checking if the cookie is present before marking it for removal.

### Additional information

I initially tried simply removing the guard condition altogether (I gave my rationale for this in the linked Issue), but this broke some `cookies.clear` tests, so I though it should probably be an opt-in behavior through an option.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50006,Fix #50005 transform_job not accepting previewables,nicowenterodt,activestorage,2023-11-10T16:19:18Z,2023-11-12T15:21:37Z,2023-11-11T17:49:11Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR. See #50005 for details.
-->

This Pull Request has been created because the `ActiveStorage::TransformJob` crashes if you want to preprocess a previewable file like a pdf document. 

### Detail

This Pull Request changes that by determining if a blob is capable of being previewed. If so, a preview will be generated. 

### Additional information
The `ActiveStorage::TransformJob` is being used when an attachment has predefined variants with the `preprocessed` option. When you upload a file which is **not** an image but a previewable file like a pdf-document this will fail with `ActiveStorage::InvariableError`.

Example:
```
has_one_attached :file do |attachable|
    attachable.preview :thumb, resize_to_limit: [400, 600], preprocessed: true
end
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Fix #50005
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50005,ActiveStorage::TransformJob doesn't accept previewable files,nicowenterodt,"attached PR, With reproduction steps, activestorage",2023-11-10T16:13:00Z,2023-11-11T17:49:12Z,2023-11-11T17:49:12Z,"### Steps to reproduce
When having a predefined variant for an attachment and you're making use of the `preprocessed` option, the `ActiveStorage::TransformJob` will fail for [previewable](https://api.rubyonrails.org/classes/ActiveStorage/Preview.html) files like PDFs with `ActiveStorage::InvariableError`.

To reproduce simply define a variant for an attachment like this:

```
has_one_attached :file do |attachable|
    attachable.variant :thumb, resize_to_limit: [400, 600], preprocessed: true
end
```

After uploading a PDF the `ActiveStorage::TransformJob` will be enqeued. As soon as the job is being processed it fails with `ActiveStorage::InvariableError`.

### Expected behavior
The `ActiveStorage::TransformJob` should accept previewable files as well so preprocessed variants are also possible for PDF documents and other previewable filetypes.

### Actual behavior
The `ActiveStorage::TransformJob` fails when a previewable blob is being processed with `ActiveStorage::InvariableError`

### System configuration
**Rails version**: 7.1.1

**Ruby version**: 3.2.2
"
50004,Add `actionmailer` bug report template,seanpdoyle,docs,2023-11-10T16:02:43Z,2023-11-10T19:29:42Z,2023-11-10T19:29:13Z,"### Motivation / Background

Introduce Action Mailer bug report templates for contributors to reproduce issues with failing `ActionMailer::TestCase` instances.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature."
50003,`filter_attributes` getting set to nil & `GeneratedAssociationMethods` generated multiple times when using `self.inherited` ,Adrian-Hirt,"activerecord, With reproduction steps",2023-11-10T15:45:42Z,2023-11-10T23:04:06Z,2023-11-10T23:04:05Z,"While updating an app to rails `7.1.1`, I discovered a bug that occurs when using `self.inherited(subclass)` in models. As far as I can tell, this change in behaviour was introduced #47023, where @byroot worked on improving the shape friendliness of Rails.
Please note that the bug happens in a bit of an edgecase, and I'd also be okay with the issue being closed without code changes if you consider the producing code to be too much of an edgecase / bad practice in general.

### Steps to reproduce

Consider the following ruby script that can be run to showcase the bug. It defines two ""parent"" classes, `Vehicle` and `Device` that both define a `belongs_to` relation as well as a `filter_attribute` in their child classes via the `self.inherited` method.

The `device` class defines these *before* calling `super`, the `Vehicle` class definies these *after* calling `super`:

(Again, please note that the code might be nonsensical, it's just to showcase the behaviour).

```ruby
require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'activerecord', ENV.fetch('AR_VERSION', '7.0.8')
  gem 'sqlite3'
end

require 'active_record'

ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')

# Create the tables needed for the examples
ActiveRecord::Schema.define do
  create_table :devices, force: true do |t|
    t.string ""type"", null: false
    t.belongs_to :person
  end

  create_table :vehicles, force: true do |t|
    t.string ""type"", null: false
    t.belongs_to :person
  end

  create_table :people, force: true
end

# If the ENV var `TOGGLER` is set to true, monkey-patch the `inherited` method
# to only set the `@filter_attributes` and `@generated_association_methods`
# variabes to nil if they are not already set to something.
if ENV.fetch('TOGGLER', false) == 'true'
  module ActiveRecord
    module Core
      module ClassMethods
        def generated_association_methods # :nodoc:
          @generated_association_methods ||= begin
            puts ""Creating `GeneratedAssociationMethods` module for class #{self.name}"" # <= CHANGE FOR DEBUGGING HERE

            mod = const_set(:GeneratedAssociationMethods, Module.new)
            private_constant :GeneratedAssociationMethods
            include mod

            mod
          end
        end

        private
          def inherited(subclass)
            super

            # initialize cache at class definition for thread safety
            subclass.initialize_find_by_cache
            unless subclass.base_class?
              klass = self
              until klass.base_class?
                klass.initialize_find_by_cache
                klass = klass.superclass
              end
            end

            subclass.class_eval do
              @arel_table = nil
              @predicate_builder = nil
              @inspection_filter = nil
              @filter_attributes ||= nil              # <= MONKEY PATCH HERE
              @generated_association_methods ||= nil  # <= MONKEY PATCH HERE
            end
          end
      end
    end
  end
else
  module ActiveRecord
    module Core
      module ClassMethods
        def generated_association_methods # :nodoc:
          @generated_association_methods ||= begin
            puts ""Creating `GeneratedAssociationMethods` module for class #{self.name}"" # <= CHANGE FOR DEBUGGING HERE

            mod = const_set(:GeneratedAssociationMethods, Module.new)
            private_constant :GeneratedAssociationMethods
            include mod

            mod
          end
        end
      end
    end
  end
end

# Define an `ApplicationRecord` class
class ApplicationRecord < ActiveRecord::Base
  self.abstract_class = true
end

# Create a `Person` class which we'll use for the `belongs_to` calls
# futher below.
class Person < ApplicationRecord
  has_many :devices
  has_many :computers
  has_many :smartphones

  has_many :vehicles
  has_many :cars
  has_many :bikes
end

# Define a parent class for `Computer` and `Smartphone`. Please note that here
# we add the `belongs_to` and `filter_attributes` to the child classes BEFORE
# calling `super`.
class Device < ApplicationRecord
  def self.inherited(subclass)
    subclass.belongs_to :person, inverse_of: subclass.name.tableize.to_sym

    subclass.filter_attributes = [:secret_attribute, :""#{subclass.name.downcase}_key""]

    super
  end
end
class Computer < Device; end
class Smartphone < Device; end

# Define a parent class for `Car` and `Bike`. Please note that here
# we add the `belongs_to` and `filter_attributes` to the child classes AFTER
# calling `super`.
class Vehicle < ApplicationRecord
  def self.inherited(subclass)
    super

    subclass.belongs_to :person, inverse_of: subclass.name.tableize.to_sym

    subclass.filter_attributes = [:secret_attribute, :""#{subclass.name.downcase}_key""]
  end
end
class Car < Vehicle; end
class Bike < Vehicle; end


puts '-' * 30
puts 'filter_attributes output'
puts '-' * 30

puts ""Computer.filter_attributes: #{Computer.filter_attributes}""
puts ""Smartphone.filter_attributes: #{Smartphone.filter_attributes}""
puts ""Car.filter_attributes: #{Car.filter_attributes}""
puts ""Bike.filter_attributes: #{Bike.filter_attributes}""

puts '-' * 30
puts 'associations method output'
puts '-' * 30

puts ""Computer.new.respond_to?(:person=): #{Computer.new.respond_to?(:person=)}""
puts ""Smartphone.new.respond_to?(:person=): #{Smartphone.new.respond_to?(:person=)}""
puts ""Car.new.respond_to?(:person=): #{Car.new.respond_to?(:person=)}""
puts ""Bike.new.respond_to?(:person=): #{Bike.new.respond_to?(:person=)}""

puts ""Person.new.devices: #{Person.new.devices}""
puts ""Person.new.smartphones: #{Person.new.smartphones}""
puts ""Person.new.computers: #{Person.new.computers}""
puts ""Person.new.vehicles: #{Person.new.vehicles}""
puts ""Person.new.cars: #{Person.new.cars}""
puts ""Person.new.bikes: #{Person.new.bikes}""

```

### Observed behavior

If I run the test script with ActiveRecord version `7.0.8` via `ruby script.rb`, the output is the following:

```
<snip>
Using activerecord 7.0.8
<snip>
Creating `GeneratedAssociationMethods` module for class ApplicationRecord
Creating `GeneratedAssociationMethods` module for class Person
Creating `GeneratedAssociationMethods` module for class Device
Creating `GeneratedAssociationMethods` module for class Computer
Creating `GeneratedAssociationMethods` module for class Smartphone
Creating `GeneratedAssociationMethods` module for class Vehicle
Creating `GeneratedAssociationMethods` module for class Car
Creating `GeneratedAssociationMethods` module for class Bike
------------------------------
filter_attributes output
------------------------------
Computer.filter_attributes: [:secret_attribute, :computer_key]
Smartphone.filter_attributes: [:secret_attribute, :smartphone_key]
Car.filter_attributes: [:secret_attribute, :car_key]
Bike.filter_attributes: [:secret_attribute, :bike_key]
------------------------------
associations method output
------------------------------
Computer.new.respond_to?(:person=): true
Smartphone.new.respond_to?(:person=): true
Car.new.respond_to?(:person=): true
Bike.new.respond_to?(:person=): true
Person.new.devices: #<Device::ActiveRecord_Associations_CollectionProxy:0x00007f315d7072a0>
Person.new.smartphones: #<Smartphone::ActiveRecord_Associations_CollectionProxy:0x00007f315d705298>
Person.new.computers: #<Computer::ActiveRecord_Associations_CollectionProxy:0x00007f315d702f70>
Person.new.vehicles: #<Vehicle::ActiveRecord_Associations_CollectionProxy:0x00007f315d701328>
Person.new.cars: #<Car::ActiveRecord_Associations_CollectionProxy:0x00007f315d71f9b8>
Person.new.bikes: #<Bike::ActiveRecord_Associations_CollectionProxy:0x00007f315d71dc58>
```

The `GeneratedAssociationMethods` module is created once per Class (as it is stored in the instance variable after the first call), the `filter_attributes` seem to work fine and the associations methods work as expected.

When running the same script with ActiveRecord `7.1.0` via `AR_VERSION=7.1.0 ruby script.rb`, the output is:

```
<snip>
Using activerecord 7.1.0
<snip>
Creating `GeneratedAssociationMethods` module for classs ApplicationRecord
Creating `GeneratedAssociationMethods` module for class Person
Creating `GeneratedAssociationMethods` module for class Device
Creating `GeneratedAssociationMethods` module for class Computer
Creating `GeneratedAssociationMethods` module for class Computer
script.rb:81: warning: already initialized constant Computer::GeneratedAssociationMethods
script.rb:81: warning: previous definition of GeneratedAssociationMethods was here
Creating `GeneratedAssociationMethods` module for class Smartphone
Creating `GeneratedAssociationMethods` module for class Smartphone
script.rb:81: warning: already initialized constant Smartphone::GeneratedAssociationMethods
script.rb:81: warning: previous definition of GeneratedAssociationMethods was here
Creating `GeneratedAssociationMethods` module for class Vehicle
Creating `GeneratedAssociationMethods` module for class Car
Creating `GeneratedAssociationMethods` module for class Bike
------------------------------
filter_attributes output
------------------------------
Computer.filter_attributes: []
Smartphone.filter_attributes: []
Car.filter_attributes: [:secret_attribute, :car_key]
Bike.filter_attributes: [:secret_attribute, :bike_key]
------------------------------
associations method output
------------------------------
Computer.new.respond_to?(:person=): true
Smartphone.new.respond_to?(:person=): true
Car.new.respond_to?(:person=): true
Bike.new.respond_to?(:person=): true
Person.new.devices: #<Device::ActiveRecord_Associations_CollectionProxy:0x00007f7f27ea1d40>
Person.new.smartphones: #<Smartphone::ActiveRecord_Associations_CollectionProxy:0x00007f7f27ed4358>
Person.new.computers: #<Computer::ActiveRecord_Associations_CollectionProxy:0x00007f7f27f0e8f0>
Person.new.vehicles: #<Vehicle::ActiveRecord_Associations_CollectionProxy:0x00007f7f27f0d180>
Person.new.cars: #<Car::ActiveRecord_Associations_CollectionProxy:0x00007f7f27f0bc40>
Person.new.bikes: #<Bike::ActiveRecord_Associations_CollectionProxy:0x00007f7f27f0a390>
```

As you can see, the `GeneratedAssociationMethods` module is created twice for the `Computer` and `Smartphone` model, which generates the warnings. Also, the `filter_attributes` of the `Computer` and `Smartphone` model classes are both empty. Association methods still work as expected.

Finally, when running with `TOGGLER=true AR_VERSION=7.1.0 ruby script.rb` which adds the monkey-patch to the `inherited` call, the output is the same as for `7.0.8`:

```
<snip>
Using activerecord 7.1.0
<snip>
Creating `GeneratedAssociationMethods` module for class ApplicationRecord
Creating `GeneratedAssociationMethods` module for class Person
Creating `GeneratedAssociationMethods` module for class Device
Creating `GeneratedAssociationMethods` module for class Computer
Creating `GeneratedAssociationMethods` module for class Smartphone
Creating `GeneratedAssociationMethods` module for class Vehicle
Creating `GeneratedAssociationMethods` module for class Car
Creating `GeneratedAssociationMethods` module for class Bike
------------------------------
filter_attributes output
------------------------------
Computer.filter_attributes: [:secret_attribute, :computer_key]
Smartphone.filter_attributes: [:secret_attribute, :smartphone_key]
Car.filter_attributes: [:secret_attribute, :car_key]
Bike.filter_attributes: [:secret_attribute, :bike_key]
------------------------------
associations method output
------------------------------
Computer.new.respond_to?(:person=): true
Smartphone.new.respond_to?(:person=): true
Car.new.respond_to?(:person=): true
Bike.new.respond_to?(:person=): true
Person.new.devices: #<Device::ActiveRecord_Associations_CollectionProxy:0x00007f901d233480>
Person.new.smartphones: #<Smartphone::ActiveRecord_Associations_CollectionProxy:0x00007f901d2659a8>
Person.new.computers: #<Computer::ActiveRecord_Associations_CollectionProxy:0x00007f901d2602c8>
Person.new.vehicles: #<Vehicle::ActiveRecord_Associations_CollectionProxy:0x00007f901d29eb90>
Person.new.cars: #<Car::ActiveRecord_Associations_CollectionProxy:0x00007f901d29d6a0>
Person.new.bikes: #<Bike::ActiveRecord_Associations_CollectionProxy:0x00007f901d29be90>
```

Here, the warning does not appear and the `filter_attributes` still contain all the attributes.

### System configuration
**Rails version**: `7.0.8` / `7.1.0`

**Ruby version**: 3.2.1

### Additional comments

As said before, I'm perfectly fine with this issue not being worked on any further, I just wanted to bring this to attention. One easy solution would be to only set the instance variables to `nil` if they were not previously defined (i.e. changing the 

```ruby
@filter_attributes = nil
@generated_association_methods = nil
```

code in `activerecord/lib/active_record/core.rb` to

```ruby
@filter_attributes ||= nil
@generated_association_methods ||= nil
```

If I understand correctly, this should not have a big impact on the performance, as these instance variables already were defined in the `belongs_to` and `filter_attributes` calls, which changed the shape of these objects. (Please correct me if I'm wrong). Maybe it could be worth checking if any of the other variables are also affected by such issues, these two are the only ones that I found. Please let me know if I should open a PR with an idea for a fix for this."
50002,Add all required gems to template,mylesboone,docs,2023-11-10T14:42:02Z,2023-11-10T17:03:11Z,2023-11-10T17:03:07Z,"### Motivation / Background

Sample bug reproduction template is missing a gem it relies on (minitest)

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
50001,"Primary key is not updated when using another mechanism than auto increment, such as Vitess sequences",dbussink,activerecord,2023-11-10T13:49:38Z,2023-11-10T20:57:40Z,,"### Steps to reproduce

When you run your Rails app against a sharded database using Vitess and when [Vitess sequences](https://vitess.io/docs/17.0/reference/features/vitess-sequences/) are used for primary keys, those are no longer set properly on the object when it is stored. 

At the MySQL protocol level, `last_insert_id` is still set and available. The problem is due to https://github.com/rails/rails/pull/48241 which hardcodes the assumption that you must be using the `auto_increment` flag on the primary key. In general, that is not recommended with Vitess since in case of wrong usage, you can generate duplicate primary keys on different shards. 

I was a bit surprised here that GitHub didn't already run into this as well, but @arthurschreiber has more details on why there. 

There are a few somewhat related issues where this assumption from the referenced PR also caused problems. https://github.com/rails/rails/pull/49955 seems to be a work in progress fix, but not 100% sure if that also solves this case. Also cc @fatkodima as the author of that PR who might know if it also resolves this issue.

### Expected behavior

The primary key value is filled in on the model.

### Actual behavior

The primary key value is missing and the value from `last_insert_id` is ignored.

### System configuration
**Rails version**:

7.1.1

**Ruby version**:

3.2.2"
50000,`ActiveRecord::Relation#order` supports hash like `ActiveRecord::Relation#where`,mylesboone,"activerecord, docs",2023-11-10T13:08:53Z,2023-12-11T17:48:10Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

`ActiveRecord::Relation` `where` has a nice hash-style interface for forming the `where` clause.
This PR enables a similar style for `order`, while maintaining all existing functionality.

ActiveRecord::Relation can take a hash where keys are table name, value is a hash of key (column name) and value (order direction). For example:

`Topic.includes(:posts).order(posts: { created_at: :desc })`

### Detail
Order can be passed several different arguments today:

a) `Topic.includes(:posts).order('posts.created_at')`
b) `Topic.includes(:posts).order('posts.created_at': :asc)`
c) `Topic.includes(:posts).order('posts.created_at', { follower_count: :desc }, 'posts.user_id desc' )`
d) `Topic.includes(:posts).order('posts.user_id', Post.arel_table[:created_at].desc)`

Each can be written re-written as a more structured hash:

a) `Topic.includes(:posts).order(posts: { created_at: :asc })`
b) `Topic.includes(:posts).order(posts: { created_at: :asc })`
c) `Topic.includes(:posts).order({ posts: { created_at: :asc } }, { topics: { follower_count: :desc } }, { posts: { user_id: :desc } })`
d) `Topic.includes(:posts).order(posts: { user_id: :asc, created_at: :desc })`

Or written in combination with the other existing strategies:

c) `Topic.includes(:posts).order('posts.created_at', { follower_count: :desc }, posts: { user_id: :desc})`
d) `Topic.includes(:posts).order({ posts: { user_id: :asc }}, Post.arel_table[:created_at].desc)`

It will properly reference table-name keys and maintains checks for directional keywords.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49999,Expect `ActiveRecord::Relation#order` to take `Arel::Attributes::Attribute` and properly `reference` joined table,mylesboone,"activerecord, With reproduction steps",2023-11-10T13:08:51Z,2023-11-24T09:30:02Z,,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
Topic.includes(:posts).order(Post.arel_table[:created_at])
```

### Expected behavior
<!-- Tell us what should happen -->
```ruby
Topic.includes(:posts).order(Post.arel_table[:created_at])
# SELECT ""topics"".""id"" AS t0_r0...""posts"".""id"" AS t1_r0...FROM ""topics"" LEFT OUTER JOIN ""posts"" ON ""posts"".""topic_id"" = ""topics"".""id"" ORDER BY ""posts"".""created_at""
```

### Actual behavior
<!-- Tell us what happens instead -->
```ruby
Topic.includes(:posts).order(Post.arel_table[:created_at])
# SELECT ""topics"".* FROM ""topics"" ORDER BY ""posts"".""created_at""
# ActiveRecord::StatementInvalid: PG::UndefinedTable: ERROR:  missing FROM-clause entry for table ""posts""
```

### System configuration
**Rails version**: 7.1.1

**Ruby version**: 3.2.2
"
49998,Fix renaming primary key index when renaming a PostgreSQL table having uuid primary key,fatkodima,activerecord,2023-11-10T12:02:01Z,2023-11-10T21:12:23Z,2023-11-10T20:44:00Z,"Fixes #49994.

Rails uses `gen_random_uuid()` function as a default for `uuid` primary key for PostgreSQL, which is not correctly fetched from the pg_catalog."
49997,[ci skip] Typo a/an,y0608,docs,2023-11-10T11:52:35Z,2023-11-10T12:41:37Z,2023-11-10T12:03:11Z,"This Pull Request has been created because there was a typo

This Pull Request changes ""an short-hand"" to ""a short-hand"""
49996,Add support for WITH PARSER for full text search indexes,Nerian,activerecord,2023-11-10T11:22:49Z,2023-11-24T09:18:03Z,,"### Motivation / Background

This PR adds support for the WITH PARSER option when creating a fulltext index in MYSQL.

### Detail

This Pull Request changes activerecord in order to support passing a `with_parser` option when creating an index.

### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49995,Fix links for the ActiveRecord readme [ci-skip],laicuRoot,activerecord,2023-11-10T10:53:06Z,2023-11-15T18:30:11Z,2023-11-14T19:46:26Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

While I was reading the documentation of ActiveRecord I noticed that the links are not working.

### Detail

This PR addresses that issue and changes the links to the right page of the API documentation.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49994,Primary key index not renamed when renaming table in Postgres when using UUIDs as pkey,jessevdp,"activerecord, PostgreSQL, With reproduction steps",2023-11-10T09:09:59Z,2023-11-10T20:44:01Z,2023-11-10T20:44:00Z,"### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""pg"", ""~> 1.1""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# Using some utility commands installed by PostgreSQL to setup a test database
dbname = ""test_postgres_uuid_rename_table""
system(""dropdb --username=postgres --force '#{dbname}'"")
system(""createdb --username=postgres '#{dbname}'"")

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""postgresql"", database: dbname)
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  enable_extension ""pgcrypto""
  enable_extension ""plpgsql""
end

class PostgresqlUuidPkeyRenameTableTest < Minitest::Test
  def setup
    @connection = ActiveRecord::Base.connection
    @connection.create_table :before_rename, id: :uuid, default: -> { ""gen_random_uuid()"" }, force: true
  end

  def teardown
    @connection.drop_table ""before_rename"", if_exists: true
    @connection.drop_table ""after_rename"", if_exists: true
  end

  def test_renaming_a_table_also_renames_the_primary_key_index
    assert_equal 1, num_indices_named(""before_rename_pkey"")
    assert_equal 0, num_indices_named(""after_rename_pkey"")

    @connection.rename_table :before_rename, :after_rename

    assert_equal 0, num_indices_named(""before_rename_pkey"")
    assert_equal 1, num_indices_named(""after_rename_pkey"")
  end

  private
    def num_indices_named(name)
      @connection.execute(<<~SQL).values.length
        SELECT 1 FROM ""pg_index""
          JOIN ""pg_class"" ON ""pg_index"".""indexrelid"" = ""pg_class"".""oid""
          WHERE ""pg_class"".""relname"" = '#{name}'
      SQL
    end
end
```

### Expected behavior

The primary index should change along with the table name, just like it happens for tables that don't make use of UUIDs as their primary key.

See: https://github.com/rails/rails/blob/main/activerecord/test/cases/adapters/postgresql/rename_table_test.rb

### Actual behavior

The index name on the primary key column does not get renamed.

### Related
* https://github.com/rails/rails/issues/12856

### System configuration
**Rails version**: 7.1 (main, see test script)

**Ruby version**: 3.2.2"
49993,Remove the git_source from gem bug report template,akhilgkrishnan,docs,2023-11-10T06:49:12Z,2023-11-24T10:02:28Z,2023-11-11T02:49:39Z,"### Motivation / Background

Currently `git_source` added to all our bug report template, but for gem template we are only using the rubygem source. Also its not required for the gem bug report templates.

### Detail

This Pull Request removes the `git_source` reference from all the gem bug_report templates.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49992,Warn unclarity filed if joined table has multiple fields with same name.,KessaPassa,activerecord,2023-11-10T03:42:57Z,2023-12-13T03:00:58Z,,"### Motivation / Background

this enhancement prevents an unintentional human error by developers.
this change helps to avoid a problem column name shadowing when `select('*')`with joined tables containing same column names.

### Detail

assume that you have models and records like this.
```ruby
class Post < ApplicationRecord
  scope :sort_by_station_matching, lambda { |near_station_ids|
    select('*')
      .select(""(#{select_near_station_match_count_query(near_station_ids)}) AS near_station_match_count"")
  }
  
  def select_near_station_match_count_query(railway_station_ids = [])
    return 'SELECT 0' if railway_station_ids.blank?
  
    <<~SQL.squish
      SELECT COUNT(stations.id)
      FROM stations
      WHERE stations.railway_station_id IN (#{railway_station_ids.join(',')})
    SQL
  end
end
```

posts table
id|created_at|updated_at
--|--|--
1|2023-08-03 14:30:23.040019000|2023-08-03 14:30:23.040019000

comments table
id|post_id|created_at|updated_at
--|--|--|--
2|1|2023-08-03 14:30:23.040019000|2023-08-03 14:30:23.040019000

then, the id field of the instance of post model got with joins method has unexpected value. 
```ruby
Post.joins(:comments).sort_by_station_matching.first
```

expected
```
#<User:0x0000000114db6388
 id: 1,
 near_station_match_count: 3,
 created_at:
  Thu, 03 Aug 2023 14:30:23.040019000 UTC +00:00,
 updated_at:
  Thu, 03 Aug 2023 14:30:23.040019000 UTC +00:00>
```

actual
```
#<User:0x0000000114db6388
 id: 2,
 near_station_match_count: 3,
 created_at:
  Thu, 03 Aug 2023 14:30:23.040019000 UTC +00:00,
 updated_at:
  Thu, 03 Aug 2023 14:30:23.040019000 UTC +00:00>
```

expected is `id: 1` from posts record but actual is `id: 2` from comments record .

at first, I thought this is a bug.
but, after more research understood that this is cause a column name shadowing.
this warning will help other developers.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49991,Avoid extra array allocation for `where(x: [...])`,jonathanhefner,activerecord,2023-11-09T22:12:22Z,2023-11-09T22:24:49Z,2023-11-09T22:24:49Z,"We do not need to construct an array of `nil`s; we merely need to determine whether any are present in the values array and remove them. Thus, we can use `compact!` instead of `extract!`.
"
49990,Let ActiveStorage::Blob#open return a tempfile for manual unlinking,bdewater,activestorage,2023-11-09T18:25:15Z,2023-11-20T01:28:17Z,,"### Motivation / Background

Wrapping code in a block is not always possible, this way it behaves more like stdlib Tempfile that can be unlinked manually.

### Additional information

Tempfile.create is recommended over Tempfile.new/open per the documentation: https://docs.ruby-lang.org/en/3.2/Tempfile.html

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49989,fix preposition in ActionView::Helpers::FormHelper comments,cjilbert504,actionview,2023-11-09T16:40:52Z,2023-11-09T17:03:21Z,2023-11-09T16:55:45Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because of an incorrect preposition in the comments describing the `index` method available on FormBuilder objects.

### Detail

This Pull Request changes ""into"" to ""in"" in a comment about the availability of the `index` method.

### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49988,Fix running db:system:change with no Dockerfile,skipkayhil,"railties, needs backport",2023-11-09T15:59:53Z,2023-11-09T16:58:42Z,2023-11-09T16:42:35Z,"### Motivation / Background

The db:system:change command was [updated][1] to include support for changing the database packages installed in the Dockerfile. However, it never checks that the Dockerfile exists before trying to perform a substitution and will raise an error when its missing:

```
/home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/actions/file_manipulation.rb:272:in `binread': No such file or directory @ rb_sysopen - /home/hartley/test/dev_minimal/Dockerfile (Errno::ENOENT)
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/actions/file_manipulation.rb:272:in `gsub_file'
        from /home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/generators/rails/db/system/change/change_generator.rb:47:in `edit_dockerfile'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/command.rb:28:in `run'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/invocation.rb:127:in `invoke_command'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/invocation.rb:134:in `block in invoke_all'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/invocation.rb:134:in `each'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/invocation.rb:134:in `map'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/invocation.rb:134:in `invoke_all'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/group.rb:232:in `dispatch'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/base.rb:584:in `start'
        from /home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/commands/db/system/change/change_command.rb:20:in `perform'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/command.rb:28:in `run'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor/invocation.rb:127:in `invoke_command'
        from /home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/command/base.rb:178:in `invoke_command'
        from /home/hartley/.cache/asdf/installs/ruby/3.2.2/lib/ruby/gems/3.2.0/gems/thor-1.3.0/lib/thor.rb:527:in `dispatch'
        from /home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/command/base.rb:73:in `perform'
        from /home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/command.rb:71:in `block in invoke'
        from /home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/command.rb:149:in `with_argv'
        from /home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/command.rb:69:in `invoke'
        from /home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/commands.rb:18:in `<top (required)>'
        from bin/rails:4:in `require'
        from bin/rails:4:in `<main>'
```

### Detail

This commit fixes the issue by checking first whether the Dockerfile exists before trying to perform any substitution on it.

[1]: ac9f08d1c354baab6362d7050a3c9e43db09689c

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49987,Automatically eager load TZInfo,casperisfine,activesupport,2023-11-09T15:56:24Z,2023-11-09T19:14:19Z,2023-11-09T19:14:19Z,"On the first call it can be a bit slow because it needs to load a bunch of data. It's also better to do it as part of boot so that some of that data is shared via Copy-on-Write
"
49986,Add `actionview` bug report template,seanpdoyle,docs,2023-11-09T15:13:01Z,2023-12-16T22:25:49Z,2023-12-16T18:33:31Z,"### Motivation / Background

Introduce Action View bug report templates for contributors to reproduce issues with failing `ActionView::TestCase` instances.

### Detail

In addition to rendering ERB with the `inline:` keyword, the sample tests also include a `Helpers` module to demonstrate how to incorporate view helpers into the reproduction script.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
"
49985,Update ActiveSupport::Cache::RedisCacheStore documentation [ci skip],kuranari,docs,2023-11-09T14:52:39Z,2023-11-10T01:55:06Z,2023-11-09T16:05:09Z,"
<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created to keep the documentation up to date with the following changes:
* https://github.com/rails/rails/issues/46149
* https://github.com/rails/rails/pull/46204

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49984,Add missing preload_link_tag method in ActionView helper guide [ci skip],aashishpsaini,docs,2023-11-09T14:24:25Z,2023-11-09T15:29:18Z,2023-11-09T15:25:45Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

### Detail

This Pull Request adds preload_link_tag in ActionView helper method guide.

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49983,Azure storage service dependency `azure-storage-blob` deprecated,ahukkanen,third party issue,2023-11-09T13:51:38Z,2023-11-24T11:29:07Z,,"### Steps to reproduce

1. Create a rails app
2. Within the Gemfile, add the following:
```
gem ""azure-storage-blob"", ""~> 2.0"", require: false
gem ""faraday"", ""~> 2.0""
```
3. Run `bundle --verbose`
4. See error

### Expected behavior
I would expect Rails applications to support newer versions of the Faraday gem because it is a popular dependency for many other gems that deal with HTTP requests.

Example gems that have this dependency:
- `json-jwt`
- `oauth2` (also works with Faraday version 1)
- `openid_connect`
- `rack-oauth2`
- `swd`
- `webfinger`

### Actual behavior
With any other dependency that relies on Faraday version 2 or above, the Azure storage cannot be used as instructed in the Active Storage documentation.

The Azure storage's dependency `azure-storage-blob` is deprecated as pointed out in the README of the project:
https://github.com/Azure/azure-storage-ruby

This means that [fixes that would solve the issue](https://github.com/Azure/azure-storage-ruby/pull/228) are not getting merged in a timely manner and the gem has to be forked in order to apply the necessary changes making it harder to maintain the dependencies.

### System configuration
**Rails version**: 6.1 (applies also to version 7)

**Ruby version**: 3.0.6
"
49982,Support enum definition with symbol values,jean-francois-labbe,activerecord,2023-11-09T11:41:55Z,2023-11-16T13:29:17Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because Enum definition with symbol values are not correctly typed_casted
reported here: https://github.com/rails/rails/issues/49981

Fixes #49981

### Detail
When an enum is defined with symbol values
`enum :status, { draft: :draft, published: :published }`
a warning or an exception could be raised to force fixing, same kind as invalid enum definition.
Not sure this is the correct approach since the value is correctly persisted.

I'd expect the enum symbol value to be converted to string to allow correct type_cast.

**Actual behavior**

the type_cast of a symbol value of an enum is always returning nil.

### Additional information


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49981,Enum definition with symbol values are not correctly typed_casted,jean-francois-labbe,"activerecord, attached PR, With reproduction steps",2023-11-09T11:37:24Z,2023-11-10T12:17:54Z,,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.string :status
  end
end

class Post < ActiveRecord::Base
  has_many :comments
  enum :status, { draft: :draft, published: :published }
end

class BugTest < Minitest::Test
  def test_enum_symbol_value_definition_returns_nil_when_accessed_on_record
    post = Post.create!(status: :draft)
    assert_equal 'draft', post.status
    # Failure:
    # BugTest#test_enum_symbol_value_definition_returns_nil_when_accessed_on_record [rails_enum_symbol_value_issue.rb:36]:
    # Expected: ""draft""
    #  Actual: nil
  end

  def test_enum_symbol_value_definition_breaks_predicates
    post = Post.create!(status: :draft)
    assert post.draft?
    # Failure:
    # BugTest#test_enum_symbol_value_definition_breaks_predicates [rails_enum_symbol_value_issue.rb:41]:
    # Expected false to be truthy.
  end

  def test_enum_symbol_value_definition_is_correclty_saved_in_database
    post = Post.create!(status: 'draft')
    assert_equal 'draft', post.attributes_before_type_cast['status']
  end
end
```

### Expected behavior
<!-- Tell us what should happen -->
When an enum is defined with symbol values
  `enum :status, { draft: :draft, published: :published }`
a warning or an exception could be raised to force fixing, same kind as invalid enum definition.
Not sure this is the correct approach since the value is correctly persisted.

I'd expect the enum symbol value to be converted to string to allow correct type_cast.

### Actual behavior
<!-- Tell us what happens instead -->
the type_cast of a symbol value of an enum is always returning `nil`.

### System configuration
**Rails version**: main (60d05cd)

**Ruby version**: 3.2.2
"
49980,has_one ... dependent: :destroy results in destruction of existing record's association on call to 'new',nemesit,activerecord,2023-11-09T10:53:38Z,2023-11-24T08:42:32Z,2023-11-24T08:42:32Z,"### Steps to reproduce

1. have a Model with a has_one: ..., dependent: :destroy relation
2. Save record with associated record to database
3. call new on the Model with an id of a persisted record and attributes for the has_one association
4. rails will destroy the association record for the persisted record instead of just creating an instance from the parameters

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""
  
  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }
  
  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :items, force: true  do |t|
  end
  
  create_table :categories, force: true  do |t|
    t.integer :item_id
    t.integer :some_attribute
  end
  
end

class Item < ActiveRecord::Base
  has_one :category, dependent: :destroy
  accepts_nested_attributes_for :category, allow_destroy: true
end

class Category < ActiveRecord::Base
  belongs_to :item
  validates :item, presence: true
end

class BugTest < Minitest::Test
  def test_new_destroying_records
    item = Item.create!
    category = item.create_category!
    
    assert_equal 1, Item.count
    assert_equal 1, Category.count
    
    # .new should in no case result in the destruction of records
    Item.new({id: item.id, category_attributes: { some_attribute: 1 }})
    
    assert_equal 1, Item.count     # success
    assert_equal 1, Category.count # fail
  end
end
```

### Expected behavior
A new instance should be created, no database access at all on Item.new

### Actual behavior
The existing category on the existing item gets destroyed.

### System configuration
**Rails version**: Rails 7.0.8

**Ruby version**: ruby 3.2.0 (2022-12-25 revision a528908271) [arm64-darwin21]
"
49979,Not only `save(validate: false)` but also `save!(validate: false)` triggers callbacks,ttanimichi,docs,2023-11-09T06:44:53Z,2023-11-13T01:27:07Z,2023-11-12T17:42:49Z,"Isn't it strange that the description only mentions `save`, `save!` and `save(validate: false)`, not `save!(validate: false)` ?

```sh
$ bin/rails -v
Rails 7.1.1

$ cat app/models/item.rb
class Item < ApplicationRecord
  after_save { puts 'Item saved' }

  validates :name, presence: true
end

$ bin/rails r 'Item.new.save(validate: false)'
Item saved

$ bin/rails r 'Item.new.save!(validate: false)'
Item saved

$ bin/rails r 'Item.new.save!'
/Users/ttanimichi/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activerecord-7.1.1/lib/active_record/validations.rb:84:in `raise_validation_error': Validation failed: Name can't be blank (ActiveRecord::RecordInvalid)
```
"
49978,rails 7.1 active_record column serialization documentation,salex,,2023-11-09T02:21:45Z,2023-11-09T11:48:31Z,2023-11-09T11:48:30Z,"### Steps to reproduce
I've  upgraded an 7.0.8 to 7.1.1 but I'm stuck trying to understand what has changed in Active Record Column serialization and how if move from 7.0 implementations (or earlier ) to the current.

I  probably have updated code going back to rails 5 or earlier with stuff like:

```ruby
 serialize :column, type: Hash
 # or older
serialize :column, Hash
serialize :column, Array
serialize :column, type: Array
serialize :settings, type: ActiveSupport::HashWithIndifferentAccess 
serialize :preferences, coder: JSON
```
The writing is on the wall to move everything to JSON YAML is dead. That would require a conversion script getting all to stuff to JSON, changing all the fields to coder JSON and replacing/importing. Maybe a couple thousand records and some time.

### Expected behavior

Is there any document that gives a little more documentation on column serialization? What :coder are available, what :type works (or worked)

I can keep 7.0 defaults for now, but the upgrade was a waste of time with not knowing what I was trying to do - upgrade!

### System configuration
**Rails version**:
7.0.8 to 7.1.1

**Ruby version**:
3.0.1
"
49977,Psych::DisallowedClass when loading fixtures,dylan-hoefsloot,,2023-11-09T00:24:21Z,2023-11-09T22:13:25Z,2023-11-09T22:13:20Z,"### Steps to reproduce
I upgraded ruby from `2.7.6` to `3.1.4`

Run any rspec tests which load fixtures that have a field that is a time

### Expected behavior
Fixtures are loaded and tests run

### Actual behavior
I get the following error when trying to run any specs
```
   Failure/Error: raise DisallowedClass.new('load', klassname)

       Psych::DisallowedClass:
         Tried to load unspecified class: Time
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixture_set/file.rb:50:in `raw_rows'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixture_set/file.rb:39:in `config_row'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixture_set/file.rb:29:in `model_class'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:685:in `block (2 levels) in read_fixture_files'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixture_set/file.rb:17:in `open'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:684:in `block in read_fixture_files'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:683:in `each'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:683:in `each_with_object'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:683:in `read_fixture_files'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:631:in `initialize'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:576:in `new'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:576:in `block in read_and_insert'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:574:in `map'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:574:in `read_and_insert'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/fixtures.rb:545:in `create_fixtures'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/test_fixtures.rb:223:in `load_fixtures'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/test_fixtures.rb:120:in `setup_fixtures'
       # /usr/local/bundle/gems/activerecord-6.0.6.1/lib/active_record/test_fixtures.rb:8:in `before_setup'
       # /usr/local/bundle/gems/activejob-6.0.6.1/lib/active_job/test_helper.rb:45:in `before_setup'
```

### System configuration
**Rails version**: 6.0.6.1
**Ruby version**: 3.1.4

### Solutions I have tried
Adding the following to `config/application.rb` (which is suggested in every other issue pertaining to this error I can find)
```
config.active_record.use_yaml_unsafe_load = true
config.active_record.yaml_column_permitted_classes = [Symbol, Hash, Array, ActiveSupport::TimeWithZone, ActiveSupport::TimeZone, ActiveSupport::HashWithIndifferentAccess, ActiveModel::Attribute.const_get(:FromDatabase), Time]
```

Confirming it is the fixtures throwing the error by commenting out
```
config.global_fixtures = :all
```

Confirming it is the time in the fixtures by commenting out usages such as
```
published_at: 2010-05-16 14:00
```

Downgrading back to `2.7.6` works but this is not ideal as I am trying to upgrade ruby to a newer version"
49976,"ActiveRecord 7.1 with ActiveSupport::Concurrency::NullLock doesn't keep the connection in the thread, PostgreSQLAdapter repeatedly calling load_types_queries",Amnesthesia,activerecord,2023-11-08T23:34:25Z,2023-11-09T05:27:58Z,2023-11-09T05:27:58Z,"We use multitenancy through a legacy gem that we haven't been able to get rid of yet (Apartment), and after upgrading from Rails 7.0 to 7.1 we noticed massively increased database load coming from a huge amount of slow calls looking like:
```
            SELECT t.oid, t.typname, t.typelem, t.typdelim, t.typinput, r.rngsubtype, t.typtype, t.typbasetype
            FROM pg_type as t
            LEFT JOIN pg_range as r ON oid = rngtypid
```

This seems to come from `PostgreSQLAdapter#load_types_queries`, and to debug this I added:

```
raise 'LOADING TYPE QUERIES'
rescue => e
  puts ""FROM: ""
  puts e.backtrace
```

Just so that it would print out the whole trace of where it was coming from and how it was getting there. It seems like every time the connection is being accessed, calling `active?` then calls `verify!`, and for some reason, `@raw_connection` is *always* nil now.


Comparing the source from 7.0 to 7.1, it seems to be related to how `ActiveRecord::ConnectionAdapters::AbstractAdapter` has changed to use `ActiveSupport::Concurrency::NullLock`, rather than `ActiveSupport::Concurrency::LoadInterlockAwareMonitor`. Forcibly changing this lock back seems to resolve the issue here, and `PostgreSQL#reload_type_map` is no longer being called, but this locking isn't configurable anywhere, and will always be set to use `NullLock`. 

### Steps to reproduce
Easiest way to get an overview of these queries being run I found was to add an exception, catch it and print the backtrace:

```
# in lib/active_record/connection_adapters/postgresql_adapter.rb

def load_types_queries(initializer, oids)
    query = <<~SQL
      SELECT t.oid, t.typname, t.typelem, t.typdelim, t.typinput, r.rngsubtype, t.typtype, t.typbasetype
      FROM pg_type as t
      LEFT JOIN pg_range as r ON oid = rngtypid
    SQL
    if oids
      yield query + ""WHERE t.oid IN (%s)"" % oids.join("", "")
    else
      yield query + initializer.query_conditions_for_known_type_names
      yield query + initializer.query_conditions_for_known_type_types
      yield query + initializer.query_conditions_for_array_types
    end
    raise 'Calling PostgreSQLAdapter#load_types_queries'
  rescue => e
    puts 'Callstack: '
    puts e.backtrace
  end
```

### Expected behavior
If the connection is being reset while still executing inside the same thread, then at least cache the results from the types queries to avoid firing this query again and again. On databases with large amounts of tables and/or schemas, this can be a very expensive query

### Actual behavior
Connection is being `reset!` and reconfigured repeatedly in the same thread, we're seeing this call 3-5 times per request on top of when switching schemas

### System configuration
**Rails version**: 7.1.1

**Ruby version**: 3.2.2
"
49975,remove duplicate test whose name doesn't match the tested method,cjilbert504,actionview,2023-11-08T21:51:42Z,2023-11-08T22:23:00Z,2023-11-08T22:06:21Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because in working on another PR I encountered a duplicate test. As you can see in the screenshot below the two tests are the same and the title for the duplicate test doesn't match the method that is actually being tested:
![CleanShot 2023-11-08 at 15 49 10](https://github.com/rails/rails/assets/54157657/1b590ccf-a876-479a-8c2f-481e7803f221)

### Detail

This Pull Request removes the duplicate test.

### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49974,Fix `RedisCacheStore#write_multi` with `:expires_in`,fatkodima,activesupport,2023-11-08T21:07:17Z,2023-11-08T22:12:58Z,2023-11-08T21:42:15Z,"Fixes #49973.

This options were extracted as keyword arguments and not used then."
49973,"Using redis_cache_store, Rails.cache.write_multi does not set TTL correctly",fcbr,"activesupport, attached PR, With reproduction steps",2023-11-08T20:42:17Z,2023-11-08T21:42:16Z,2023-11-08T21:42:16Z,"### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""redis""
end

require ""active_support""
require ""active_support/core_ext/object/blank""
require ""minitest/autorun""

class BugTest < Minitest::Test
  def test_redis_ttl

    redis = Redis.new
    cs = ActiveSupport::Cache.lookup_store(:redis_cache_store)
    cs.write('foo1', 'bar', expires_in: 10)
    cs.write_multi({ 'foo2' => 'bar' }, expires_in: 11)

    assert redis.ttl('foo1') != -1
    assert redis.ttl('foo2') != -1
  end
end
```

### Expected behavior

When using `Rails.cache.write_multi` with `expires_in`, the TTL of the keys should be set, just like `Rails.cache.write`.

### Actual behavior

No TTL is set (`redis.ttl key` returns -1).

### System configuration
**Rails version**: `main`, `7-0-stable`, `7-1-stable`

**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [arm64-darwin21]

**redis**: 6.2.8
"
49972,"Revert ""Port `BeforeTypeCast` to Active Model""",rafaelfranca,"activemodel, activerecord",2023-11-08T19:44:11Z,2023-11-08T19:57:27Z,2023-11-08T19:57:26Z,Reverts rails/rails#44534
49971,Name the connection pool reaper thread,composerinteralia,activerecord,2023-11-08T19:25:05Z,2023-11-08T19:52:07Z,2023-11-08T19:52:07Z,"Naming threads can be helpful for debugging (e.g. getting an overview of what's running with `Thread.list.map(&:name)` or `ps -T -p PID`).

We noticed our reaper didn't have a name, so this commit adds one.

We've intentionally kept the name short (< 15 characters), since there are platform limitations on the length of the underlying thread name.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49970,Pass along with_raw_connection params in PG adapter,composerinteralia,activerecord,2023-11-08T18:23:27Z,2023-11-08T19:55:05Z,2023-11-08T19:55:05Z,"Prior to this commit we were passing `allow_retry` and `materialize_transactions` through from `execute_and_clear` to `exec_cache`/`exec_no_cache`, but then doing nothing with them.

We've got a few internal queries using `execute_and_clear` (mostly via `internal_exec_query`) that are passing `allow_retry: true` and `materialize_transactions: false`. These calls will fail on connection errors that might have been retryable. It's also possible they are materializing transactions earlier than expected (although probably not—most of the methods look like they would be called only by us, always outside a transaction).

This commit forwards the arguments through to `with_raw_connection` so the callers get the behavior they likely expect.

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49969,ActiveJob: Remove unused `QueueAsJob` test job,aidanharan,activejob,2023-11-08T16:38:05Z,2023-11-09T09:32:36Z,2023-11-08T17:03:31Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

The PR just cleans up the `activejob/test/jobs/queue_as_job.rb` file, which contains a job that is not used by any tests.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49968,Parallel tests does not work when using `active_record.schema_format = :sql`,b3coded,,2023-11-08T15:15:44Z,2023-11-08T15:56:42Z,2023-11-08T15:56:42Z,"### Steps to reproduce
My parallel tests are crashing after changing the `active_record.schema_format` to `:sql` on `config/application.rb`.
Without this option, parallelization worked for me.

Steps:
1. add the configuration
2. run `RAILS_ENV=test rails db:setup` to configure the test database and generate the `structure.sql` file
3. run tests

### Expected behavior
No crashes

### Actual behavior
The tests are crashing with this output
```
Error:
ArticleTest#test_should_not_save_article_without_title:
ArgumentError: comparison of Integer with String failed
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/mysql/database_statements.rb:137:in `>'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/mysql/database_statements.rb:137:in `max_allowed_packet_reached?'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/mysql/database_statements.rb:127:in `block in combine_multi_statements'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/mysql/database_statements.rb:125:in `each'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/mysql/database_statements.rb:125:in `each_with_object'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/mysql/database_statements.rb:125:in `combine_multi_statements'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/mysql/database_statements.rb:86:in `execute_batch'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/abstract/database_statements.rb:201:in `block (2 levels) in truncate_tables'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:182:in `disable_referential_integrity'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/abstract/database_statements.rb:199:in `block in truncate_tables'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/mysql/database_statements.rb:117:in `with_multi_statements'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/abstract/database_statements.rb:198:in `truncate_tables'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/connection_adapters/abstract/query_cache.rb:22:in `truncate_tables'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/tasks/database_tasks.rb:221:in `truncate_tables'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/tasks/database_tasks.rb:368:in `reconstruct_from_schema'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/test_databases.rb:17:in `block in create_and_load_schema'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/test_databases.rb:14:in `each'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/test_databases.rb:14:in `create_and_load_schema'
  /bundle/ruby/3.0.0/gems/activerecord-6.1.0/lib/active_record/test_databases.rb:8:in `block in <module:TestDatabases>'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization/worker.rb:79:in `block in after_fork'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization/worker.rb:78:in `each'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization/worker.rb:78:in `after_fork'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization/worker.rb:24:in `block in start'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/fork_tracker.rb:10:in `block in fork'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/fork_tracker.rb:10:in `block in fork'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/fork_tracker.rb:8:in `fork'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/fork_tracker.rb:8:in `fork'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/fork_tracker.rb:26:in `fork'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/fork_tracker.rb:8:in `fork'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/fork_tracker.rb:26:in `fork'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization/worker.rb:15:in `start'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization.rb:37:in `block in start'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization.rb:36:in `times'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization.rb:36:in `each'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization.rb:36:in `map'
  /bundle/ruby/3.0.0/gems/activesupport-6.1.0/lib/active_support/testing/parallelization.rb:36:in `start'
```

### System configuration
**Rails version**:
6.1.0
**Ruby version**:
3.0.3"
49967,Update description for show_exceptions in environments/test.rb,p8,railties,2023-11-08T12:58:20Z,2023-11-08T17:55:46Z,2023-11-08T16:58:47Z,"In e28f147329330e7ae55606e62ecc3de328431f0b the `show_exceptions` default was updated to `:rescuable` in environments/test.rb.
The description still describes the old default value (`false`).

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49966,Add note for `method` argument in `button_to` in js guide,p8,docs,2023-11-08T11:01:42Z,2023-11-08T17:59:14Z,,"This section describes replacing UJS attributes with Turbo.
For example replacing `method` with `turbo_method`.
However, for `button_to` `method` should not be replaced with `turbo_method`,
as it's unrelated to UJS.
This could avoid some confusion.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49965,Eager load Journey Formatter cache,jhawthorn,actionpack,2023-11-08T04:39:39Z,2023-11-22T22:17:10Z,2023-11-08T21:08:11Z,This cache is used when url_for is called without a named route (ie. when it's called with hash options). Eager loading avoids building the cache on the first call and potentially allows the memory to be shared via CoW on forking servers.
49964,Add info to Testing Guide on filtering Rails tests [ci skip],matt17r,docs,2023-11-08T03:51:16Z,2023-11-10T21:03:48Z,,"- how Minitest works and names tests
- how to use `--name` and `--exclude` in a Rails app

### Motivation / Background

This Pull Request has been created because the testing guide isn't clear on how to filter Rails tests. Technically this is a minitest documentation issue but I've tried to tie it in with how Rails testing works.

### Checklist

* [x] This Pull Request is related to one change
* [x] Commit message has a detailed description of what changed and why
* [ ] ~~Tests are added or updated if you fix a bug or add a feature~~
* [ ] ~~CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature~~
"
49963,JRuby,Lillibugg101,,2023-11-08T02:22:43Z,2023-11-08T02:25:11Z,2023-11-08T02:24:53Z,
49962,Bump timeout to 0.4.1,yahonda,,2023-11-08T02:05:25Z,2023-11-08T02:24:03Z,2023-11-08T02:24:03Z,"### Motivation / Background

This commit addresses the following CI failure https://buildkite.com/rails/rails/builds/101658#018ba903-f8d8-4187-929c-fc7996bb17f3 by updating timeout gem `bundle update timeout --conservative`.

### Detail

- Without this fix
```ruby
$ ruby -v
ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]
$ cd guides/bug_report_templates
$ ruby action_controller_gem.rb
... snip
/home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/bundler-2.3.22/lib/bundler/runtime.rb:308:in `check_for_activated_spec!': You have already activated timeout 0.3.1, but your Gemfile requires timeout 0.4.1. Since timeout is a default gem, you can either remove your dependency on it or try updating to a newer version of bundler that supports timeout as a default gem. (Gem::LoadError)
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/bundler-2.3.22/lib/bundler/runtime.rb:25:in `block in setup'
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/bundler-2.3.22/lib/bundler/spec_set.rb:155:in `each'
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/bundler-2.3.22/lib/bundler/spec_set.rb:155:in `each'
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/bundler-2.3.22/lib/bundler/runtime.rb:24:in `map'
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/bundler-2.3.22/lib/bundler/runtime.rb:24:in `setup'
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/bundler-2.3.22/lib/bundler/inline.rb:66:in `block in gemfile'
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/bundler-2.3.22/lib/bundler/settings.rb:131:in `temporary'
	from /home/yahonda/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/bundler-2.3.22/lib/bundler/inline.rb:50:in `gemfile'
	from action_controller_gem.rb:5:in `<main>'
$
```

### Additional information
Refer to the similar changes
https://github.com/rails/rails/pull/45655
https://github.com/rails/rails/pull/45052 
https://github.com/rails/rails/pull/49663

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.


"
49961,"net.get(""/"") hangs in Rails::Engine::CommandsTest test_server_command_broadcast_logs",fredwillmore,railties,2023-11-08T01:37:19Z,2023-11-08T19:58:39Z,,"### Steps to reproduce
cd railties
bin/test test/engine/commands_test.rb:62

### Expected behavior
test should execute

### Actual behavior
test hangs on line 68
net.get(""/"")
I can see that the process with pid is running, but it doesn't seem to be reachable. I think I must have a system configuration issue but I don't know how to resolve it..

### System configuration
Apple M2 Pro
MacOs 13.6

**Rails version**:7.2.0.alpha

**Ruby version**: 3.2.2
"
49960,Eager load ActiveSupport::Callback procs,jhawthorn,activesupport,2023-11-08T00:19:45Z,2023-11-08T19:27:08Z,2023-11-08T19:27:01Z,Follow up to #49728 where these procs were allows to be shared between subclasses. This change allocates the procs as they are first declared.
49959,Duplicate database.yml,amy-hs,,2023-11-07T22:48:37Z,2023-11-07T22:50:37Z,2023-11-07T22:50:36Z,"### Question
Hello! We have an internal gem for replicas, but are working to migrate off of that to native Rails. Is it possible to have 2 different `database.yml` files (i.e. `database.yml` and `database_old.yml`) and conditionally load one based on some kind of environment toggle? Thanks!

### System configuration
**Rails version**: 6.0.6.1

**Ruby version**: 3.0.6
"
49958,Issue with RSpec::Matchers.define_negated_matcher and  active_support/core_ext/object/with.rb,vimalloc,,2023-11-07T22:36:36Z,2023-11-07T23:39:33Z,2023-11-07T23:39:32Z,"Hello!

We are running into an issue that was introduced when upgrading from rails 7.0.8 to 7.1.1, which is triggered by the newly added `Object#with` method.

### Steps to reproduce

* Define a negated matcher that can accepts`with` (ex: `enqueue_job.with('foo')`)
* Attempt to run a test using both the negated matcher and `with`
* Notice we receive a wrong number of arguments error, and that the stacktrace indicates that it's trying to call `Object#with`, as defined in `activesupport-7.1.1/lib/active_support/core_ext/object/with.rb`

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""
  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }
  gem ""sqlite3""
  gem 'rails', '~> 7.1'
  gem 'rspec-rails'
end

require ""rails/all""

ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)
ActiveJob::Base.queue_adapter = :test

require 'rspec/rails'
require 'rspec/autorun'

# This is the thing that is eventually leading to an ArgumentError being raised when it shouldn't
RSpec::Matchers.define_negated_matcher(:not_enqueue_job, :enqueue_job)

RSpec.describe 'downcase' do
  it 'works' do
    expect('Foo'.downcase).to eq('foo')
  end

  it 'does not enqueue a job' do
    expect { 'Foo'.downcase }.to not_enqueue_job.with('Bar')
  end
end
```

### Expected behavior
The test passes.

### Actual behavior
```
  1) downcase does not enqueue a job
     Failure/Error: expect { 'Foo'.downcase }.to not_enqueue_job.with('Bar')

     ArgumentError:
       wrong number of arguments (given 1, expected 0)
     # ./example_spec.rb:30:in `block (2 levels) in <top (required)>'
```

### Notes:
This is happening with a few different matchers we use, not just the `not_enqueue_job` one. We are using these negated matchers because we have a lot of specs that assert a couple different things using `.and <negated_matcher>`. 

Rspec-mocks ran into a similar issue as this: https://github.com/rspec/rspec-mocks/issues/1530.

### System configuration
**Rails version**:
7.1.1

**Ruby version**:
3.2.2
"
49957,Update documentation in asset_tag_helper.rb [ci-skip],gjtorikian,actionview,2023-11-07T22:09:31Z,2023-11-07T22:48:55Z,2023-11-07T22:48:53Z,"Just a wee bit of visualization changes to make it more explicitly clear what is being passed (a quoted number).

I found the lack of visualization on the docs site a bit hard to understand."
49956,[Fix #49104] Add server response (xhr) to direct-upload:error event.,seanabrahams,activestorage,2023-11-07T21:02:13Z,2023-11-08T17:12:50Z,,"### Motivation / Background

Fixes #49104

This Pull Request has been created because ActiveStorage's javascript does not provide access to the server response for error messaging when an error occurs during a direct upload.

This is a problem because we cannot distinguish between an upload failing due to authorization or the file being too large or any other validation error.

### Detail

This Pull Request changes the error event to include the `xhr` object so that the server response is accessible to error handling code. This allows us to display the specific issues that caused the upload to be rejected such as:
- You must be an admin to upload this file.
- File must be less than 100MB.
- Uploading .exe files is not permitted.

Before:
```javascript
addEventListener(""direct-upload:error"", event => {
  event.preventDefault()
  const { id, error } = event.detail
  const element = document.getElementById(`direct-upload-${id}`)
  element.classList.add(""direct-upload--error"")
  element.setAttribute(""title"", error)
})
```

After:
```javascript
addEventListener(""direct-upload:error"", event => {
  event.preventDefault()
  const { id, error, xhr } = event.detail
  const element = document.getElementById(`direct-upload-${id}`)
  const errorMessage = xhr.response['error'] // Example: File size must be less than 100MB
  element.classList.add(""direct-upload--error"")
  element.setAttribute(""title"", errorMessage)
})
```

### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature. **Are there tests for the javascript code? If so, where?**
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49955,Auto populate primary key column for updatable database views,fatkodima,activerecord,2023-11-07T20:18:00Z,2023-12-06T14:44:24Z,,"Fixes #49950.

Some databases (PostgreSQL, MySQL, MariaDB) support updatable `VIEW`s. Why not get the primary key's value automatically (via `RETURNING`, for the databases that support it) when inserting a record? This PR addresses this problem."
49954,Recover from failed connections in PostgreSQL [7-1 backport],composerinteralia,activerecord,2023-11-07T16:27:33Z,2023-11-07T17:57:09Z,2023-11-07T17:56:30Z,Backports https://github.com/rails/rails/pull/49802 to 7-1-stable
49953,Unable to combine in_order_of with distinct while using postgresql,mkasztelnik,"activerecord, With reproduction steps",2023-11-07T16:19:45Z,2023-11-15T07:55:11Z,,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->
We have a list of records with the preferred status order and joins leading to no-unique results. As a result, we want to combine `in_order_of` with `distinct`. This works fine with `mysql` and `sqlite` but fails on `postgresql`

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  # gem ""sqlite3""
  gem ""pg""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
# ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.establish_connection(
  adapter: 'postgresql',
  encoding: 'unicode',
  # host: ENV.fetch(""POSTGRES_HOST"", ""127.0.0.1""),
  # port: ENV.fetch(""POSTGRES_PORT"", 5432),
  database: 'rails_dev'
)
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :users, force: true do |t|
    t.string :state
  end
end

class User < ActiveRecord::Base
end

class BugTest < Minitest::Test
  def test_distint_with_in_order_of
    User.create! state: ""a""
    User.create! state: ""b""
    User.create! state: ""c""

    result = User.in_order_of(:state, [""c"", ""a"", ""b""]).distinct
    assert_equal [""c"", ""a"", ""b""], result.map(&:state)
  end
end

```

### Expected behavior
<!-- Tell us what should happen -->
Unique records returned in defined order

### Actual behavior
<!-- Tell us what happens instead -->
```
Error:
BugTest#test_distint_with_in_order_of:
ActiveRecord::StatementInvalid: PG::InvalidColumnReference: ERROR:  for SELECT DISTINCT, ORDER BY expressions must appear in select list
LINE 1: ...WHERE ""users"".""state"" IN ('c', 'a', 'b') ORDER BY CASE WHEN ...
                                                             ^

    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:896:in `exec_params'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:896:in `block (2 levels) in exec_no_cache'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1031:in `block in with_raw_connection'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1003:in `with_raw_connection'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:895:in `block in exec_no_cache'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1141:in `log'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:894:in `exec_no_cache'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:874:in `execute_and_clear'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:61:in `internal_exec_query'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:628:in `select'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:114:in `select_all'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/relation.rb:983:in `block in exec_main_query'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/relation.rb:1003:in `skip_query_cache_if_necessary'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/relation.rb:969:in `exec_main_query'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/relation.rb:947:in `block in exec_queries'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/relation.rb:1003:in `skip_query_cache_if_necessary'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/relation.rb:941:in `exec_queries'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/relation.rb:727:in `load'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/relation.rb:264:in `records'
    /home/marek/.asdf/installs/ruby/3.2.1/lib/ruby/gems/3.2.0/bundler/gems/rails-d53ef2c18073/activerecord/lib/active_record/relation/delegation.rb:99:in `each'
    distinct-in_order_of-postgresql-bug.rb:53:in `map'
    distinct-in_order_of-postgresql-bug.rb:53:in `test_distint_with_in_order_of'
```
The ugly solution right now is to add dedicated select section:

```ruby
User
  .select(""users.*, CASE WHEN users.state = 'c' THEN 1 WHEN users.state = 'a' THEN 2 WHEN users.state = 'b' THEN 3 END"")
  .in_order_of(:state, [""c"", ""a"", ""b""]).distinct
```
But it is fragile and can change even when updating between bug fix rails release (e.g. https://github.com/rails/rails/pull/45670 introduced in rails 7.0.7)


### System configuration
**Rails version**:
Tested from `7.0.5` till `main`

**Ruby version**:
Tested with ruby `3.2.1`"
49952,Fix using actiontext.js in sprocket,mgrunberg,actiontext,2023-11-07T13:52:29Z,2023-11-08T20:30:19Z,2023-11-08T20:30:19Z,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fixes https://github.com/rails/rails/issues/49814

`actiontext.js` is compiled as an ESM bundle instead of a UMD bundle. This leads to issues when trying to use ActionText with sprockets because the ESM bundle declares variables like they are scoped to the file but sprockets will see them as scoped globally. This is a problem, in particular, if you want to mix `actiontext` with `turbo-rails`.

The problem was introduced in https://github.com/rails/rails/pull/46447. I traced valid sprocket compilation back to https://github.com/rails/rails/pull/42895.

### Detail

This PR retains app/assets/javascripts/actiontext.js as a UMD package for backward compatibility with
bundling in the asset pipeline, but also adds app/assets/javascripts/actiontext.esm.js for use
with ESM via importmap in the browser.

It's a mimic of changes made to ActiveStorage in
https://github.com/rails/rails/pull/42895

### Additional information

<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->
@rails/actiontext is the only package with a different rollup configuration.

See [@rails/ujs](https://github.com/rails/rails/blob/v7.1.1/actionview/rollup.config.js), [@rails/activestorage](https://github.com/rails/rails/blob/v7.1.1/activestorage/rollup.config.js) and [@rails/actioncable](https://github.com/rails/rails/blob/v7.1.1/actioncable/rollup.config.js)
"
49951,`ErrorReporter#unexpected` to report in production but raise in development,byroot,"activesupport, railties",2023-11-07T13:05:31Z,2023-11-20T08:55:11Z,2023-11-20T08:55:11Z,"It's a common useful pattern for situation where something isn't supposed to happen, but if it does we can recover from it.

So in such situation you don't want such issue to be hidden in development or test, as it's likely a bug, but do not want to fail a request if it happens in production.

In other words, it behaves like `#record` in development and test environments, and like `raise` in production.

Fix: https://github.com/rails/rails/pull/49638
Fix: https://github.com/rails/rails/pull/49339

Co-Authored-By: Andrew Novoselac <andrew.novoselac@shopify.com>
Co-Authored-By: Dustin Brown <dbrown9@gmail.com>"
49950,The object does not have an `id` if it is an instance of a Rails model in which the table is a Postgres view.,wrmk,"activerecord, PostgreSQL, With reproduction steps",2023-11-07T11:16:24Z,2023-11-07T12:38:18Z,,"### Steps to reproduce
The object does not have an `id` if it is an instance of a Rails model in which the table is a Postgres view.

This worked in Rails v7.0.8 and fails in v7.1.1.
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.1.0""
  gem ""pg"", ""~> 1.5.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Base.establish_connection(ENV.fetch(""DATABASE_URL"", ""postgres:///""))
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Base.connection.exec_query(<<~SQL)
  create temporary table animals (
    id int primary key generated by default as identity,
    name text not null
  );
SQL

ActiveRecord::Base.connection.exec_query(<<~SQL)
  create temporary view dogs as SELECT animals.id, animals.name FROM animals;
SQL

class Dog < ActiveRecord::Base
  self.primary_key = :id
end

class BugTest < Minitest::Test
  def test_id_is_returned
    dog = Dog.create!(name: ""Jack"")
    assert(dog.id)
  end
end

```

### Expected behavior
`dog.id` should have the value from the database.

### Actual behavior
`dog.id` is `nil`

### System configuration
**Rails version**: 7.1.1

**Ruby version**: 3.2.2
"
49949,superclass mismatch for class ProfileReporter (TypeError),lowercase,,2023-11-07T09:45:01Z,2023-11-07T10:39:02Z,2023-11-07T10:39:02Z,"### Steps to reproduce
install rails-7.1.1 railties-7.1.1

after `rails test` get error:
```
/app/vendor/bundle/ruby/3.2.0/gems/railties-7.1.1/lib/minitest/rails_plugin.rb:28:in `<module:Minitest>': superclass mismatch for class ProfileReporter (TypeError)
        from /app/vendor/bundle/ruby/3.2.0/gems/railties-7.1.1/lib/minitest/rails_plugin.rb:7:in `<main>'
        from <internal:/usr/local/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
        from <internal:/usr/local/lib/ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
        from /app/vendor/bundle/ruby/3.2.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
        from /app/vendor/bundle/ruby/3.2.0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'
        from /app/vendor/bundle/ruby/3.2.0/gems/minitest-5.20.0/lib/minitest.rb:121:in `block in load_plugins'
        from /app/vendor/bundle/ruby/3.2.0/gems/minitest-5.20.0/lib/minitest.rb:115:in `each'
        from /app/vendor/bundle/ruby/3.2.0/gems/minitest-5.20.0/lib/minitest.rb:115:in `load_plugins'
        from /app/vendor/bundle/ruby/3.2.0/gems/minitest-5.20.0/lib/minitest.rb:144:in `run'
        from /app/vendor/bundle/ruby/3.2.0/gems/minitest-5.20.0/lib/minitest.rb:86:in `block in autorun'
```

### Expected behavior
no error

### Actual behavior
raises error

### System configuration
**Rails version**:
7.1.1
**Ruby version**:
3.2.2"
49948,Fix grammer in railties changelog,ghiculescu,railties,2023-11-07T09:31:24Z,2023-11-07T23:57:52Z,2023-11-07T09:59:54Z,"cc @byroot
"
49947,Enable YJIT by default if running Ruby 3.3+,byroot,railties,2023-11-07T08:26:35Z,2023-11-07T15:32:22Z,2023-11-07T09:00:50Z,"There was many public reports of 15-25% latency improvements for Rails apps that did enable Ruby 3.2 YJIT, and in 3.3 it's even better.

Following https://github.com/ruby/ruby/pull/8705, in Ruby 3.3 YJIT is paused instead of disabled by default, allowing us to enable it from an initializer.

FYI: @maximecb, @k0kubun, @XrXr "
49946,Rename primary shard to default within documentation,frostmark,docs,2023-11-07T04:04:42Z,2023-11-07T16:20:59Z,,"### Motivation / Background

Hi everyone!

I've [come across a problem](https://github.com/rails/rails/issues/49896) despite following the instructions for setting up sharding as outlined in the documentation. The trouble arose from a discrepancy where the documentation states that the ""primary"" database should be used by default. However, in reality, the ""default"" database is what's utilized. I believe this is somewhat misleading, so I've decided to make a correction in the documentation.

### Detail

Replaced ""primary"" to ""default"" to avoid misleading


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49945,Rename primary shard to default,frostmark,docs,2023-11-07T03:59:20Z,2023-11-07T04:01:20Z,2023-11-07T04:00:31Z,"### Motivation / Background

Hi everyone!

I've come across a problem (link) despite following the instructions for setting up sharding as outlined in the documentation. The trouble arose from a discrepancy where the documentation states that the ""primary"" database should be used by default. However, in reality, the ""default"" database is what's utilized. I believe this is somewhat misleading, so I've decided to make a correction in the documentation.

This Pull Request has been created because [REPLACE ME]

### Detail

Just replaced ""primary"" to ""default"" to avoid misleading

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49944,Add connection pool to connection timeout errors,composerinteralia,activerecord,2023-11-07T02:52:03Z,2023-11-07T18:33:04Z,2023-11-07T18:33:03Z,"Along the same lines as https://github.com/rails/rails/pull/48295, in multi-database applications it's helpful to have access to the pool when debugging these timeouts. For example, we might send the connection class and role along to an exception tracking system.

`ConnectionTimeout` was already set up to take a connection_pool, so this commit passes it along as needed where we raise the error.

Somewhat related to https://github.com/rails/rails/issues/49331. Whether we want more details in the message itself, or a more generic way of passing error context, seems like an ongoing subject outside the scope of this PR.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49943,Handle nil form_with model argument,cjilbert504,"actionview, ready",2023-11-07T00:27:59Z,2023-12-10T12:55:02Z,,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

First, thank you to everyone here for taking the time to read this description.

I would like to propose a possible change to the `form_with` method which would help provide, in my opinion, better debugging around an issue that can be encountered when passing a `nil` object to the `model:` argument in the `form_with` method.

I have come across this issue a few times myself and I know others that have as well. The most recent encounter was from a newer Rails developer that myself and others have been helping along in the process of learning Rails. 

The issue actually shows up in two ways, the first is if the form is on an index page, having nil passed to the `:model` argument this will raise an `ActionController::ParameterMissing` error. The other is in the default scenario of being on the new page and having `nil` passed to the `:model` argument. In this scenario, an `ActionController::RoutingError (No route matches [POST] ""/posts/new"")` (using `Post` model as an example). This happens because of Rails falling back to building the URL from the current page in this scenario.

Going back to the first form of this causing an error, I would like to outline the flow of the issue so that everyone can (hopefully) have a better understanding of this issue.

---
**Junior Dev**: I'm having an issue using strong parameters. Has there been a change in rails 7 when using strong parameters?
```ruby
def url_link_params
  params.require(:url_link).permit(:url)
end
```
where the model name is UrlLink. When I try to submit my form, I get the following error:
```ruby
ActionController::ParameterMissing (param is missing or the value is empty: url_link)
```
When I remove require and just use params.permit(:url), I can submit the form.
I'm confused, I setup my form with `form_with(model: url_link)` and have a url input field `form.url_field :url`.

**Me**: I see that you have a mismatch in instance variable naming between the instance variable declared in the controller action versus what is being passed in as a local to the form partial:
```ruby
def index
  @link = UrlLink.new
end

<%= render partial: ""form"", locals: { url_link: @url_link } %>
```

**Junior Dev**: Thanks, I fixed the mismatch and my form and controller are working now.

With this context, I think it would have been a better debugging experience for the junior if instead of the `ActionController::ParameterMissing` error being raised thus causing the junior to think it was a strong params issue (which it sort of is I admit) I think it would be more helpful to raise an `ArgumentError` when passing in a `nil` object to the `model:` argument in `form_with`.

---

### Detail

This PR changes the default value of the `model:` argument in `form_with` to `false` instead of `nil` and raises an `ArgumentError` in the event that the argument is `nil`.
```ruby
def form_with(model: false, other_args)
  raise ArgumentError, ""Form model object is nil"" if model.nil?
end
```

I tried to think reasons/scenarios of why/where `false` wouldn't be a suitable replacement for `nil` as the default value for the `model:` argument but I couldn't think of any (I'm not saying there isn't a case though and would love to hear so if there are any).

It also changes a local variable that is set in a case statement in the `form_for` method from `nil` to `false` which is needed to allow `form_for` to continue to call `form_with` successfully.

### Additional information

Thank you for taking the time to read this and for any thoughts or feedback about it.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49942,Routing `defaults:` values aren't overridden by request's values,seanpdoyle,"actionpack, With reproduction steps",2023-11-06T23:02:17Z,2023-11-07T19:25:47Z,2023-11-07T19:25:47Z,"### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_controller/railtie""

class TestApp < Rails::Application
  config.root = __dir__
  config.hosts << ""example.org""
  config.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger

  routes.draw do
    get ""/"" => ""test#index"", defaults: { value: ""original"" }
  end
end

class TestController < ActionController::Base
  include Rails.application.routes.url_helpers

  def index
    render plain: params[:value]
  end
end

require ""minitest/autorun""
require ""rack/test""

class BugTest < Minitest::Test
  include Rack::Test::Methods

  def test_returns_success
    get ""/?value=override""

    assert_not_equal ""original"", last_response.body
    assert_equal ""override"", last_response.body
  end

  private
    def app
      Rails.application
    end
end
```

### Expected behavior

The `""override""` value passed as the request's `?value=override` query parameter would override the `defaults: { value: ""original"" }` option declared as part of the route when accessed by the `params[:value]` helper in the controller.

That String would then be rendered as the response's body.

### Actual behavior

The `""original""` String that's assigned as part of the route-based `defaults: { value: ""original"" }` option isn't being overridden by a request-based value from the `?value=override` query parameter.

### System configuration
**Rails version**: `main@8d778e0708`

**Ruby version**: `3.2.0`
"
49941,Adds the parse_json_times option to ActiveSupport::JSON#decode,codergeek121,activesupport,2023-11-06T21:28:38Z,2023-11-24T22:29:39Z,,"### Motivation / Background

I wanted to parse JSON and instantiate times. It's basically implemented in `ActiveSupport::JSON`, but I can't use it without changing a global config.

### Detail

This PR adds a `parse_json_times:` keyword argument to the `decode` method, to opt-in in the times parsing capabilities on a per method call basis.

* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
49940,Using empty string for ActionView `template_path`,mwilde345,actionview,2023-11-06T19:59:33Z,2023-11-16T21:21:46Z,2023-11-16T21:21:41Z,"I just upgraded to Rails 7 and I had to make a change to my template paths that leaves me a bit confused.

I had to change `'./'` custom template path to `''` empty string in order for ActionView to find the correct template.

### Steps to reproduce

Project structure:
```
app
- members
- - member_mailer.rb
- - invite_member_email.erb
```

`member_mailer.rb`:
```
module Members
  class MemberMailer < ActionMailer::Base
    append_view_path Rails.root.join('app', 'members')

    default template_path: './'
    default template_name: 'invite_member_email'

    def invite_email
      mail(to: params[:to], subject: params[:subject])
    end
  end
end
```

### Expected behavior
ActionView finds the `invite_member_email` template in `app/members`

### Actual behavior
```
ActionView::MissingTemplate:
    Missing template .//invite_member_email with ""mailer"".

    Searched in:
      * ""./""
```

So I now have to use an empty string as template_path so it will search in `app/members` for `/invite_member_email`. This makes for a bit of code that is confusing to read initially. Is this a bug?

If i leave out `template_path` completely, then:

```
  ActionView::MissingTemplate:
    Missing template members/member_mailer/invite_member_email with ""mailer"".

    Searched in:
      * ""members/member_mailer""
```

It looks in the default path ActionView would expect. My custom path `app/members` is ignored now. Same result with `prepend_view_path` and `append_view_path`. Is `template_path` required when `template_name` is specified? Don't see that called out here: https://guides.rubyonrails.org/action_mailer_basics.html#mailer-views

### System configuration
**Rails version**: 7.0

**Ruby version**: 2.7.5
"
49939,Cannot load schema.rb into test database.,marlinpierce,,2023-11-06T17:08:42Z,2023-11-06T19:27:22Z,2023-11-06T19:27:21Z,"### Steps to reproduce

Creating a test database running this task from the command line:

    RAILS_ENV=test bundle exec rails db:schema:load

### Expected behavior

Should populate the database schema from the `schema.rb` file.

### Actual behavior

Error message:

> ActiveRecord::StatementInvalid: Mysql2::Error: Table 'ac_test.bugs' doesn't exist

### System configuration

    Rails 6.1.7.6
    ruby 2.7.6p219

"
49938,Cannot create test database using db:create task.,marlinpierce,,2023-11-06T17:04:50Z,2023-11-06T19:27:12Z,2023-11-06T19:27:11Z,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

From the command line:

    RAILS_ENV=test bundle exec rails db:create

also for

    RAILS_ENV=test bundle exec rake db:create

### Expected behavior

Should create the test database after it has been dropped.

### Actual behavior

Error message:

> ActiveRecord::NoDatabaseError: Unknown database 'ac_test'

### System configuration

    Rails 6.1.7.6

    ruby 2.7.6p219
"
49937,Set-Cookie header in array,valenciaj,,2023-11-06T16:28:14Z,2023-11-06T16:33:36Z,2023-11-06T16:33:35Z,"Hi there!

My rails app it's sending *Set-Cookie* header value inside string array, but works properly in development environment (rails 7.1.1 / ruby 2.7.3p183).

Example:
![session](https://github.com/rails/rails/assets/1530604/e9e79827-41da-4b6a-8e13-ab74c4151a07)

### Steps to reproduce
Just on the first browser request

### Expected behavior
Send the value without squarebrackets and without quotes

### Actual behavior
The value is inside a String Array

### System configuration
**Rails version**: 7.1.1

**Ruby version**: 2.7.5p203
"
49936,"Docs: Replace ""off"" with `false` [ci skip]",seanpdoyle,activerecord,2023-11-06T14:20:36Z,2023-11-25T14:27:48Z,2023-11-06T17:27:02Z,"### Detail

Replace a reference to a default `""off""` value in the `ActiveRecord::NestedAttributes` module with the actual default value: `false`.
"
49935,Rails.cache.redis is returning ConnectionPool instead of Redis object,drgcms,activesupport,2023-11-06T07:15:04Z,2023-11-06T10:00:11Z,2023-11-06T10:00:11Z,"### Steps to reproduce
Update from Rails 7.0.x to 7.1.1

```ruby
Rails.cache.redis.del(key) 
```

### Expected behavior
success

### Actual behavior
`cache_clear': undefined method `del' for #<ConnectionPool:0x00007fec5c7b1150 @size=5, @timeout=5, @auto_reload_after_fork=true, @available=#<ConnectionPool::TimedStack:0x00007fec5c7b1100 @create_block=#<Proc:0x00007fec5c914650 /home/rails/drg_cms_test/vendor/ruby/3.2.0/gems/activesupport-7.1.1/lib/active_support/cache/redis_cache_store.rb:150>, @created=0, @que=[], @max=5, @mutex=#<Thread::Mutex:0x00007fec5c9145d8>, @resource=#<Thread::ConditionVariable:0x00007fec5c914588>, @shutdown_block=nil>, @key=:""pool-4820"", @key_count=:""pool-4820-count""> (NoMethodError)


### System configuration
Rails 7.1.1
Ruby 3.2.2


I inspected the code and it looks that this code is picking some default settings, which were not used in 7.0.x tree.

```ruby
        # around line 150 in ../active_support/cache/redis_cache_store.rb
        if pool_options = self.class.send(:retrieve_pool_options, redis_options)
          @redis = ::ConnectionPool.new(pool_options) { self.class.build_redis(**redis_options) }
        else
          @redis = self.class.build_redis(**redis_options)
        end
```

My redis configuration:
```ruby
 config.cache_store = :redis_cache_store, { url: ""redis://localhost:6379/15"", expires_in: 1.day }
```

Reverting to 7.0.8 and it works as expected.

by
TheR
"
49934,Fix PostgreSQL `Uuid#change?` to ignore uuid's value formatting,fatkodima,activerecord,2023-11-05T21:51:15Z,2023-11-06T19:19:51Z,2023-11-06T12:10:48Z,"When assigning to record's `uuid` value in PostgreSQL, `#changed?` only considers the case of the values. It should be agnostic of the format passed as a value, because PostgreSQL is flexible in the format it accepts - https://www.postgresql.org/docs/current/datatype-uuid.html.

Example:
```ruby
user = User.create! # => #<User:0x0000000110ce3f40 id: ""7818f152-0b57-499d-b2e5-a42aced4031b"">
user.id = user.id.upcase
user.changed? # => false (correct and is already implemented)

user.id = ""{#{user.id}}""
user.changed? # => true, but should be false (fixed in this PR)
```"
49933,Update `.gitattributes` for generated JavaScript [ci-skip],jonathanhefner,"actionview, actioncable, activestorage, actiontext",2023-11-05T21:48:56Z,2023-11-05T21:51:15Z,2023-11-05T21:51:15Z,"This adds `linguist-generated` and `linguist-vendored` attributes where appropriate to suppress the files in diffs and exclude the files from the project's language stats on GitHub.

See https://github.com/github/linguist for more information.
"
49932,Add `JavascriptPackageTest` for Action Text,jonathanhefner,actiontext,2023-11-05T21:28:59Z,2023-11-05T21:47:40Z,2023-11-05T21:47:40Z,"This mirrors the existing `JavascriptPackageTest` tests for UJS, Action Cable, and Active Storage.
"
49931,Update `JavascriptPackageTest` tests,jonathanhefner,"actionview, actioncable, activestorage",2023-11-05T21:14:41Z,2023-11-05T21:27:45Z,2023-11-05T21:27:45Z,"This fixes an issue with `JavascriptPackageTest` tests wherein the tests would pass when the source failed to compile due to a syntax error.  In such cases, the compiled output would not change and `system ""yarn build""` would simply return `false`.  By adding `exception: true` to the `system` call, an error will now be raised if `yarn build` fails.

This also adds assertions that were missing for some of the generated JavaScript files.
"
49930,Fix sqlite3 dropping database with bad permissions test,fatkodima,railties,2023-11-05T20:57:47Z,2023-11-06T22:35:02Z,,"Fixes #49928.

It fails here https://github.com/rails/rails/blob/febd21da3438d190f0c6ce296a114baee983d1e1/activerecord/lib/active_record/railties/databases.rake#L19 when trying to create a new connection down the road because of this recent change https://github.com/rails/rails/blob/febd21da3438d190f0c6ce296a114baee983d1e1/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb#L762 which tries to create WAL files.

We can ignore checking protected environments by setting an ENV variable, see https://github.com/rails/rails/blob/febd21da3438d190f0c6ce296a114baee983d1e1/activerecord/lib/active_record/tasks/database_tasks.rb#L65-L71
"
49929,Failing to upgrade from 7.1.rc2 to 7.1: stack level too deep,devaniljr,"activesupport, third party issue",2023-11-05T20:19:29Z,2023-11-23T12:31:43Z,2023-11-06T01:53:30Z,"Everytime I try to upgrade from Rails 7.1.rc2 to 7.1.0 or 7.1.1 I get an error `stack level too deep`

The looping starts here:

`activesupport (7.1.1) lib/active_support/core_ext/object/json.rb`

```rb

class Object
  def as_json(options = nil) # :nodoc:
    if respond_to?(:to_hash)
      to_hash.as_json(options)
    else
      instance_values.as_json(options)
    end
  end
end
```
```rb
    else
      self
    end
    result = {}
    subset.each do |k, v|
      result[k.to_s] = options ? v.as_json(options.dup) : v.as_json
    end
    result
  end
end
```

`block in as_json`

Using the gem better errors, I tried to see if there is any more obvious origin. It seems to start in something related to database. 

![image](https://github.com/rails/rails/assets/7834279/f0ed57d6-c391-4e5e-9638-be90d4704a40)
"
